// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/data/experimental/snapshot.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	framework "github.com/tensorflow/tensorflow/tensorflow/go/core/framework"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Each SnapshotRecord represents one batch of pre-processed input data. A batch
// consists of a list of tensors that we encode as TensorProtos. This message
// doesn't store the structure of the batch.
type SnapshotRecord struct {
	Tensor               []*framework.TensorProto `protobuf:"bytes,1,rep,name=tensor,proto3" json:"tensor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SnapshotRecord) Reset()         { *m = SnapshotRecord{} }
func (m *SnapshotRecord) String() string { return proto.CompactTextString(m) }
func (*SnapshotRecord) ProtoMessage()    {}
func (*SnapshotRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04fc05ff4f7927d, []int{0}
}

func (m *SnapshotRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRecord.Unmarshal(m, b)
}
func (m *SnapshotRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRecord.Marshal(b, m, deterministic)
}
func (m *SnapshotRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRecord.Merge(m, src)
}
func (m *SnapshotRecord) XXX_Size() int {
	return xxx_messageInfo_SnapshotRecord.Size(m)
}
func (m *SnapshotRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRecord proto.InternalMessageInfo

func (m *SnapshotRecord) GetTensor() []*framework.TensorProto {
	if m != nil {
		return m.Tensor
	}
	return nil
}

// This stores the metadata information present in each snapshot record.
type SnapshotMetadataRecord struct {
	GraphHash            string   `protobuf:"bytes,1,opt,name=graph_hash,json=graphHash,proto3" json:"graph_hash,omitempty"`
	RunId                string   `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	CreationTimestamp    int64    `protobuf:"varint,3,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	Finalized            bool     `protobuf:"varint,1000,opt,name=finalized,proto3" json:"finalized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotMetadataRecord) Reset()         { *m = SnapshotMetadataRecord{} }
func (m *SnapshotMetadataRecord) String() string { return proto.CompactTextString(m) }
func (*SnapshotMetadataRecord) ProtoMessage()    {}
func (*SnapshotMetadataRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04fc05ff4f7927d, []int{1}
}

func (m *SnapshotMetadataRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotMetadataRecord.Unmarshal(m, b)
}
func (m *SnapshotMetadataRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotMetadataRecord.Marshal(b, m, deterministic)
}
func (m *SnapshotMetadataRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotMetadataRecord.Merge(m, src)
}
func (m *SnapshotMetadataRecord) XXX_Size() int {
	return xxx_messageInfo_SnapshotMetadataRecord.Size(m)
}
func (m *SnapshotMetadataRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotMetadataRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotMetadataRecord proto.InternalMessageInfo

func (m *SnapshotMetadataRecord) GetGraphHash() string {
	if m != nil {
		return m.GraphHash
	}
	return ""
}

func (m *SnapshotMetadataRecord) GetRunId() string {
	if m != nil {
		return m.RunId
	}
	return ""
}

func (m *SnapshotMetadataRecord) GetCreationTimestamp() int64 {
	if m != nil {
		return m.CreationTimestamp
	}
	return 0
}

func (m *SnapshotMetadataRecord) GetFinalized() bool {
	if m != nil {
		return m.Finalized
	}
	return false
}

func init() {
	proto.RegisterType((*SnapshotRecord)(nil), "tensorflow.data.experimental.SnapshotRecord")
	proto.RegisterType((*SnapshotMetadataRecord)(nil), "tensorflow.data.experimental.SnapshotMetadataRecord")
}

func init() {
	proto.RegisterFile("tensorflow/core/protobuf/data/experimental/snapshot.proto", fileDescriptor_e04fc05ff4f7927d)
}

var fileDescriptor_e04fc05ff4f7927d = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x89, 0x83, 0xa3, 0x13, 0x41, 0x30, 0xa0, 0x16, 0x71, 0xa0, 0xcc, 0x42, 0xba, 0xb1,
	0x01, 0x5d, 0x09, 0x22, 0xe8, 0x4a, 0x17, 0x82, 0xd4, 0x59, 0xb9, 0x29, 0xb7, 0x6d, 0xda, 0x04,
	0xdb, 0xa4, 0xdc, 0xa4, 0x8c, 0xf8, 0x2c, 0x3e, 0xa0, 0x8f, 0x21, 0xfd, 0x63, 0xaa, 0xb8, 0x3b,
	0xdc, 0xf3, 0xdd, 0x2f, 0x21, 0xa1, 0x37, 0x4e, 0x68, 0x6b, 0x30, 0x2f, 0xcd, 0x86, 0xa7, 0x06,
	0x05, 0xaf, 0xd1, 0x38, 0x93, 0x34, 0x39, 0xcf, 0xc0, 0x01, 0x17, 0x1f, 0xb5, 0x40, 0x55, 0x09,
	0xed, 0xa0, 0xe4, 0x56, 0x43, 0x6d, 0xa5, 0x71, 0x61, 0xc7, 0xb0, 0xf3, 0xed, 0x6a, 0xd8, 0xc2,
	0xe1, 0x14, 0x3e, 0xbb, 0xf8, 0x2b, 0xce, 0x11, 0x2a, 0xb1, 0x31, 0xf8, 0xce, 0xfb, 0xa6, 0xb7,
	0xac, 0xee, 0xe9, 0xe1, 0xeb, 0xe0, 0x8d, 0x44, 0x6a, 0x30, 0x63, 0x9c, 0xce, 0x7b, 0xc2, 0x23,
	0xfe, 0x2c, 0x38, 0xb8, 0x3a, 0x0d, 0x27, 0x07, 0xad, 0xbb, 0xf8, 0xd2, 0xae, 0x46, 0x03, 0xb6,
	0xfa, 0x22, 0xf4, 0x64, 0x74, 0x3c, 0x0b, 0x07, 0xed, 0x65, 0x06, 0xd7, 0x92, 0xd2, 0x02, 0xa1,
	0x96, 0xb1, 0x04, 0x2b, 0x3d, 0xe2, 0x93, 0x60, 0x11, 0x2d, 0xba, 0xc9, 0x23, 0x58, 0xc9, 0x8e,
	0xe9, 0x1c, 0x1b, 0x1d, 0xab, 0xcc, 0xdb, 0xe9, 0xaa, 0x5d, 0x6c, 0xf4, 0x53, 0xc6, 0x2e, 0x29,
	0x4b, 0x51, 0x80, 0x53, 0x46, 0xc7, 0x4e, 0x55, 0xc2, 0x3a, 0xa8, 0x6a, 0x6f, 0xe6, 0x93, 0x60,
	0x16, 0x1d, 0x8d, 0xcd, 0x7a, 0x2c, 0xd8, 0x92, 0x2e, 0x72, 0xa5, 0xa1, 0x54, 0x9f, 0x22, 0xf3,
	0xbe, 0xf7, 0x7c, 0x12, 0xec, 0x47, 0xdb, 0xc9, 0xc3, 0xdd, 0xdb, 0x6d, 0xa1, 0x9c, 0x6c, 0x92,
	0x30, 0x35, 0x15, 0x9f, 0x3c, 0xcb, 0xff, 0xb1, 0x30, 0xbf, 0x3f, 0x22, 0x99, 0x77, 0xe9, 0xfa,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x28, 0xb8, 0xf1, 0x9b, 0xab, 0x01, 0x00, 0x00,
}
