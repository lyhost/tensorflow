// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/python/training/checkpoint_state.proto

package training

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Protocol buffer representing the checkpoint state.
type CheckpointState struct {
	// Path to the most-recent model checkpoint.
	ModelCheckpointPath string `protobuf:"bytes,1,opt,name=model_checkpoint_path,json=modelCheckpointPath,proto3" json:"model_checkpoint_path,omitempty"`
	// Paths to all not-yet-deleted model checkpoints, sorted from oldest to
	// newest.
	// Note that the value of model_checkpoint_path should be the last item in
	// this list.
	AllModelCheckpointPaths []string `protobuf:"bytes,2,rep,name=all_model_checkpoint_paths,json=allModelCheckpointPaths,proto3" json:"all_model_checkpoint_paths,omitempty"`
	// Unix timestamps corresponding to all_model_checkpoint_paths, indicating
	// when each checkpoint was created.
	AllModelCheckpointTimestamps []float64 `protobuf:"fixed64,3,rep,packed,name=all_model_checkpoint_timestamps,json=allModelCheckpointTimestamps,proto3" json:"all_model_checkpoint_timestamps,omitempty"`
	// Unix timestamp indicating the creation time for the last preserved
	// checkpoint.
	LastPreservedTimestamp float64  `protobuf:"fixed64,4,opt,name=last_preserved_timestamp,json=lastPreservedTimestamp,proto3" json:"last_preserved_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CheckpointState) Reset()         { *m = CheckpointState{} }
func (m *CheckpointState) String() string { return proto.CompactTextString(m) }
func (*CheckpointState) ProtoMessage()    {}
func (*CheckpointState) Descriptor() ([]byte, []int) {
	return fileDescriptor_51f22ad73f89d17e, []int{0}
}

func (m *CheckpointState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckpointState.Unmarshal(m, b)
}
func (m *CheckpointState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckpointState.Marshal(b, m, deterministic)
}
func (m *CheckpointState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckpointState.Merge(m, src)
}
func (m *CheckpointState) XXX_Size() int {
	return xxx_messageInfo_CheckpointState.Size(m)
}
func (m *CheckpointState) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckpointState.DiscardUnknown(m)
}

var xxx_messageInfo_CheckpointState proto.InternalMessageInfo

func (m *CheckpointState) GetModelCheckpointPath() string {
	if m != nil {
		return m.ModelCheckpointPath
	}
	return ""
}

func (m *CheckpointState) GetAllModelCheckpointPaths() []string {
	if m != nil {
		return m.AllModelCheckpointPaths
	}
	return nil
}

func (m *CheckpointState) GetAllModelCheckpointTimestamps() []float64 {
	if m != nil {
		return m.AllModelCheckpointTimestamps
	}
	return nil
}

func (m *CheckpointState) GetLastPreservedTimestamp() float64 {
	if m != nil {
		return m.LastPreservedTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*CheckpointState)(nil), "tensorflow.CheckpointState")
}

func init() {
	proto.RegisterFile("tensorflow/python/training/checkpoint_state.proto", fileDescriptor_51f22ad73f89d17e)
}

var fileDescriptor_51f22ad73f89d17e = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd0, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0x06, 0x70, 0xd2, 0x13, 0xa1, 0x59, 0x84, 0x88, 0x1a, 0x44, 0xf0, 0x70, 0xba, 0xa9, 0x41,
	0x5d, 0x04, 0x37, 0x8b, 0xe0, 0x22, 0x94, 0xd3, 0xc9, 0xe5, 0x48, 0xaf, 0xcf, 0x4b, 0x30, 0xc9,
	0x0b, 0xc9, 0x53, 0x71, 0xf6, 0x9f, 0x76, 0x94, 0x16, 0xbc, 0x2b, 0xf6, 0xb6, 0x07, 0xdf, 0xf7,
	0x7b, 0xc3, 0xc7, 0x2f, 0x09, 0x42, 0xc6, 0xf4, 0xea, 0xf0, 0x53, 0xc5, 0x2f, 0x32, 0x18, 0x14,
	0x25, 0x6d, 0x83, 0x0d, 0x9d, 0x6a, 0x0d, 0xb4, 0x6f, 0x11, 0x6d, 0xa0, 0x26, 0x93, 0x26, 0x98,
	0xc5, 0x84, 0x84, 0x82, 0x0f, 0xe4, 0xe2, 0x7b, 0xc2, 0x0f, 0xe6, 0x7d, 0xed, 0x69, 0xdd, 0x12,
	0x57, 0xfc, 0xc8, 0xe3, 0x0a, 0x5c, 0xb3, 0xe5, 0xa3, 0x26, 0x23, 0x59, 0xc9, 0xaa, 0x69, 0x7d,
	0xb8, 0x09, 0x07, 0xb4, 0xd0, 0x64, 0xc4, 0x2d, 0x3f, 0xd5, 0xce, 0x35, 0xa3, 0x2e, 0xcb, 0x49,
	0x59, 0x54, 0xd3, 0xfa, 0x44, 0x3b, 0xf7, 0xb8, 0x6b, 0xb3, 0xb8, 0xe7, 0xe7, 0xa3, 0x98, 0xac,
	0x87, 0x4c, 0xda, 0xc7, 0x2c, 0x8b, 0xb2, 0xa8, 0x58, 0x7d, 0xb6, 0xfb, 0xe1, 0xb9, 0xef, 0x88,
	0x1b, 0x2e, 0x9d, 0xce, 0xd4, 0xc4, 0x04, 0x19, 0xd2, 0x07, 0xac, 0x86, 0x07, 0x72, 0xaf, 0x64,
	0x15, 0xab, 0x8f, 0xd7, 0xf9, 0xe2, 0x2f, 0xee, 0xe9, 0xdd, 0xc3, 0xcb, 0xbc, 0xb3, 0x64, 0xde,
	0x97, 0xb3, 0x16, 0xbd, 0xda, 0x5a, 0x74, 0xfc, 0xec, 0x50, 0xb5, 0x98, 0xe0, 0xff, 0xde, 0x3f,
	0x8c, 0x2d, 0xf7, 0x37, 0x13, 0x5f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x3a, 0x86, 0xf5,
	0x97, 0x01, 0x00, 0x00,
}
