// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/compiler/jit/xla_activity.proto

package jit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protobuf "github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Summarizes the results of auto-clustering a TensorFlow graph.
//
// Next ID: 5
type XlaAutoClusteringSummary struct {
	// The number of nodes in the graph that are not inside an XLA cluster.
	UnclusteredNodeCount int32 `protobuf:"varint,1,opt,name=unclustered_node_count,json=unclusteredNodeCount,proto3" json:"unclustered_node_count,omitempty"`
	// The number of nodes in the graph that are in an XLA cluster.
	ClusteredNodeCount int32 `protobuf:"varint,2,opt,name=clustered_node_count,json=clusteredNodeCount,proto3" json:"clustered_node_count,omitempty"`
	// All of the XLA clusters in the TF graph.
	Clusters []*XlaAutoClusteringSummary_Cluster `protobuf:"bytes,3,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// A histogram of the TF operations that were not clustered.
	UnclusteredOpHistogram []*XlaAutoClusteringSummary_OpAndCount `protobuf:"bytes,4,rep,name=unclustered_op_histogram,json=unclusteredOpHistogram,proto3" json:"unclustered_op_histogram,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                               `json:"-"`
	XXX_unrecognized       []byte                                 `json:"-"`
	XXX_sizecache          int32                                  `json:"-"`
}

func (m *XlaAutoClusteringSummary) Reset()         { *m = XlaAutoClusteringSummary{} }
func (m *XlaAutoClusteringSummary) String() string { return proto.CompactTextString(m) }
func (*XlaAutoClusteringSummary) ProtoMessage()    {}
func (*XlaAutoClusteringSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5955a294c0e52d2b, []int{0}
}

func (m *XlaAutoClusteringSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlaAutoClusteringSummary.Unmarshal(m, b)
}
func (m *XlaAutoClusteringSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlaAutoClusteringSummary.Marshal(b, m, deterministic)
}
func (m *XlaAutoClusteringSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlaAutoClusteringSummary.Merge(m, src)
}
func (m *XlaAutoClusteringSummary) XXX_Size() int {
	return xxx_messageInfo_XlaAutoClusteringSummary.Size(m)
}
func (m *XlaAutoClusteringSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_XlaAutoClusteringSummary.DiscardUnknown(m)
}

var xxx_messageInfo_XlaAutoClusteringSummary proto.InternalMessageInfo

func (m *XlaAutoClusteringSummary) GetUnclusteredNodeCount() int32 {
	if m != nil {
		return m.UnclusteredNodeCount
	}
	return 0
}

func (m *XlaAutoClusteringSummary) GetClusteredNodeCount() int32 {
	if m != nil {
		return m.ClusteredNodeCount
	}
	return 0
}

func (m *XlaAutoClusteringSummary) GetClusters() []*XlaAutoClusteringSummary_Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *XlaAutoClusteringSummary) GetUnclusteredOpHistogram() []*XlaAutoClusteringSummary_OpAndCount {
	if m != nil {
		return m.UnclusteredOpHistogram
	}
	return nil
}

// Represents a single element in a histogram of ops ("op" as in "TensorFlow
// operation").
//
// Next ID: 3
type XlaAutoClusteringSummary_OpAndCount struct {
	// The TensorFlow operation (like MatMult, Add etc.)
	Op string `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	// The number of times this occurs.
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XlaAutoClusteringSummary_OpAndCount) Reset()         { *m = XlaAutoClusteringSummary_OpAndCount{} }
func (m *XlaAutoClusteringSummary_OpAndCount) String() string { return proto.CompactTextString(m) }
func (*XlaAutoClusteringSummary_OpAndCount) ProtoMessage()    {}
func (*XlaAutoClusteringSummary_OpAndCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_5955a294c0e52d2b, []int{0, 0}
}

func (m *XlaAutoClusteringSummary_OpAndCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount.Unmarshal(m, b)
}
func (m *XlaAutoClusteringSummary_OpAndCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount.Marshal(b, m, deterministic)
}
func (m *XlaAutoClusteringSummary_OpAndCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount.Merge(m, src)
}
func (m *XlaAutoClusteringSummary_OpAndCount) XXX_Size() int {
	return xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount.Size(m)
}
func (m *XlaAutoClusteringSummary_OpAndCount) XXX_DiscardUnknown() {
	xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount.DiscardUnknown(m)
}

var xxx_messageInfo_XlaAutoClusteringSummary_OpAndCount proto.InternalMessageInfo

func (m *XlaAutoClusteringSummary_OpAndCount) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *XlaAutoClusteringSummary_OpAndCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Describes a single XLA cluster.
//
// Next ID: 4
type XlaAutoClusteringSummary_Cluster struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The number of nodes in the cluster.
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// A histogram of the TF operations in this cluster.
	OpHistogram          []*XlaAutoClusteringSummary_OpAndCount `protobuf:"bytes,3,rep,name=op_histogram,json=opHistogram,proto3" json:"op_histogram,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *XlaAutoClusteringSummary_Cluster) Reset()         { *m = XlaAutoClusteringSummary_Cluster{} }
func (m *XlaAutoClusteringSummary_Cluster) String() string { return proto.CompactTextString(m) }
func (*XlaAutoClusteringSummary_Cluster) ProtoMessage()    {}
func (*XlaAutoClusteringSummary_Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_5955a294c0e52d2b, []int{0, 1}
}

func (m *XlaAutoClusteringSummary_Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlaAutoClusteringSummary_Cluster.Unmarshal(m, b)
}
func (m *XlaAutoClusteringSummary_Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlaAutoClusteringSummary_Cluster.Marshal(b, m, deterministic)
}
func (m *XlaAutoClusteringSummary_Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlaAutoClusteringSummary_Cluster.Merge(m, src)
}
func (m *XlaAutoClusteringSummary_Cluster) XXX_Size() int {
	return xxx_messageInfo_XlaAutoClusteringSummary_Cluster.Size(m)
}
func (m *XlaAutoClusteringSummary_Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_XlaAutoClusteringSummary_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_XlaAutoClusteringSummary_Cluster proto.InternalMessageInfo

func (m *XlaAutoClusteringSummary_Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XlaAutoClusteringSummary_Cluster) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *XlaAutoClusteringSummary_Cluster) GetOpHistogram() []*XlaAutoClusteringSummary_OpAndCount {
	if m != nil {
		return m.OpHistogram
	}
	return nil
}

// Listeners listening for auto clustering events get messages of this type.
//
// Next ID: 4
type XlaAutoClusteringActivity struct {
	// The value of GlobalJitLevel, as determined by `GetGlobalJitLevelForGraph`.
	// This determines if global auto-clustering is enabled.
	GlobalJitLevel protobuf.OptimizerOptions_GlobalJitLevel `protobuf:"varint,1,opt,name=global_jit_level,json=globalJitLevel,proto3,enum=tensorflow.OptimizerOptions_GlobalJitLevel" json:"global_jit_level,omitempty"`
	// Whether --tf_xla_cpu_global_jit is enabled in TF_XLA_FLAGS.
	CpuGlobalJitEnabled  bool                      `protobuf:"varint,2,opt,name=cpu_global_jit_enabled,json=cpuGlobalJitEnabled,proto3" json:"cpu_global_jit_enabled,omitempty"`
	Summary              *XlaAutoClusteringSummary `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *XlaAutoClusteringActivity) Reset()         { *m = XlaAutoClusteringActivity{} }
func (m *XlaAutoClusteringActivity) String() string { return proto.CompactTextString(m) }
func (*XlaAutoClusteringActivity) ProtoMessage()    {}
func (*XlaAutoClusteringActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5955a294c0e52d2b, []int{1}
}

func (m *XlaAutoClusteringActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlaAutoClusteringActivity.Unmarshal(m, b)
}
func (m *XlaAutoClusteringActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlaAutoClusteringActivity.Marshal(b, m, deterministic)
}
func (m *XlaAutoClusteringActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlaAutoClusteringActivity.Merge(m, src)
}
func (m *XlaAutoClusteringActivity) XXX_Size() int {
	return xxx_messageInfo_XlaAutoClusteringActivity.Size(m)
}
func (m *XlaAutoClusteringActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_XlaAutoClusteringActivity.DiscardUnknown(m)
}

var xxx_messageInfo_XlaAutoClusteringActivity proto.InternalMessageInfo

func (m *XlaAutoClusteringActivity) GetGlobalJitLevel() protobuf.OptimizerOptions_GlobalJitLevel {
	if m != nil {
		return m.GlobalJitLevel
	}
	return protobuf.OptimizerOptions_DEFAULT
}

func (m *XlaAutoClusteringActivity) GetCpuGlobalJitEnabled() bool {
	if m != nil {
		return m.CpuGlobalJitEnabled
	}
	return false
}

func (m *XlaAutoClusteringActivity) GetSummary() *XlaAutoClusteringSummary {
	if m != nil {
		return m.Summary
	}
	return nil
}

// Listeners listening for JIT compilation events get messages of this type.
// Each instance of XlaJitCompilationActivity corresponds to a single
// compilation of a single XLA cluster.  E.g. if a graph has two clusters, A and
// B, and A is compiled 5 times and B is compiled 2 times then we will generate
// 7 instances of XlaJitCompilationActivity.
//
// Next ID: 5
type XlaJitCompilationActivity struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// The number of time this cluster has been compiled.
	CompileCount int32 `protobuf:"varint,2,opt,name=compile_count,json=compileCount,proto3" json:"compile_count,omitempty"`
	// Microseconds spent in the individual compilation being reported.
	CompileTimeUs int64 `protobuf:"varint,3,opt,name=compile_time_us,json=compileTimeUs,proto3" json:"compile_time_us,omitempty"`
	// Total microseconds spent in (re-)compiling this cluster so far.
	CumulativeCompileTimeUs int64    `protobuf:"varint,4,opt,name=cumulative_compile_time_us,json=cumulativeCompileTimeUs,proto3" json:"cumulative_compile_time_us,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *XlaJitCompilationActivity) Reset()         { *m = XlaJitCompilationActivity{} }
func (m *XlaJitCompilationActivity) String() string { return proto.CompactTextString(m) }
func (*XlaJitCompilationActivity) ProtoMessage()    {}
func (*XlaJitCompilationActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5955a294c0e52d2b, []int{2}
}

func (m *XlaJitCompilationActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XlaJitCompilationActivity.Unmarshal(m, b)
}
func (m *XlaJitCompilationActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XlaJitCompilationActivity.Marshal(b, m, deterministic)
}
func (m *XlaJitCompilationActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XlaJitCompilationActivity.Merge(m, src)
}
func (m *XlaJitCompilationActivity) XXX_Size() int {
	return xxx_messageInfo_XlaJitCompilationActivity.Size(m)
}
func (m *XlaJitCompilationActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_XlaJitCompilationActivity.DiscardUnknown(m)
}

var xxx_messageInfo_XlaJitCompilationActivity proto.InternalMessageInfo

func (m *XlaJitCompilationActivity) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *XlaJitCompilationActivity) GetCompileCount() int32 {
	if m != nil {
		return m.CompileCount
	}
	return 0
}

func (m *XlaJitCompilationActivity) GetCompileTimeUs() int64 {
	if m != nil {
		return m.CompileTimeUs
	}
	return 0
}

func (m *XlaJitCompilationActivity) GetCumulativeCompileTimeUs() int64 {
	if m != nil {
		return m.CumulativeCompileTimeUs
	}
	return 0
}

func init() {
	proto.RegisterType((*XlaAutoClusteringSummary)(nil), "tensorflow.XlaAutoClusteringSummary")
	proto.RegisterType((*XlaAutoClusteringSummary_OpAndCount)(nil), "tensorflow.XlaAutoClusteringSummary.OpAndCount")
	proto.RegisterType((*XlaAutoClusteringSummary_Cluster)(nil), "tensorflow.XlaAutoClusteringSummary.Cluster")
	proto.RegisterType((*XlaAutoClusteringActivity)(nil), "tensorflow.XlaAutoClusteringActivity")
	proto.RegisterType((*XlaJitCompilationActivity)(nil), "tensorflow.XlaJitCompilationActivity")
}

func init() {
	proto.RegisterFile("tensorflow/compiler/jit/xla_activity.proto", fileDescriptor_5955a294c0e52d2b)
}

var fileDescriptor_5955a294c0e52d2b = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xc7, 0x69, 0xd3, 0x75, 0xd7, 0xd3, 0x5a, 0x65, 0x2c, 0x6b, 0xec, 0x55, 0xad, 0x1f, 0x14,
	0x95, 0x44, 0xba, 0xde, 0x09, 0x62, 0xb7, 0x88, 0xcb, 0x22, 0x5b, 0x88, 0x2e, 0x88, 0x37, 0x21,
	0x4d, 0xa7, 0xd9, 0x59, 0xe6, 0x8b, 0x64, 0xa6, 0xba, 0x7b, 0xef, 0xbb, 0xf9, 0x26, 0x3e, 0x80,
	0x2f, 0x20, 0x99, 0x4c, 0xdb, 0x09, 0x56, 0x58, 0xbc, 0x3b, 0x39, 0x73, 0x7e, 0x27, 0xff, 0x7f,
	0xce, 0x9c, 0xc0, 0x73, 0x85, 0x79, 0x21, 0xf2, 0x25, 0x15, 0xdf, 0xc2, 0x54, 0x30, 0x49, 0x28,
	0xce, 0xc3, 0x4b, 0xa2, 0xc2, 0xef, 0x34, 0x89, 0x93, 0x54, 0x91, 0x15, 0x51, 0x57, 0x81, 0xcc,
	0x85, 0x12, 0x08, 0xb6, 0xb5, 0xfd, 0xa7, 0x35, 0x2e, 0xc7, 0xa1, 0x29, 0x99, 0xeb, 0x65, 0x98,
	0x0a, 0xbe, 0x24, 0x59, 0x85, 0x0c, 0x7f, 0x7b, 0xe0, 0x7f, 0xa1, 0xc9, 0x44, 0x2b, 0x31, 0xa5,
	0xba, 0x50, 0x38, 0x27, 0x3c, 0xfb, 0xa4, 0x19, 0x4b, 0xf2, 0x2b, 0xf4, 0x1a, 0x0e, 0x35, 0x4f,
	0xab, 0x34, 0x5e, 0xc4, 0x5c, 0x2c, 0x70, 0x9c, 0x0a, 0xcd, 0x95, 0xdf, 0x18, 0x34, 0x46, 0x7b,
	0x51, 0xcf, 0x39, 0x3d, 0x13, 0x0b, 0x3c, 0x2d, 0xcf, 0xd0, 0x2b, 0xe8, 0xed, 0x64, 0x9a, 0x86,
	0x41, 0x3b, 0x88, 0x13, 0x38, 0xb0, 0xd9, 0xc2, 0xf7, 0x06, 0xde, 0xa8, 0x3d, 0x7e, 0x19, 0x6c,
	0xe5, 0x07, 0xff, 0xd2, 0x17, 0xd8, 0x4c, 0xb4, 0xa1, 0x11, 0x01, 0xdf, 0x55, 0x2c, 0x64, 0x7c,
	0x41, 0x0a, 0x25, 0xb2, 0x3c, 0x61, 0x7e, 0xcb, 0x74, 0x0e, 0x6f, 0xd4, 0x79, 0x26, 0x27, 0x7c,
	0x61, 0xc4, 0x45, 0xee, 0x27, 0x98, 0xc9, 0x93, 0x75, 0xbb, 0xfe, 0x18, 0x60, 0x5b, 0x85, 0xba,
	0xd0, 0x14, 0xd2, 0x7c, 0x96, 0xdb, 0x51, 0x53, 0x48, 0xd4, 0x83, 0x3d, 0xd7, 0x75, 0xf5, 0xd0,
	0xff, 0xd1, 0x80, 0x7d, 0xfb, 0x32, 0x84, 0xa0, 0xc5, 0x13, 0x86, 0x2d, 0x63, 0xe2, 0x32, 0x57,
	0x90, 0x6b, 0x6c, 0x21, 0x13, 0xa3, 0x08, 0x3a, 0x35, 0x1b, 0xde, 0xff, 0xd9, 0x68, 0x8b, 0xad,
	0xf6, 0xe1, 0xaf, 0x06, 0x3c, 0xfc, 0x0b, 0x9a, 0xd8, 0xcb, 0x84, 0xce, 0xe1, 0x5e, 0x46, 0xc5,
	0x3c, 0xa1, 0xf1, 0x25, 0x51, 0x31, 0xc5, 0x2b, 0x4c, 0x8d, 0xca, 0xee, 0xf8, 0x85, 0xfb, 0xd6,
	0x99, 0x54, 0x84, 0x91, 0x6b, 0x9c, 0x97, 0x81, 0xe0, 0x45, 0xf0, 0xc1, 0x40, 0xa7, 0x44, 0x7d,
	0x2c, 0x91, 0xa8, 0x9b, 0xd5, 0x9e, 0xd1, 0x11, 0x1c, 0xa6, 0x52, 0xc7, 0x4e, 0x6b, 0xcc, 0x93,
	0x39, 0xc5, 0x0b, 0x63, 0xf7, 0x20, 0xba, 0x9f, 0x4a, 0xbd, 0x69, 0xf1, 0xbe, 0x3a, 0x42, 0x6f,
	0x61, 0xbf, 0xa8, 0xcc, 0xf8, 0xde, 0xa0, 0x31, 0x6a, 0x8f, 0x9f, 0xdc, 0xc4, 0x78, 0xb4, 0x86,
	0x86, 0x3f, 0x2b, 0xa7, 0xa7, 0x44, 0x4d, 0xcd, 0xf2, 0x24, 0xa5, 0xd4, 0x8d, 0xd3, 0x47, 0xd0,
	0xb1, 0xb3, 0x8d, 0x9d, 0x59, 0xb4, 0x6d, 0xee, 0xac, 0x1c, 0xc9, 0x63, 0xb8, 0x63, 0xd7, 0xae,
	0x76, 0x8d, 0x3b, 0x36, 0x59, 0x4d, 0xff, 0x19, 0xdc, 0x5d, 0x17, 0x29, 0xc2, 0x70, 0xac, 0x0b,
	0xa3, 0xd6, 0x8b, 0xd6, 0xec, 0x67, 0xc2, 0xf0, 0x79, 0x81, 0xde, 0x40, 0x3f, 0xd5, 0x4c, 0x97,
	0x2a, 0x56, 0x65, 0xbf, 0x3a, 0xd2, 0x32, 0xc8, 0x83, 0x6d, 0xc5, 0xd4, 0x85, 0x8f, 0x8f, 0xbf,
	0xbe, 0xcb, 0x88, 0xba, 0xd0, 0xf3, 0x20, 0x15, 0x2c, 0x74, 0xd6, 0x7b, 0x77, 0x98, 0x89, 0x6a,
	0xef, 0xdd, 0x9f, 0xc6, 0xfc, 0x96, 0xd9, 0xfa, 0xa3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcf,
	0xa8, 0xf8, 0x4b, 0x56, 0x04, 0x00, 0x00,
}
