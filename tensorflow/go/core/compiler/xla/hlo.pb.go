// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/compiler/xla/service/hlo.proto

package xla

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HloInputOutputAliasProto_Kind int32

const (
	// Define a UNDEFINED_ALIAS equal to zero to get around the default-0 proto3
	// behavior and missing has_*() APIs.
	HloInputOutputAliasProto_UNDEFINED_ALIAS HloInputOutputAliasProto_Kind = 0
	// An alias setup by the user as must alias. A use setting USER_ALIAS is
	// expecting the designed output to be dropped over the given input
	// parameter number+index.
	HloInputOutputAliasProto_USER_ALIAS HloInputOutputAliasProto_Kind = 1
	// An alias setup by the compiler as part of its optimizations.
	HloInputOutputAliasProto_SYSTEM_ALIAS HloInputOutputAliasProto_Kind = 2
)

var HloInputOutputAliasProto_Kind_name = map[int32]string{
	0: "UNDEFINED_ALIAS",
	1: "USER_ALIAS",
	2: "SYSTEM_ALIAS",
}

var HloInputOutputAliasProto_Kind_value = map[string]int32{
	"UNDEFINED_ALIAS": 0,
	"USER_ALIAS":      1,
	"SYSTEM_ALIAS":    2,
}

func (x HloInputOutputAliasProto_Kind) String() string {
	return proto.EnumName(HloInputOutputAliasProto_Kind_name, int32(x))
}

func (HloInputOutputAliasProto_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{3, 0}
}

type HeapSimulatorTrace_Event_Kind int32

const (
	HeapSimulatorTrace_Event_ALLOC HeapSimulatorTrace_Event_Kind = 0
	HeapSimulatorTrace_Event_FREE  HeapSimulatorTrace_Event_Kind = 1
	// A buffer was shared with another (canonical) buffer. This is similar to
	// ALLOC, except that instead of allocating a new region of memory, the
	// memory region of the canonical buffer is directly re-used. Multiple
	// buffers may share with the same canonical buffer. The lifetime of the
	// canonical buffer is extended to the union of all lifetimes.
	HeapSimulatorTrace_Event_SHARE_WITH HeapSimulatorTrace_Event_Kind = 2
)

var HeapSimulatorTrace_Event_Kind_name = map[int32]string{
	0: "ALLOC",
	1: "FREE",
	2: "SHARE_WITH",
}

var HeapSimulatorTrace_Event_Kind_value = map[string]int32{
	"ALLOC":      0,
	"FREE":       1,
	"SHARE_WITH": 2,
}

func (x HeapSimulatorTrace_Event_Kind) String() string {
	return proto.EnumName(HeapSimulatorTrace_Event_Kind_name, int32(x))
}

func (HeapSimulatorTrace_Event_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{8, 0, 0}
}

// Serialization of HloInstruction.
// Next ID: 67
type HloInstructionProto struct {
	Name     string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Opcode   string      `protobuf:"bytes,2,opt,name=opcode,proto3" json:"opcode,omitempty"`
	Shape    *ShapeProto `protobuf:"bytes,3,opt,name=shape,proto3" json:"shape,omitempty"`
	Metadata *OpMetadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Literal, only present for kConstant.
	Literal *LiteralProto `protobuf:"bytes,8,opt,name=literal,proto3" json:"literal,omitempty"`
	// Parameter number is only present for kParameter.
	ParameterNumber int64 `protobuf:"varint,9,opt,name=parameter_number,json=parameterNumber,proto3" json:"parameter_number,omitempty"`
	// Fusion state, only present for kFusion.
	FusionKind string `protobuf:"bytes,11,opt,name=fusion_kind,json=fusionKind,proto3" json:"fusion_kind,omitempty"`
	// Index for kGetTupleElement.
	TupleIndex int64 `protobuf:"varint,13,opt,name=tuple_index,json=tupleIndex,proto3" json:"tuple_index,omitempty"`
	// Dimensions present for some operations that require reshaping or
	// broadcasting, including Reshape, Reduce, ReduceWindow, and Reverse.
	Dimensions []int64 `protobuf:"varint,14,rep,packed,name=dimensions,proto3" json:"dimensions,omitempty"`
	// Describes the window in a windowed operation such as convolution.
	Window *Window `protobuf:"bytes,15,opt,name=window,proto3" json:"window,omitempty"`
	// Describes the dimension numbers used for a convolution.
	ConvolutionDimensionNumbers *ConvolutionDimensionNumbers `protobuf:"bytes,16,opt,name=convolution_dimension_numbers,json=convolutionDimensionNumbers,proto3" json:"convolution_dimension_numbers,omitempty"`
	// The number of feature groups. Used for a convolution. Must be a divisor of
	// the input feature dimension and output feature dimension. If not specified,
	// it will use a default value of 1.
	FeatureGroupCount int64                                  `protobuf:"varint,50,opt,name=feature_group_count,json=featureGroupCount,proto3" json:"feature_group_count,omitempty"`
	BatchGroupCount   int64                                  `protobuf:"varint,58,opt,name=batch_group_count,json=batchGroupCount,proto3" json:"batch_group_count,omitempty"`
	SliceDimensions   []*HloInstructionProto_SliceDimensions `protobuf:"bytes,17,rep,name=slice_dimensions,json=sliceDimensions,proto3" json:"slice_dimensions,omitempty"`
	// The bit sizes for a reduce-precision operation.
	ExponentBits int32 `protobuf:"varint,18,opt,name=exponent_bits,json=exponentBits,proto3" json:"exponent_bits,omitempty"`
	MantissaBits int32 `protobuf:"varint,19,opt,name=mantissa_bits,json=mantissaBits,proto3" json:"mantissa_bits,omitempty"`
	// Describes the [start, start + size) range size for a dynamic slice
	// ('start' is specified dynamically in the second operand of the operation).
	DynamicSliceSizes []int64 `protobuf:"varint,20,rep,packed,name=dynamic_slice_sizes,json=dynamicSliceSizes,proto3" json:"dynamic_slice_sizes,omitempty"`
	// The padding configuration that describes the edge padding and interior
	// padding of this pad instruction. Only set for pad instructions.
	PaddingConfig *PaddingConfig `protobuf:"bytes,21,opt,name=padding_config,json=paddingConfig,proto3" json:"padding_config,omitempty"`
	// Outfeed configuration information, only present for kOutfeed.
	OutfeedConfig []byte `protobuf:"bytes,22,opt,name=outfeed_config,json=outfeedConfig,proto3" json:"outfeed_config,omitempty"`
	// The distribution requested for random number generation.
	// Only present for kRng.
	Distribution RandomDistribution `protobuf:"varint,23,opt,name=distribution,proto3,enum=xla.RandomDistribution" json:"distribution,omitempty"`
	// A small float number added to the variance to avoid divide-by-zero error.
	// Only present for kBatchNormTraining.
	Epsilon float32 `protobuf:"fixed32,24,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	// An integer value representing the index of the feature dimension.
	// Only present for kBatchNormTraining.
	FeatureIndex int64 `protobuf:"varint,25,opt,name=feature_index,json=featureIndex,proto3" json:"feature_index,omitempty"`
	// Represents a unique identifier for each Send/Recv instruction pair or
	// optionally for collective instructions (AllReduce, CollectivePermute,
	// AllToAll). Non-positive channel_id is equivalent to no channel id.
	ChannelId int64 `protobuf:"varint,26,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// The string representation of the infeed configuration.
	InfeedConfig []byte `protobuf:"bytes,27,opt,name=infeed_config,json=infeedConfig,proto3" json:"infeed_config,omitempty"`
	// Name of a external target (eg, global symbol) to call, only present for
	// kCustomCall.
	CustomCallTarget string `protobuf:"bytes,28,opt,name=custom_call_target,json=customCallTarget,proto3" json:"custom_call_target,omitempty"`
	// Shape of outfeed request.
	OutfeedShape *ShapeProto `protobuf:"bytes,29,opt,name=outfeed_shape,json=outfeedShape,proto3" json:"outfeed_shape,omitempty"`
	// Describes the dimension numbers used for a dot operation
	DotDimensionNumbers *DotDimensionNumbers `protobuf:"bytes,30,opt,name=dot_dimension_numbers,json=dotDimensionNumbers,proto3" json:"dot_dimension_numbers,omitempty"`
	// FFT type (FFT, IFFT, etc).
	FftType FftType `protobuf:"varint,31,opt,name=fft_type,json=fftType,proto3,enum=xla.FftType" json:"fft_type,omitempty"`
	// FFT length.
	FftLength []int64 `protobuf:"varint,32,rep,packed,name=fft_length,json=fftLength,proto3" json:"fft_length,omitempty"`
	// Comparison direction only used for kCompare.
	ComparisonDirection string `protobuf:"bytes,63,opt,name=comparison_direction,json=comparisonDirection,proto3" json:"comparison_direction,omitempty"`
	// Gather dimension numbers.
	GatherDimensionNumbers *GatherDimensionNumbers `protobuf:"bytes,33,opt,name=gather_dimension_numbers,json=gatherDimensionNumbers,proto3" json:"gather_dimension_numbers,omitempty"`
	GatherSliceSizes       []int64                 `protobuf:"varint,34,rep,packed,name=gather_slice_sizes,json=gatherSliceSizes,proto3" json:"gather_slice_sizes,omitempty"`
	// Compute Host.
	ChannelName    string `protobuf:"bytes,41,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	CostEstimateNs int64  `protobuf:"varint,42,opt,name=cost_estimate_ns,json=costEstimateNs,proto3" json:"cost_estimate_ns,omitempty"`
	// The id of this instruction.
	Id                    int64       `protobuf:"varint,35,opt,name=id,proto3" json:"id,omitempty"`
	OperandIds            []int64     `protobuf:"varint,36,rep,packed,name=operand_ids,json=operandIds,proto3" json:"operand_ids,omitempty"`
	ControlPredecessorIds []int64     `protobuf:"varint,37,rep,packed,name=control_predecessor_ids,json=controlPredecessorIds,proto3" json:"control_predecessor_ids,omitempty"`
	CalledComputationIds  []int64     `protobuf:"varint,38,rep,packed,name=called_computation_ids,json=calledComputationIds,proto3" json:"called_computation_ids,omitempty"`
	Sharding              *OpSharding `protobuf:"bytes,40,opt,name=sharding,proto3" json:"sharding,omitempty"`
	// Backend configuration for the instruction. Has backend-specific meaning.
	BackendConfig string `protobuf:"bytes,43,opt,name=backend_config,json=backendConfig,proto3" json:"backend_config,omitempty"`
	// Cross replica op fields.
	ReplicaGroups []*ReplicaGroup `protobuf:"bytes,49,rep,name=replica_groups,json=replicaGroups,proto3" json:"replica_groups,omitempty"`
	// Deprecated, but keeping it for backward compatibility. Use channel_id.
	// Non-positive all_reduce_id is equivalent to no all_reduce_id.
	AllReduceId int64 `protobuf:"varint,45,opt,name=all_reduce_id,json=allReduceId,proto3" json:"all_reduce_id,omitempty"` // Deprecated: Do not use.
	// Whether this Send/Recv instruction transfers data to/from the host. Only
	// present for Send and Recv instructions and their SendDone and RecvDone
	// partners.
	IsHostTransfer bool `protobuf:"varint,47,opt,name=is_host_transfer,json=isHostTransfer,proto3" json:"is_host_transfer,omitempty"`
	// Whether this Sort instruction should be stable.
	IsStable                bool                     `protobuf:"varint,60,opt,name=is_stable,json=isStable,proto3" json:"is_stable,omitempty"`
	ScatterDimensionNumbers *ScatterDimensionNumbers `protobuf:"bytes,48,opt,name=scatter_dimension_numbers,json=scatterDimensionNumbers,proto3" json:"scatter_dimension_numbers,omitempty"`
	// Precision configuration for the instruction. Has backend-specific meaning.
	PrecisionConfig *PrecisionConfig `protobuf:"bytes,51,opt,name=precision_config,json=precisionConfig,proto3" json:"precision_config,omitempty"`
	// Collective permute field.
	SourceTargetPairs []*SourceTarget `protobuf:"bytes,52,rep,name=source_target_pairs,json=sourceTargetPairs,proto3" json:"source_target_pairs,omitempty"`
	// Sharding for kDomain instructions.
	DomainEntrySharding *OpSharding `protobuf:"bytes,54,opt,name=domain_entry_sharding,json=domainEntrySharding,proto3" json:"domain_entry_sharding,omitempty"`
	DomainExitSharding  *OpSharding `protobuf:"bytes,55,opt,name=domain_exit_sharding,json=domainExitSharding,proto3" json:"domain_exit_sharding,omitempty"`
	// For custom call this indicates that the layouts are constrained. If
	// constrain_layout is true then the 'shape' field must contain a layout, and
	// 'operand_shapes_with_layout' must contain a shape with layout for each
	// operand.
	ConstrainLayout         bool          `protobuf:"varint,56,opt,name=constrain_layout,json=constrainLayout,proto3" json:"constrain_layout,omitempty"`
	OperandShapesWithLayout []*ShapeProto `protobuf:"bytes,57,rep,name=operand_shapes_with_layout,json=operandShapesWithLayout,proto3" json:"operand_shapes_with_layout,omitempty"`
	// Options for TriangularSolve
	TriangularSolveOptions *TriangularSolveOptions `protobuf:"bytes,59,opt,name=triangular_solve_options,json=triangularSolveOptions,proto3" json:"triangular_solve_options,omitempty"`
	// Options for Cholesky
	CholeskyOptions *CholeskyOptions `protobuf:"bytes,62,opt,name=cholesky_options,json=choleskyOptions,proto3" json:"cholesky_options,omitempty"`
	// Describes how parameters behave with regards to replicas.
	ParameterReplication *ParameterReplication `protobuf:"bytes,61,opt,name=parameter_replication,json=parameterReplication,proto3" json:"parameter_replication,omitempty"`
	// If set, the given instruction is run in parallel on e.g. multiple CPU
	// cores.  The outermost dimension gets split up into
	// outer_dimension_partitions[0] pieces, the next-outermost dim gets split
	// into outer_dimension_partitions[1] pieces, etc.
	//
	// It's illegal to partition a dimension into more shards than there are
	// elements in that dimension.
	OuterDimensionPartitions []int64 `protobuf:"varint,64,rep,packed,name=outer_dimension_partitions,json=outerDimensionPartitions,proto3" json:"outer_dimension_partitions,omitempty"`
	// Whether the kCustomCall instruction has side-effects, only present for
	// kCustomCall.
	CustomCallHasSideEffect bool `protobuf:"varint,65,opt,name=custom_call_has_side_effect,json=customCallHasSideEffect,proto3" json:"custom_call_has_side_effect,omitempty"`
	// The delta value for kRngGetAndUpdateState.
	Delta                int64    `protobuf:"varint,66,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloInstructionProto) Reset()         { *m = HloInstructionProto{} }
func (m *HloInstructionProto) String() string { return proto.CompactTextString(m) }
func (*HloInstructionProto) ProtoMessage()    {}
func (*HloInstructionProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{0}
}

func (m *HloInstructionProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloInstructionProto.Unmarshal(m, b)
}
func (m *HloInstructionProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloInstructionProto.Marshal(b, m, deterministic)
}
func (m *HloInstructionProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloInstructionProto.Merge(m, src)
}
func (m *HloInstructionProto) XXX_Size() int {
	return xxx_messageInfo_HloInstructionProto.Size(m)
}
func (m *HloInstructionProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloInstructionProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloInstructionProto proto.InternalMessageInfo

func (m *HloInstructionProto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HloInstructionProto) GetOpcode() string {
	if m != nil {
		return m.Opcode
	}
	return ""
}

func (m *HloInstructionProto) GetShape() *ShapeProto {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *HloInstructionProto) GetMetadata() *OpMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *HloInstructionProto) GetLiteral() *LiteralProto {
	if m != nil {
		return m.Literal
	}
	return nil
}

func (m *HloInstructionProto) GetParameterNumber() int64 {
	if m != nil {
		return m.ParameterNumber
	}
	return 0
}

func (m *HloInstructionProto) GetFusionKind() string {
	if m != nil {
		return m.FusionKind
	}
	return ""
}

func (m *HloInstructionProto) GetTupleIndex() int64 {
	if m != nil {
		return m.TupleIndex
	}
	return 0
}

func (m *HloInstructionProto) GetDimensions() []int64 {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *HloInstructionProto) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

func (m *HloInstructionProto) GetConvolutionDimensionNumbers() *ConvolutionDimensionNumbers {
	if m != nil {
		return m.ConvolutionDimensionNumbers
	}
	return nil
}

func (m *HloInstructionProto) GetFeatureGroupCount() int64 {
	if m != nil {
		return m.FeatureGroupCount
	}
	return 0
}

func (m *HloInstructionProto) GetBatchGroupCount() int64 {
	if m != nil {
		return m.BatchGroupCount
	}
	return 0
}

func (m *HloInstructionProto) GetSliceDimensions() []*HloInstructionProto_SliceDimensions {
	if m != nil {
		return m.SliceDimensions
	}
	return nil
}

func (m *HloInstructionProto) GetExponentBits() int32 {
	if m != nil {
		return m.ExponentBits
	}
	return 0
}

func (m *HloInstructionProto) GetMantissaBits() int32 {
	if m != nil {
		return m.MantissaBits
	}
	return 0
}

func (m *HloInstructionProto) GetDynamicSliceSizes() []int64 {
	if m != nil {
		return m.DynamicSliceSizes
	}
	return nil
}

func (m *HloInstructionProto) GetPaddingConfig() *PaddingConfig {
	if m != nil {
		return m.PaddingConfig
	}
	return nil
}

func (m *HloInstructionProto) GetOutfeedConfig() []byte {
	if m != nil {
		return m.OutfeedConfig
	}
	return nil
}

func (m *HloInstructionProto) GetDistribution() RandomDistribution {
	if m != nil {
		return m.Distribution
	}
	return RandomDistribution_RNG_INVALID
}

func (m *HloInstructionProto) GetEpsilon() float32 {
	if m != nil {
		return m.Epsilon
	}
	return 0
}

func (m *HloInstructionProto) GetFeatureIndex() int64 {
	if m != nil {
		return m.FeatureIndex
	}
	return 0
}

func (m *HloInstructionProto) GetChannelId() int64 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *HloInstructionProto) GetInfeedConfig() []byte {
	if m != nil {
		return m.InfeedConfig
	}
	return nil
}

func (m *HloInstructionProto) GetCustomCallTarget() string {
	if m != nil {
		return m.CustomCallTarget
	}
	return ""
}

func (m *HloInstructionProto) GetOutfeedShape() *ShapeProto {
	if m != nil {
		return m.OutfeedShape
	}
	return nil
}

func (m *HloInstructionProto) GetDotDimensionNumbers() *DotDimensionNumbers {
	if m != nil {
		return m.DotDimensionNumbers
	}
	return nil
}

func (m *HloInstructionProto) GetFftType() FftType {
	if m != nil {
		return m.FftType
	}
	return FftType_FFT
}

func (m *HloInstructionProto) GetFftLength() []int64 {
	if m != nil {
		return m.FftLength
	}
	return nil
}

func (m *HloInstructionProto) GetComparisonDirection() string {
	if m != nil {
		return m.ComparisonDirection
	}
	return ""
}

func (m *HloInstructionProto) GetGatherDimensionNumbers() *GatherDimensionNumbers {
	if m != nil {
		return m.GatherDimensionNumbers
	}
	return nil
}

func (m *HloInstructionProto) GetGatherSliceSizes() []int64 {
	if m != nil {
		return m.GatherSliceSizes
	}
	return nil
}

func (m *HloInstructionProto) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *HloInstructionProto) GetCostEstimateNs() int64 {
	if m != nil {
		return m.CostEstimateNs
	}
	return 0
}

func (m *HloInstructionProto) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HloInstructionProto) GetOperandIds() []int64 {
	if m != nil {
		return m.OperandIds
	}
	return nil
}

func (m *HloInstructionProto) GetControlPredecessorIds() []int64 {
	if m != nil {
		return m.ControlPredecessorIds
	}
	return nil
}

func (m *HloInstructionProto) GetCalledComputationIds() []int64 {
	if m != nil {
		return m.CalledComputationIds
	}
	return nil
}

func (m *HloInstructionProto) GetSharding() *OpSharding {
	if m != nil {
		return m.Sharding
	}
	return nil
}

func (m *HloInstructionProto) GetBackendConfig() string {
	if m != nil {
		return m.BackendConfig
	}
	return ""
}

func (m *HloInstructionProto) GetReplicaGroups() []*ReplicaGroup {
	if m != nil {
		return m.ReplicaGroups
	}
	return nil
}

// Deprecated: Do not use.
func (m *HloInstructionProto) GetAllReduceId() int64 {
	if m != nil {
		return m.AllReduceId
	}
	return 0
}

func (m *HloInstructionProto) GetIsHostTransfer() bool {
	if m != nil {
		return m.IsHostTransfer
	}
	return false
}

func (m *HloInstructionProto) GetIsStable() bool {
	if m != nil {
		return m.IsStable
	}
	return false
}

func (m *HloInstructionProto) GetScatterDimensionNumbers() *ScatterDimensionNumbers {
	if m != nil {
		return m.ScatterDimensionNumbers
	}
	return nil
}

func (m *HloInstructionProto) GetPrecisionConfig() *PrecisionConfig {
	if m != nil {
		return m.PrecisionConfig
	}
	return nil
}

func (m *HloInstructionProto) GetSourceTargetPairs() []*SourceTarget {
	if m != nil {
		return m.SourceTargetPairs
	}
	return nil
}

func (m *HloInstructionProto) GetDomainEntrySharding() *OpSharding {
	if m != nil {
		return m.DomainEntrySharding
	}
	return nil
}

func (m *HloInstructionProto) GetDomainExitSharding() *OpSharding {
	if m != nil {
		return m.DomainExitSharding
	}
	return nil
}

func (m *HloInstructionProto) GetConstrainLayout() bool {
	if m != nil {
		return m.ConstrainLayout
	}
	return false
}

func (m *HloInstructionProto) GetOperandShapesWithLayout() []*ShapeProto {
	if m != nil {
		return m.OperandShapesWithLayout
	}
	return nil
}

func (m *HloInstructionProto) GetTriangularSolveOptions() *TriangularSolveOptions {
	if m != nil {
		return m.TriangularSolveOptions
	}
	return nil
}

func (m *HloInstructionProto) GetCholeskyOptions() *CholeskyOptions {
	if m != nil {
		return m.CholeskyOptions
	}
	return nil
}

func (m *HloInstructionProto) GetParameterReplication() *ParameterReplication {
	if m != nil {
		return m.ParameterReplication
	}
	return nil
}

func (m *HloInstructionProto) GetOuterDimensionPartitions() []int64 {
	if m != nil {
		return m.OuterDimensionPartitions
	}
	return nil
}

func (m *HloInstructionProto) GetCustomCallHasSideEffect() bool {
	if m != nil {
		return m.CustomCallHasSideEffect
	}
	return false
}

func (m *HloInstructionProto) GetDelta() int64 {
	if m != nil {
		return m.Delta
	}
	return 0
}

// Describes the [begin, end) index range and stride for slices.
type HloInstructionProto_SliceDimensions struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Stride               int64    `protobuf:"varint,3,opt,name=stride,proto3" json:"stride,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloInstructionProto_SliceDimensions) Reset()         { *m = HloInstructionProto_SliceDimensions{} }
func (m *HloInstructionProto_SliceDimensions) String() string { return proto.CompactTextString(m) }
func (*HloInstructionProto_SliceDimensions) ProtoMessage()    {}
func (*HloInstructionProto_SliceDimensions) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{0, 0}
}

func (m *HloInstructionProto_SliceDimensions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloInstructionProto_SliceDimensions.Unmarshal(m, b)
}
func (m *HloInstructionProto_SliceDimensions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloInstructionProto_SliceDimensions.Marshal(b, m, deterministic)
}
func (m *HloInstructionProto_SliceDimensions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloInstructionProto_SliceDimensions.Merge(m, src)
}
func (m *HloInstructionProto_SliceDimensions) XXX_Size() int {
	return xxx_messageInfo_HloInstructionProto_SliceDimensions.Size(m)
}
func (m *HloInstructionProto_SliceDimensions) XXX_DiscardUnknown() {
	xxx_messageInfo_HloInstructionProto_SliceDimensions.DiscardUnknown(m)
}

var xxx_messageInfo_HloInstructionProto_SliceDimensions proto.InternalMessageInfo

func (m *HloInstructionProto_SliceDimensions) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *HloInstructionProto_SliceDimensions) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *HloInstructionProto_SliceDimensions) GetStride() int64 {
	if m != nil {
		return m.Stride
	}
	return 0
}

// Serialization of HloComputation.
type HloComputationProto struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The array of instructions is always in a valid dependency order, where
	// operands appear before their users.
	Instructions []*HloInstructionProto `protobuf:"bytes,2,rep,name=instructions,proto3" json:"instructions,omitempty"`
	ProgramShape *ProgramShapeProto     `protobuf:"bytes,4,opt,name=program_shape,json=programShape,proto3" json:"program_shape,omitempty"`
	// The id of this computation.
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the root of the computation.
	RootId               int64    `protobuf:"varint,6,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloComputationProto) Reset()         { *m = HloComputationProto{} }
func (m *HloComputationProto) String() string { return proto.CompactTextString(m) }
func (*HloComputationProto) ProtoMessage()    {}
func (*HloComputationProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{1}
}

func (m *HloComputationProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloComputationProto.Unmarshal(m, b)
}
func (m *HloComputationProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloComputationProto.Marshal(b, m, deterministic)
}
func (m *HloComputationProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloComputationProto.Merge(m, src)
}
func (m *HloComputationProto) XXX_Size() int {
	return xxx_messageInfo_HloComputationProto.Size(m)
}
func (m *HloComputationProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloComputationProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloComputationProto proto.InternalMessageInfo

func (m *HloComputationProto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HloComputationProto) GetInstructions() []*HloInstructionProto {
	if m != nil {
		return m.Instructions
	}
	return nil
}

func (m *HloComputationProto) GetProgramShape() *ProgramShapeProto {
	if m != nil {
		return m.ProgramShape
	}
	return nil
}

func (m *HloComputationProto) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HloComputationProto) GetRootId() int64 {
	if m != nil {
		return m.RootId
	}
	return 0
}

// Serialization of an HLO schedule. An HLO schedule contains a total order of
// instructions for each non-fusion computation in the module.
type HloScheduleProto struct {
	// Map from computation id to sequence.
	Sequences            map[int64]*HloScheduleProto_InstructionSequence `protobuf:"bytes,1,rep,name=sequences,proto3" json:"sequences,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *HloScheduleProto) Reset()         { *m = HloScheduleProto{} }
func (m *HloScheduleProto) String() string { return proto.CompactTextString(m) }
func (*HloScheduleProto) ProtoMessage()    {}
func (*HloScheduleProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{2}
}

func (m *HloScheduleProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloScheduleProto.Unmarshal(m, b)
}
func (m *HloScheduleProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloScheduleProto.Marshal(b, m, deterministic)
}
func (m *HloScheduleProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloScheduleProto.Merge(m, src)
}
func (m *HloScheduleProto) XXX_Size() int {
	return xxx_messageInfo_HloScheduleProto.Size(m)
}
func (m *HloScheduleProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloScheduleProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloScheduleProto proto.InternalMessageInfo

func (m *HloScheduleProto) GetSequences() map[int64]*HloScheduleProto_InstructionSequence {
	if m != nil {
		return m.Sequences
	}
	return nil
}

type HloScheduleProto_InstructionSequence struct {
	InstructionIds       []int64  `protobuf:"varint,1,rep,packed,name=instruction_ids,json=instructionIds,proto3" json:"instruction_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloScheduleProto_InstructionSequence) Reset()         { *m = HloScheduleProto_InstructionSequence{} }
func (m *HloScheduleProto_InstructionSequence) String() string { return proto.CompactTextString(m) }
func (*HloScheduleProto_InstructionSequence) ProtoMessage()    {}
func (*HloScheduleProto_InstructionSequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{2, 0}
}

func (m *HloScheduleProto_InstructionSequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloScheduleProto_InstructionSequence.Unmarshal(m, b)
}
func (m *HloScheduleProto_InstructionSequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloScheduleProto_InstructionSequence.Marshal(b, m, deterministic)
}
func (m *HloScheduleProto_InstructionSequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloScheduleProto_InstructionSequence.Merge(m, src)
}
func (m *HloScheduleProto_InstructionSequence) XXX_Size() int {
	return xxx_messageInfo_HloScheduleProto_InstructionSequence.Size(m)
}
func (m *HloScheduleProto_InstructionSequence) XXX_DiscardUnknown() {
	xxx_messageInfo_HloScheduleProto_InstructionSequence.DiscardUnknown(m)
}

var xxx_messageInfo_HloScheduleProto_InstructionSequence proto.InternalMessageInfo

func (m *HloScheduleProto_InstructionSequence) GetInstructionIds() []int64 {
	if m != nil {
		return m.InstructionIds
	}
	return nil
}

type HloInputOutputAliasProto struct {
	Entries              []*HloInputOutputAliasProto_AliasEntryProto `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *HloInputOutputAliasProto) Reset()         { *m = HloInputOutputAliasProto{} }
func (m *HloInputOutputAliasProto) String() string { return proto.CompactTextString(m) }
func (*HloInputOutputAliasProto) ProtoMessage()    {}
func (*HloInputOutputAliasProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{3}
}

func (m *HloInputOutputAliasProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloInputOutputAliasProto.Unmarshal(m, b)
}
func (m *HloInputOutputAliasProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloInputOutputAliasProto.Marshal(b, m, deterministic)
}
func (m *HloInputOutputAliasProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloInputOutputAliasProto.Merge(m, src)
}
func (m *HloInputOutputAliasProto) XXX_Size() int {
	return xxx_messageInfo_HloInputOutputAliasProto.Size(m)
}
func (m *HloInputOutputAliasProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloInputOutputAliasProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloInputOutputAliasProto proto.InternalMessageInfo

func (m *HloInputOutputAliasProto) GetEntries() []*HloInputOutputAliasProto_AliasEntryProto {
	if m != nil {
		return m.Entries
	}
	return nil
}

// The following proto describes a pair of aliased an input
// (described by parameter number and a ShapeIndex of the parameter)
// and an output (described by a ShapeIndex of the root
// instruction). For example:
//
// entry = {
//  output_shape_index={1},
//  parameter_number=0,
//  parameter_shape_index={1, 2},
// }
//
// This entry indicates that the first paremter's {1, 2} element is
// aliased with the {1} element of the root instruction.
type HloInputOutputAliasProto_AliasEntryProto struct {
	// ShapeIndex of the root hlo.
	OutputShapeIndex []int64 `protobuf:"varint,1,rep,packed,name=output_shape_index,json=outputShapeIndex,proto3" json:"output_shape_index,omitempty"`
	// Number of the parameter in entry computation.
	ParameterNumber int64 `protobuf:"varint,2,opt,name=parameter_number,json=parameterNumber,proto3" json:"parameter_number,omitempty"`
	// ShapeIndex of the parameter instruction.
	ParameterShapeIndex []int64 `protobuf:"varint,3,rep,packed,name=parameter_shape_index,json=parameterShapeIndex,proto3" json:"parameter_shape_index,omitempty"`
	// The kind of alias to be setup.
	Kind                 HloInputOutputAliasProto_Kind `protobuf:"varint,4,opt,name=kind,proto3,enum=xla.HloInputOutputAliasProto_Kind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *HloInputOutputAliasProto_AliasEntryProto) Reset() {
	*m = HloInputOutputAliasProto_AliasEntryProto{}
}
func (m *HloInputOutputAliasProto_AliasEntryProto) String() string { return proto.CompactTextString(m) }
func (*HloInputOutputAliasProto_AliasEntryProto) ProtoMessage()    {}
func (*HloInputOutputAliasProto_AliasEntryProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{3, 0}
}

func (m *HloInputOutputAliasProto_AliasEntryProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto.Unmarshal(m, b)
}
func (m *HloInputOutputAliasProto_AliasEntryProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto.Marshal(b, m, deterministic)
}
func (m *HloInputOutputAliasProto_AliasEntryProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto.Merge(m, src)
}
func (m *HloInputOutputAliasProto_AliasEntryProto) XXX_Size() int {
	return xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto.Size(m)
}
func (m *HloInputOutputAliasProto_AliasEntryProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloInputOutputAliasProto_AliasEntryProto proto.InternalMessageInfo

func (m *HloInputOutputAliasProto_AliasEntryProto) GetOutputShapeIndex() []int64 {
	if m != nil {
		return m.OutputShapeIndex
	}
	return nil
}

func (m *HloInputOutputAliasProto_AliasEntryProto) GetParameterNumber() int64 {
	if m != nil {
		return m.ParameterNumber
	}
	return 0
}

func (m *HloInputOutputAliasProto_AliasEntryProto) GetParameterShapeIndex() []int64 {
	if m != nil {
		return m.ParameterShapeIndex
	}
	return nil
}

func (m *HloInputOutputAliasProto_AliasEntryProto) GetKind() HloInputOutputAliasProto_Kind {
	if m != nil {
		return m.Kind
	}
	return HloInputOutputAliasProto_UNDEFINED_ALIAS
}

type DynamicParameterBindingProto struct {
	Entries              []*DynamicParameterBindingProto_Binding `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *DynamicParameterBindingProto) Reset()         { *m = DynamicParameterBindingProto{} }
func (m *DynamicParameterBindingProto) String() string { return proto.CompactTextString(m) }
func (*DynamicParameterBindingProto) ProtoMessage()    {}
func (*DynamicParameterBindingProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{4}
}

func (m *DynamicParameterBindingProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicParameterBindingProto.Unmarshal(m, b)
}
func (m *DynamicParameterBindingProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicParameterBindingProto.Marshal(b, m, deterministic)
}
func (m *DynamicParameterBindingProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicParameterBindingProto.Merge(m, src)
}
func (m *DynamicParameterBindingProto) XXX_Size() int {
	return xxx_messageInfo_DynamicParameterBindingProto.Size(m)
}
func (m *DynamicParameterBindingProto) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicParameterBindingProto.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicParameterBindingProto proto.InternalMessageInfo

func (m *DynamicParameterBindingProto) GetEntries() []*DynamicParameterBindingProto_Binding {
	if m != nil {
		return m.Entries
	}
	return nil
}

// A list of bindings which indicates that the `target_dim_num` in
// the subshape `target_param_index` of parameter `target_param_num`
// is a dynamic dimension and its real dynamic size is represented
// by `dynamic_param_index` in parameter `dynamic_param_num`.
//
// As an example, imagine we have a program:
//
// ENTRY main {
//   a = f32[] parameter(0)
//   b = f32[10] parameter(1)
//   ROOT root = (f32[], f32[10]) tuple(%a, %b)
// }
//
// Let's say 'b' (param index 1) is a dynamic shape whose input has
// an upperbound of 10 and real size is determined at runtime.'a'
// represents the real size of b's first dimension.
//
// In this case, the fields are set in the following way:
// dynamic_param_num = 1
// dynamic_param_index = {}
// target_param_num = 0
// target_param_index = {}
// target_param_dim = 0
type DynamicParameterBindingProto_Binding struct {
	DynamicParamNum      int64    `protobuf:"varint,1,opt,name=dynamic_param_num,json=dynamicParamNum,proto3" json:"dynamic_param_num,omitempty"`
	DynamicParamIndex    []int64  `protobuf:"varint,2,rep,packed,name=dynamic_param_index,json=dynamicParamIndex,proto3" json:"dynamic_param_index,omitempty"`
	TargetParamNum       int64    `protobuf:"varint,3,opt,name=target_param_num,json=targetParamNum,proto3" json:"target_param_num,omitempty"`
	TargetParamIndex     []int64  `protobuf:"varint,4,rep,packed,name=target_param_index,json=targetParamIndex,proto3" json:"target_param_index,omitempty"`
	TargetParamDimNum    int64    `protobuf:"varint,5,opt,name=target_param_dim_num,json=targetParamDimNum,proto3" json:"target_param_dim_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynamicParameterBindingProto_Binding) Reset()         { *m = DynamicParameterBindingProto_Binding{} }
func (m *DynamicParameterBindingProto_Binding) String() string { return proto.CompactTextString(m) }
func (*DynamicParameterBindingProto_Binding) ProtoMessage()    {}
func (*DynamicParameterBindingProto_Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{4, 0}
}

func (m *DynamicParameterBindingProto_Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicParameterBindingProto_Binding.Unmarshal(m, b)
}
func (m *DynamicParameterBindingProto_Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicParameterBindingProto_Binding.Marshal(b, m, deterministic)
}
func (m *DynamicParameterBindingProto_Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicParameterBindingProto_Binding.Merge(m, src)
}
func (m *DynamicParameterBindingProto_Binding) XXX_Size() int {
	return xxx_messageInfo_DynamicParameterBindingProto_Binding.Size(m)
}
func (m *DynamicParameterBindingProto_Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicParameterBindingProto_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicParameterBindingProto_Binding proto.InternalMessageInfo

func (m *DynamicParameterBindingProto_Binding) GetDynamicParamNum() int64 {
	if m != nil {
		return m.DynamicParamNum
	}
	return 0
}

func (m *DynamicParameterBindingProto_Binding) GetDynamicParamIndex() []int64 {
	if m != nil {
		return m.DynamicParamIndex
	}
	return nil
}

func (m *DynamicParameterBindingProto_Binding) GetTargetParamNum() int64 {
	if m != nil {
		return m.TargetParamNum
	}
	return 0
}

func (m *DynamicParameterBindingProto_Binding) GetTargetParamIndex() []int64 {
	if m != nil {
		return m.TargetParamIndex
	}
	return nil
}

func (m *DynamicParameterBindingProto_Binding) GetTargetParamDimNum() int64 {
	if m != nil {
		return m.TargetParamDimNum
	}
	return 0
}

// Serialization of HloModule.
type HloModuleProto struct {
	Name                 string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EntryComputationName string `protobuf:"bytes,2,opt,name=entry_computation_name,json=entryComputationName,proto3" json:"entry_computation_name,omitempty"`
	EntryComputationId   int64  `protobuf:"varint,6,opt,name=entry_computation_id,json=entryComputationId,proto3" json:"entry_computation_id,omitempty"`
	// The array of computations is always in a valid dependency order, where
	// callees appear before their callers.
	Computations []*HloComputationProto `protobuf:"bytes,3,rep,name=computations,proto3" json:"computations,omitempty"`
	// The host program shape (with layout) of the entry computation.
	HostProgramShape *ProgramShapeProto `protobuf:"bytes,4,opt,name=host_program_shape,json=hostProgramShape,proto3" json:"host_program_shape,omitempty"`
	// The id of this module.
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	// The schedule for this module.
	Schedule *HloScheduleProto `protobuf:"bytes,7,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// Describes alias information between inputs and outputs.
	InputOutputAlias        *HloInputOutputAliasProto     `protobuf:"bytes,8,opt,name=input_output_alias,json=inputOutputAlias,proto3" json:"input_output_alias,omitempty"`
	DynamicParameterBinding *DynamicParameterBindingProto `protobuf:"bytes,9,opt,name=dynamic_parameter_binding,json=dynamicParameterBinding,proto3" json:"dynamic_parameter_binding,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                      `json:"-"`
	XXX_unrecognized        []byte                        `json:"-"`
	XXX_sizecache           int32                         `json:"-"`
}

func (m *HloModuleProto) Reset()         { *m = HloModuleProto{} }
func (m *HloModuleProto) String() string { return proto.CompactTextString(m) }
func (*HloModuleProto) ProtoMessage()    {}
func (*HloModuleProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{5}
}

func (m *HloModuleProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloModuleProto.Unmarshal(m, b)
}
func (m *HloModuleProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloModuleProto.Marshal(b, m, deterministic)
}
func (m *HloModuleProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloModuleProto.Merge(m, src)
}
func (m *HloModuleProto) XXX_Size() int {
	return xxx_messageInfo_HloModuleProto.Size(m)
}
func (m *HloModuleProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloModuleProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloModuleProto proto.InternalMessageInfo

func (m *HloModuleProto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HloModuleProto) GetEntryComputationName() string {
	if m != nil {
		return m.EntryComputationName
	}
	return ""
}

func (m *HloModuleProto) GetEntryComputationId() int64 {
	if m != nil {
		return m.EntryComputationId
	}
	return 0
}

func (m *HloModuleProto) GetComputations() []*HloComputationProto {
	if m != nil {
		return m.Computations
	}
	return nil
}

func (m *HloModuleProto) GetHostProgramShape() *ProgramShapeProto {
	if m != nil {
		return m.HostProgramShape
	}
	return nil
}

func (m *HloModuleProto) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HloModuleProto) GetSchedule() *HloScheduleProto {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *HloModuleProto) GetInputOutputAlias() *HloInputOutputAliasProto {
	if m != nil {
		return m.InputOutputAlias
	}
	return nil
}

func (m *HloModuleProto) GetDynamicParameterBinding() *DynamicParameterBindingProto {
	if m != nil {
		return m.DynamicParameterBinding
	}
	return nil
}

// Serialization of LogicalBuffer.
type LogicalBufferProto struct {
	Id   int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// The location where the buffer is defined.
	DefinedAt            *LogicalBufferProto_Location `protobuf:"bytes,3,opt,name=defined_at,json=definedAt,proto3" json:"defined_at,omitempty"`
	Color                int64                        `protobuf:"varint,4,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *LogicalBufferProto) Reset()         { *m = LogicalBufferProto{} }
func (m *LogicalBufferProto) String() string { return proto.CompactTextString(m) }
func (*LogicalBufferProto) ProtoMessage()    {}
func (*LogicalBufferProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{6}
}

func (m *LogicalBufferProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalBufferProto.Unmarshal(m, b)
}
func (m *LogicalBufferProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalBufferProto.Marshal(b, m, deterministic)
}
func (m *LogicalBufferProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalBufferProto.Merge(m, src)
}
func (m *LogicalBufferProto) XXX_Size() int {
	return xxx_messageInfo_LogicalBufferProto.Size(m)
}
func (m *LogicalBufferProto) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalBufferProto.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalBufferProto proto.InternalMessageInfo

func (m *LogicalBufferProto) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LogicalBufferProto) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *LogicalBufferProto) GetDefinedAt() *LogicalBufferProto_Location {
	if m != nil {
		return m.DefinedAt
	}
	return nil
}

func (m *LogicalBufferProto) GetColor() int64 {
	if m != nil {
		return m.Color
	}
	return 0
}

// Location represents an instruction and its shape index, which uniquely
// identifies a point where a buffer is needed.
type LogicalBufferProto_Location struct {
	// NOTE: module_name isn't necessary, since all LogicalBuffers are
	// associated with a single HloModule.
	ComputationName      string   `protobuf:"bytes,1,opt,name=computation_name,json=computationName,proto3" json:"computation_name,omitempty"`
	InstructionName      string   `protobuf:"bytes,2,opt,name=instruction_name,json=instructionName,proto3" json:"instruction_name,omitempty"`
	ShapeIndex           []int64  `protobuf:"varint,3,rep,packed,name=shape_index,json=shapeIndex,proto3" json:"shape_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicalBufferProto_Location) Reset()         { *m = LogicalBufferProto_Location{} }
func (m *LogicalBufferProto_Location) String() string { return proto.CompactTextString(m) }
func (*LogicalBufferProto_Location) ProtoMessage()    {}
func (*LogicalBufferProto_Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{6, 0}
}

func (m *LogicalBufferProto_Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalBufferProto_Location.Unmarshal(m, b)
}
func (m *LogicalBufferProto_Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalBufferProto_Location.Marshal(b, m, deterministic)
}
func (m *LogicalBufferProto_Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalBufferProto_Location.Merge(m, src)
}
func (m *LogicalBufferProto_Location) XXX_Size() int {
	return xxx_messageInfo_LogicalBufferProto_Location.Size(m)
}
func (m *LogicalBufferProto_Location) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalBufferProto_Location.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalBufferProto_Location proto.InternalMessageInfo

func (m *LogicalBufferProto_Location) GetComputationName() string {
	if m != nil {
		return m.ComputationName
	}
	return ""
}

func (m *LogicalBufferProto_Location) GetInstructionName() string {
	if m != nil {
		return m.InstructionName
	}
	return ""
}

func (m *LogicalBufferProto_Location) GetShapeIndex() []int64 {
	if m != nil {
		return m.ShapeIndex
	}
	return nil
}

// Serialization of BufferAllocation.
type BufferAllocationProto struct {
	Index                       int64                             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size                        int64                             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IsThreadLocal               bool                              `protobuf:"varint,3,opt,name=is_thread_local,json=isThreadLocal,proto3" json:"is_thread_local,omitempty"`
	IsTuple                     bool                              `protobuf:"varint,11,opt,name=is_tuple,json=isTuple,proto3" json:"is_tuple,omitempty"`
	IsEntryComputationParameter bool                              `protobuf:"varint,5,opt,name=is_entry_computation_parameter,json=isEntryComputationParameter,proto3" json:"is_entry_computation_parameter,omitempty"`
	IsConstant                  bool                              `protobuf:"varint,12,opt,name=is_constant,json=isConstant,proto3" json:"is_constant,omitempty"`
	ParameterNumber             int64                             `protobuf:"varint,6,opt,name=parameter_number,json=parameterNumber,proto3" json:"parameter_number,omitempty"`
	ParameterShapeIndex         []int64                           `protobuf:"varint,10,rep,packed,name=parameter_shape_index,json=parameterShapeIndex,proto3" json:"parameter_shape_index,omitempty"`
	MaybeLiveOut                bool                              `protobuf:"varint,7,opt,name=maybe_live_out,json=maybeLiveOut,proto3" json:"maybe_live_out,omitempty"`
	Color                       int64                             `protobuf:"varint,8,opt,name=color,proto3" json:"color,omitempty"`
	Assigned                    []*BufferAllocationProto_Assigned `protobuf:"bytes,9,rep,name=assigned,proto3" json:"assigned,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                          `json:"-"`
	XXX_unrecognized            []byte                            `json:"-"`
	XXX_sizecache               int32                             `json:"-"`
}

func (m *BufferAllocationProto) Reset()         { *m = BufferAllocationProto{} }
func (m *BufferAllocationProto) String() string { return proto.CompactTextString(m) }
func (*BufferAllocationProto) ProtoMessage()    {}
func (*BufferAllocationProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{7}
}

func (m *BufferAllocationProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferAllocationProto.Unmarshal(m, b)
}
func (m *BufferAllocationProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferAllocationProto.Marshal(b, m, deterministic)
}
func (m *BufferAllocationProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferAllocationProto.Merge(m, src)
}
func (m *BufferAllocationProto) XXX_Size() int {
	return xxx_messageInfo_BufferAllocationProto.Size(m)
}
func (m *BufferAllocationProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferAllocationProto.DiscardUnknown(m)
}

var xxx_messageInfo_BufferAllocationProto proto.InternalMessageInfo

func (m *BufferAllocationProto) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *BufferAllocationProto) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BufferAllocationProto) GetIsThreadLocal() bool {
	if m != nil {
		return m.IsThreadLocal
	}
	return false
}

func (m *BufferAllocationProto) GetIsTuple() bool {
	if m != nil {
		return m.IsTuple
	}
	return false
}

func (m *BufferAllocationProto) GetIsEntryComputationParameter() bool {
	if m != nil {
		return m.IsEntryComputationParameter
	}
	return false
}

func (m *BufferAllocationProto) GetIsConstant() bool {
	if m != nil {
		return m.IsConstant
	}
	return false
}

func (m *BufferAllocationProto) GetParameterNumber() int64 {
	if m != nil {
		return m.ParameterNumber
	}
	return 0
}

func (m *BufferAllocationProto) GetParameterShapeIndex() []int64 {
	if m != nil {
		return m.ParameterShapeIndex
	}
	return nil
}

func (m *BufferAllocationProto) GetMaybeLiveOut() bool {
	if m != nil {
		return m.MaybeLiveOut
	}
	return false
}

func (m *BufferAllocationProto) GetColor() int64 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *BufferAllocationProto) GetAssigned() []*BufferAllocationProto_Assigned {
	if m != nil {
		return m.Assigned
	}
	return nil
}

// Assigned represents a single LogicalBuffer that is assigned to this
// BufferAllocation.
type BufferAllocationProto_Assigned struct {
	LogicalBufferId      int64    `protobuf:"varint,1,opt,name=logical_buffer_id,json=logicalBufferId,proto3" json:"logical_buffer_id,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BufferAllocationProto_Assigned) Reset()         { *m = BufferAllocationProto_Assigned{} }
func (m *BufferAllocationProto_Assigned) String() string { return proto.CompactTextString(m) }
func (*BufferAllocationProto_Assigned) ProtoMessage()    {}
func (*BufferAllocationProto_Assigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{7, 0}
}

func (m *BufferAllocationProto_Assigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferAllocationProto_Assigned.Unmarshal(m, b)
}
func (m *BufferAllocationProto_Assigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferAllocationProto_Assigned.Marshal(b, m, deterministic)
}
func (m *BufferAllocationProto_Assigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferAllocationProto_Assigned.Merge(m, src)
}
func (m *BufferAllocationProto_Assigned) XXX_Size() int {
	return xxx_messageInfo_BufferAllocationProto_Assigned.Size(m)
}
func (m *BufferAllocationProto_Assigned) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferAllocationProto_Assigned.DiscardUnknown(m)
}

var xxx_messageInfo_BufferAllocationProto_Assigned proto.InternalMessageInfo

func (m *BufferAllocationProto_Assigned) GetLogicalBufferId() int64 {
	if m != nil {
		return m.LogicalBufferId
	}
	return 0
}

func (m *BufferAllocationProto_Assigned) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *BufferAllocationProto_Assigned) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

// A trace of a HeapSimulator run.
type HeapSimulatorTrace struct {
	Events                []*HeapSimulatorTrace_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	WholeModuleSimulation bool                        `protobuf:"varint,2,opt,name=whole_module_simulation,json=wholeModuleSimulation,proto3" json:"whole_module_simulation,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *HeapSimulatorTrace) Reset()         { *m = HeapSimulatorTrace{} }
func (m *HeapSimulatorTrace) String() string { return proto.CompactTextString(m) }
func (*HeapSimulatorTrace) ProtoMessage()    {}
func (*HeapSimulatorTrace) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{8}
}

func (m *HeapSimulatorTrace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeapSimulatorTrace.Unmarshal(m, b)
}
func (m *HeapSimulatorTrace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeapSimulatorTrace.Marshal(b, m, deterministic)
}
func (m *HeapSimulatorTrace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeapSimulatorTrace.Merge(m, src)
}
func (m *HeapSimulatorTrace) XXX_Size() int {
	return xxx_messageInfo_HeapSimulatorTrace.Size(m)
}
func (m *HeapSimulatorTrace) XXX_DiscardUnknown() {
	xxx_messageInfo_HeapSimulatorTrace.DiscardUnknown(m)
}

var xxx_messageInfo_HeapSimulatorTrace proto.InternalMessageInfo

func (m *HeapSimulatorTrace) GetEvents() []*HeapSimulatorTrace_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *HeapSimulatorTrace) GetWholeModuleSimulation() bool {
	if m != nil {
		return m.WholeModuleSimulation
	}
	return false
}

// The trace includes a list of events, where each event describes one action
// performed by the heap simulator.
type HeapSimulatorTrace_Event struct {
	Kind HeapSimulatorTrace_Event_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=xla.HeapSimulatorTrace_Event_Kind" json:"kind,omitempty"`
	// The id of the LogicalBuffer that the event applies to.
	BufferId int64 `protobuf:"varint,2,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	// The HloInstruction that the simulation was processing that caused this
	// event to occur, identified by its computation and instruction name. E.g.
	// buffers defined by instruction A are allocated when processing A.
	ComputationName string `protobuf:"bytes,3,opt,name=computation_name,json=computationName,proto3" json:"computation_name,omitempty"`
	InstructionName string `protobuf:"bytes,4,opt,name=instruction_name,json=instructionName,proto3" json:"instruction_name,omitempty"`
	// The id of the canonical LogicalBuffer that the buffer shares with. Only
	// set for SHARE_WITH events.
	ShareWithCanonicalId int64    `protobuf:"varint,5,opt,name=share_with_canonical_id,json=shareWithCanonicalId,proto3" json:"share_with_canonical_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeapSimulatorTrace_Event) Reset()         { *m = HeapSimulatorTrace_Event{} }
func (m *HeapSimulatorTrace_Event) String() string { return proto.CompactTextString(m) }
func (*HeapSimulatorTrace_Event) ProtoMessage()    {}
func (*HeapSimulatorTrace_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{8, 0}
}

func (m *HeapSimulatorTrace_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeapSimulatorTrace_Event.Unmarshal(m, b)
}
func (m *HeapSimulatorTrace_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeapSimulatorTrace_Event.Marshal(b, m, deterministic)
}
func (m *HeapSimulatorTrace_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeapSimulatorTrace_Event.Merge(m, src)
}
func (m *HeapSimulatorTrace_Event) XXX_Size() int {
	return xxx_messageInfo_HeapSimulatorTrace_Event.Size(m)
}
func (m *HeapSimulatorTrace_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_HeapSimulatorTrace_Event.DiscardUnknown(m)
}

var xxx_messageInfo_HeapSimulatorTrace_Event proto.InternalMessageInfo

func (m *HeapSimulatorTrace_Event) GetKind() HeapSimulatorTrace_Event_Kind {
	if m != nil {
		return m.Kind
	}
	return HeapSimulatorTrace_Event_ALLOC
}

func (m *HeapSimulatorTrace_Event) GetBufferId() int64 {
	if m != nil {
		return m.BufferId
	}
	return 0
}

func (m *HeapSimulatorTrace_Event) GetComputationName() string {
	if m != nil {
		return m.ComputationName
	}
	return ""
}

func (m *HeapSimulatorTrace_Event) GetInstructionName() string {
	if m != nil {
		return m.InstructionName
	}
	return ""
}

func (m *HeapSimulatorTrace_Event) GetShareWithCanonicalId() int64 {
	if m != nil {
		return m.ShareWithCanonicalId
	}
	return 0
}

// An abstraction representing a set of HLO module built to run concurrently
// across different devices.
type HloModuleGroupProto struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HloModules           []*HloModuleProto `protobuf:"bytes,2,rep,name=hlo_modules,json=hloModules,proto3" json:"hlo_modules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HloModuleGroupProto) Reset()         { *m = HloModuleGroupProto{} }
func (m *HloModuleGroupProto) String() string { return proto.CompactTextString(m) }
func (*HloModuleGroupProto) ProtoMessage()    {}
func (*HloModuleGroupProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{9}
}

func (m *HloModuleGroupProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloModuleGroupProto.Unmarshal(m, b)
}
func (m *HloModuleGroupProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloModuleGroupProto.Marshal(b, m, deterministic)
}
func (m *HloModuleGroupProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloModuleGroupProto.Merge(m, src)
}
func (m *HloModuleGroupProto) XXX_Size() int {
	return xxx_messageInfo_HloModuleGroupProto.Size(m)
}
func (m *HloModuleGroupProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloModuleGroupProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloModuleGroupProto proto.InternalMessageInfo

func (m *HloModuleGroupProto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HloModuleGroupProto) GetHloModules() []*HloModuleProto {
	if m != nil {
		return m.HloModules
	}
	return nil
}

// Serialization of BufferAssignment.
type BufferAssignmentProto struct {
	LogicalBuffers       []*LogicalBufferProto                `protobuf:"bytes,1,rep,name=logical_buffers,json=logicalBuffers,proto3" json:"logical_buffers,omitempty"`
	BufferAliases        []*BufferAssignmentProto_BufferAlias `protobuf:"bytes,2,rep,name=buffer_aliases,json=bufferAliases,proto3" json:"buffer_aliases,omitempty"`
	BufferAllocations    []*BufferAllocationProto             `protobuf:"bytes,3,rep,name=buffer_allocations,json=bufferAllocations,proto3" json:"buffer_allocations,omitempty"`
	HeapSimulatorTraces  []*HeapSimulatorTrace                `protobuf:"bytes,4,rep,name=heap_simulator_traces,json=heapSimulatorTraces,proto3" json:"heap_simulator_traces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *BufferAssignmentProto) Reset()         { *m = BufferAssignmentProto{} }
func (m *BufferAssignmentProto) String() string { return proto.CompactTextString(m) }
func (*BufferAssignmentProto) ProtoMessage()    {}
func (*BufferAssignmentProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{10}
}

func (m *BufferAssignmentProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferAssignmentProto.Unmarshal(m, b)
}
func (m *BufferAssignmentProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferAssignmentProto.Marshal(b, m, deterministic)
}
func (m *BufferAssignmentProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferAssignmentProto.Merge(m, src)
}
func (m *BufferAssignmentProto) XXX_Size() int {
	return xxx_messageInfo_BufferAssignmentProto.Size(m)
}
func (m *BufferAssignmentProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferAssignmentProto.DiscardUnknown(m)
}

var xxx_messageInfo_BufferAssignmentProto proto.InternalMessageInfo

func (m *BufferAssignmentProto) GetLogicalBuffers() []*LogicalBufferProto {
	if m != nil {
		return m.LogicalBuffers
	}
	return nil
}

func (m *BufferAssignmentProto) GetBufferAliases() []*BufferAssignmentProto_BufferAlias {
	if m != nil {
		return m.BufferAliases
	}
	return nil
}

func (m *BufferAssignmentProto) GetBufferAllocations() []*BufferAllocationProto {
	if m != nil {
		return m.BufferAllocations
	}
	return nil
}

func (m *BufferAssignmentProto) GetHeapSimulatorTraces() []*HeapSimulatorTrace {
	if m != nil {
		return m.HeapSimulatorTraces
	}
	return nil
}

// Alias represents a source LogicalBuffer, and the buffer location that
// aliases it.
type BufferAssignmentProto_BufferAlias struct {
	SourceBufferId       int64                        `protobuf:"varint,1,opt,name=source_buffer_id,json=sourceBufferId,proto3" json:"source_buffer_id,omitempty"`
	Location             *LogicalBufferProto_Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BufferAssignmentProto_BufferAlias) Reset()         { *m = BufferAssignmentProto_BufferAlias{} }
func (m *BufferAssignmentProto_BufferAlias) String() string { return proto.CompactTextString(m) }
func (*BufferAssignmentProto_BufferAlias) ProtoMessage()    {}
func (*BufferAssignmentProto_BufferAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{10, 0}
}

func (m *BufferAssignmentProto_BufferAlias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferAssignmentProto_BufferAlias.Unmarshal(m, b)
}
func (m *BufferAssignmentProto_BufferAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferAssignmentProto_BufferAlias.Marshal(b, m, deterministic)
}
func (m *BufferAssignmentProto_BufferAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferAssignmentProto_BufferAlias.Merge(m, src)
}
func (m *BufferAssignmentProto_BufferAlias) XXX_Size() int {
	return xxx_messageInfo_BufferAssignmentProto_BufferAlias.Size(m)
}
func (m *BufferAssignmentProto_BufferAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferAssignmentProto_BufferAlias.DiscardUnknown(m)
}

var xxx_messageInfo_BufferAssignmentProto_BufferAlias proto.InternalMessageInfo

func (m *BufferAssignmentProto_BufferAlias) GetSourceBufferId() int64 {
	if m != nil {
		return m.SourceBufferId
	}
	return 0
}

func (m *BufferAssignmentProto_BufferAlias) GetLocation() *LogicalBufferProto_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

// Grouping message that contains all of the information above.
type HloProto struct {
	HloModule            *HloModuleProto        `protobuf:"bytes,1,opt,name=hlo_module,json=hloModule,proto3" json:"hlo_module,omitempty"`
	BufferAssignment     *BufferAssignmentProto `protobuf:"bytes,3,opt,name=buffer_assignment,json=bufferAssignment,proto3" json:"buffer_assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HloProto) Reset()         { *m = HloProto{} }
func (m *HloProto) String() string { return proto.CompactTextString(m) }
func (*HloProto) ProtoMessage()    {}
func (*HloProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{11}
}

func (m *HloProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloProto.Unmarshal(m, b)
}
func (m *HloProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloProto.Marshal(b, m, deterministic)
}
func (m *HloProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloProto.Merge(m, src)
}
func (m *HloProto) XXX_Size() int {
	return xxx_messageInfo_HloProto.Size(m)
}
func (m *HloProto) XXX_DiscardUnknown() {
	xxx_messageInfo_HloProto.DiscardUnknown(m)
}

var xxx_messageInfo_HloProto proto.InternalMessageInfo

func (m *HloProto) GetHloModule() *HloModuleProto {
	if m != nil {
		return m.HloModule
	}
	return nil
}

func (m *HloProto) GetBufferAssignment() *BufferAssignmentProto {
	if m != nil {
		return m.BufferAssignment
	}
	return nil
}

// Encapsulates HloProto together with the arguments, result, and
// execution_platform. This message is used for purposes such as
// analysis/replay/file-storage.
type HloSnapshot struct {
	// The hlo graph.
	Hlo *HloProto `protobuf:"bytes,1,opt,name=hlo,proto3" json:"hlo,omitempty"`
	// The arguments passed to the graph.
	Arguments []*LiteralProto `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	// The result of the graph.
	Result *LiteralProto `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	// The name of the platform used to run the graph.
	ExecutionPlatform    string   `protobuf:"bytes,4,opt,name=execution_platform,json=executionPlatform,proto3" json:"execution_platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloSnapshot) Reset()         { *m = HloSnapshot{} }
func (m *HloSnapshot) String() string { return proto.CompactTextString(m) }
func (*HloSnapshot) ProtoMessage()    {}
func (*HloSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f702796836e9cb, []int{12}
}

func (m *HloSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloSnapshot.Unmarshal(m, b)
}
func (m *HloSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloSnapshot.Marshal(b, m, deterministic)
}
func (m *HloSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloSnapshot.Merge(m, src)
}
func (m *HloSnapshot) XXX_Size() int {
	return xxx_messageInfo_HloSnapshot.Size(m)
}
func (m *HloSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_HloSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_HloSnapshot proto.InternalMessageInfo

func (m *HloSnapshot) GetHlo() *HloProto {
	if m != nil {
		return m.Hlo
	}
	return nil
}

func (m *HloSnapshot) GetArguments() []*LiteralProto {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *HloSnapshot) GetResult() *LiteralProto {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *HloSnapshot) GetExecutionPlatform() string {
	if m != nil {
		return m.ExecutionPlatform
	}
	return ""
}

func init() {
	proto.RegisterEnum("xla.HloInputOutputAliasProto_Kind", HloInputOutputAliasProto_Kind_name, HloInputOutputAliasProto_Kind_value)
	proto.RegisterEnum("xla.HeapSimulatorTrace_Event_Kind", HeapSimulatorTrace_Event_Kind_name, HeapSimulatorTrace_Event_Kind_value)
	proto.RegisterType((*HloInstructionProto)(nil), "xla.HloInstructionProto")
	proto.RegisterType((*HloInstructionProto_SliceDimensions)(nil), "xla.HloInstructionProto.SliceDimensions")
	proto.RegisterType((*HloComputationProto)(nil), "xla.HloComputationProto")
	proto.RegisterType((*HloScheduleProto)(nil), "xla.HloScheduleProto")
	proto.RegisterMapType((map[int64]*HloScheduleProto_InstructionSequence)(nil), "xla.HloScheduleProto.SequencesEntry")
	proto.RegisterType((*HloScheduleProto_InstructionSequence)(nil), "xla.HloScheduleProto.InstructionSequence")
	proto.RegisterType((*HloInputOutputAliasProto)(nil), "xla.HloInputOutputAliasProto")
	proto.RegisterType((*HloInputOutputAliasProto_AliasEntryProto)(nil), "xla.HloInputOutputAliasProto.AliasEntryProto")
	proto.RegisterType((*DynamicParameterBindingProto)(nil), "xla.DynamicParameterBindingProto")
	proto.RegisterType((*DynamicParameterBindingProto_Binding)(nil), "xla.DynamicParameterBindingProto.Binding")
	proto.RegisterType((*HloModuleProto)(nil), "xla.HloModuleProto")
	proto.RegisterType((*LogicalBufferProto)(nil), "xla.LogicalBufferProto")
	proto.RegisterType((*LogicalBufferProto_Location)(nil), "xla.LogicalBufferProto.Location")
	proto.RegisterType((*BufferAllocationProto)(nil), "xla.BufferAllocationProto")
	proto.RegisterType((*BufferAllocationProto_Assigned)(nil), "xla.BufferAllocationProto.Assigned")
	proto.RegisterType((*HeapSimulatorTrace)(nil), "xla.HeapSimulatorTrace")
	proto.RegisterType((*HeapSimulatorTrace_Event)(nil), "xla.HeapSimulatorTrace.Event")
	proto.RegisterType((*HloModuleGroupProto)(nil), "xla.HloModuleGroupProto")
	proto.RegisterType((*BufferAssignmentProto)(nil), "xla.BufferAssignmentProto")
	proto.RegisterType((*BufferAssignmentProto_BufferAlias)(nil), "xla.BufferAssignmentProto.BufferAlias")
	proto.RegisterType((*HloProto)(nil), "xla.HloProto")
	proto.RegisterType((*HloSnapshot)(nil), "xla.HloSnapshot")
}

func init() {
	proto.RegisterFile("tensorflow/compiler/xla/service/hlo.proto", fileDescriptor_73f702796836e9cb)
}

var fileDescriptor_73f702796836e9cb = []byte{
	// 2913 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x59, 0xdd, 0x52, 0x1c, 0x47,
	0xb2, 0xf6, 0xfc, 0x00, 0x43, 0x02, 0x33, 0x4d, 0x01, 0xa2, 0x85, 0x2c, 0x09, 0x8f, 0x6c, 0x19,
	0x59, 0x16, 0xd8, 0x58, 0xd6, 0xf1, 0x8f, 0x6c, 0x19, 0x01, 0x16, 0x60, 0xf4, 0x13, 0x3d, 0x28,
	0x7c, 0xce, 0x89, 0x38, 0xd1, 0x51, 0xd3, 0x5d, 0x33, 0x53, 0xa1, 0x9e, 0xae, 0x76, 0x57, 0xb5,
	0x04, 0xe7, 0x6e, 0x9f, 0x61, 0x23, 0xf6, 0x66, 0xf7, 0x09, 0xf6, 0x05, 0x36, 0xf6, 0x31, 0x36,
	0x62, 0x63, 0x2f, 0xf7, 0x11, 0xf6, 0x7a, 0x23, 0xf6, 0xc2, 0x1b, 0x95, 0x55, 0xdd, 0xd3, 0x03,
	0x83, 0xbc, 0xbe, 0x9b, 0xca, 0xfc, 0x2a, 0xa9, 0xca, 0x9f, 0x2f, 0xb3, 0x1a, 0xb8, 0xa3, 0x58,
	0x2c, 0x45, 0xda, 0x8b, 0xc4, 0x9b, 0xad, 0x40, 0x0c, 0x13, 0x1e, 0xb1, 0x74, 0xeb, 0x34, 0xa2,
	0x5b, 0x92, 0xa5, 0xaf, 0x79, 0xc0, 0xb6, 0x06, 0x91, 0xd8, 0x4c, 0x52, 0xa1, 0x04, 0xa9, 0x9d,
	0x46, 0x74, 0xed, 0xf6, 0x65, 0xf8, 0xd3, 0x88, 0xfa, 0x21, 0x55, 0xd4, 0x80, 0xdb, 0x7f, 0x71,
	0x61, 0xe9, 0x20, 0x12, 0x87, 0xb1, 0x54, 0x69, 0x16, 0x28, 0x2e, 0xe2, 0x17, 0x68, 0x84, 0x40,
	0x3d, 0xa6, 0x43, 0xe6, 0x56, 0xd6, 0x2b, 0x1b, 0xb3, 0x1e, 0xfe, 0x26, 0x57, 0x60, 0x5a, 0x24,
	0x81, 0x08, 0x99, 0x5b, 0x45, 0xa9, 0x5d, 0x91, 0x0f, 0x60, 0x4a, 0x0e, 0x68, 0xc2, 0xdc, 0xda,
	0x7a, 0x65, 0x63, 0x6e, 0xbb, 0xb5, 0x79, 0x1a, 0xd1, 0xcd, 0x8e, 0x96, 0xa0, 0x2d, 0xcf, 0x68,
	0xc9, 0x5d, 0x68, 0x0c, 0x99, 0xa2, 0xfa, 0x8f, 0xbb, 0x33, 0x25, 0xe4, 0xf3, 0xe4, 0xa9, 0x15,
	0x7b, 0x05, 0x80, 0xdc, 0x85, 0x99, 0x88, 0x2b, 0x96, 0xd2, 0xc8, 0x6d, 0x20, 0x76, 0x11, 0xb1,
	0xc7, 0x46, 0x66, 0xec, 0xe6, 0x08, 0x72, 0x07, 0x9c, 0x84, 0xa6, 0x74, 0xc8, 0x14, 0x4b, 0xfd,
	0x38, 0x1b, 0x76, 0x59, 0xea, 0xce, 0xae, 0x57, 0x36, 0x6a, 0x5e, 0xab, 0x90, 0x3f, 0x43, 0x31,
	0xb9, 0x09, 0x73, 0xbd, 0x4c, 0x72, 0x11, 0xfb, 0xaf, 0x78, 0x1c, 0xba, 0x73, 0x78, 0x11, 0x30,
	0xa2, 0x1f, 0x78, 0x1c, 0x6a, 0x80, 0xca, 0x92, 0x88, 0xf9, 0x3c, 0x0e, 0xd9, 0xa9, 0xbb, 0x80,
	0x66, 0x00, 0x45, 0x87, 0x5a, 0x42, 0x6e, 0x00, 0x84, 0x7c, 0xc8, 0x62, 0xbd, 0x43, 0xba, 0xcd,
	0xf5, 0x9a, 0xd6, 0x8f, 0x24, 0xe4, 0x16, 0x4c, 0xbf, 0xe1, 0x71, 0x28, 0xde, 0xb8, 0x2d, 0x3c,
	0xf8, 0x1c, 0x1e, 0xfc, 0x47, 0x14, 0x79, 0x56, 0x45, 0x42, 0xb8, 0x1e, 0x88, 0xf8, 0xb5, 0x88,
	0x32, 0xed, 0x72, 0xbf, 0xd8, 0x6e, 0x4f, 0x2f, 0x5d, 0x07, 0xf7, 0xae, 0xe3, 0xde, 0xdd, 0x11,
	0x72, 0x2f, 0x07, 0x9a, 0xeb, 0x48, 0xef, 0x5a, 0x70, 0xb9, 0x92, 0x6c, 0xc2, 0x52, 0x8f, 0x51,
	0x95, 0xa5, 0xcc, 0xef, 0xa7, 0x22, 0x4b, 0xfc, 0x40, 0x64, 0xb1, 0x72, 0xb7, 0xf1, 0x4e, 0x8b,
	0x56, 0xf5, 0x44, 0x6b, 0x76, 0xb5, 0x82, 0x7c, 0x04, 0x8b, 0x5d, 0xaa, 0x82, 0xc1, 0x18, 0xfa,
	0x2b, 0xe3, 0x48, 0x54, 0x94, 0xb0, 0x1d, 0x70, 0x64, 0xc4, 0x03, 0xe6, 0x97, 0x9c, 0xb1, 0xb8,
	0x5e, 0xdb, 0x98, 0xdb, 0xde, 0xc0, 0x43, 0x4f, 0x48, 0xaa, 0xcd, 0x8e, 0xde, 0x50, 0x9c, 0x52,
	0x7a, 0x2d, 0x39, 0x2e, 0x20, 0xb7, 0x60, 0x81, 0x9d, 0x26, 0x22, 0x66, 0xb1, 0xf2, 0xbb, 0x5c,
	0x49, 0x97, 0xac, 0x57, 0x36, 0xa6, 0xbc, 0xf9, 0x5c, 0xf8, 0x98, 0x2b, 0x04, 0x0d, 0x69, 0xac,
	0xb8, 0x94, 0xd4, 0x80, 0x96, 0x0c, 0x28, 0x17, 0x22, 0x68, 0x13, 0x96, 0xc2, 0xb3, 0x98, 0x0e,
	0x79, 0xe0, 0x9b, 0x63, 0x4a, 0xfe, 0xff, 0x4c, 0xba, 0xcb, 0x18, 0xae, 0x45, 0xab, 0xc2, 0xf3,
	0x74, 0xb4, 0x82, 0x7c, 0x09, 0xcd, 0x84, 0x86, 0x21, 0x8f, 0xfb, 0x7e, 0x20, 0xe2, 0x1e, 0xef,
	0xbb, 0x2b, 0x18, 0x01, 0x82, 0x97, 0x79, 0x61, 0x54, 0xbb, 0xa8, 0xf1, 0x16, 0x92, 0xf2, 0x92,
	0x7c, 0x00, 0x4d, 0x91, 0xa9, 0x1e, 0x63, 0x61, 0xbe, 0xf5, 0xca, 0x7a, 0x65, 0x63, 0xde, 0x5b,
	0xb0, 0x52, 0x0b, 0xfb, 0x1a, 0xe6, 0x43, 0x2e, 0x55, 0xca, 0xbb, 0x18, 0x2c, 0x77, 0x75, 0xbd,
	0xb2, 0xd1, 0xdc, 0x5e, 0x45, 0xfb, 0x1e, 0x8d, 0x43, 0x31, 0xdc, 0x2b, 0xa9, 0xbd, 0x31, 0x30,
	0x71, 0x61, 0x86, 0x25, 0x92, 0x47, 0x22, 0x76, 0xdd, 0xf5, 0xca, 0x46, 0xd5, 0xcb, 0x97, 0xda,
	0x1b, 0x79, 0x8c, 0x4d, 0xc6, 0x5e, 0xc5, 0x78, 0xcd, 0x5b, 0xa1, 0xc9, 0xd9, 0xeb, 0x00, 0xc1,
	0x80, 0xc6, 0x31, 0x8b, 0x7c, 0x1e, 0xba, 0x6b, 0x88, 0x98, 0xb5, 0x92, 0xc3, 0x50, 0xdb, 0xe0,
	0x71, 0xf9, 0x02, 0xd7, 0xf0, 0x02, 0xf3, 0x46, 0x68, 0xcf, 0xff, 0x31, 0x90, 0x20, 0x93, 0x4a,
	0x0c, 0xfd, 0x80, 0x46, 0x91, 0xaf, 0x68, 0xda, 0x67, 0xca, 0x7d, 0x17, 0x0b, 0xc8, 0x31, 0x9a,
	0x5d, 0x1a, 0x45, 0x27, 0x28, 0x27, 0xf7, 0x21, 0xbf, 0xbe, 0x6f, 0xb8, 0xe1, 0xfa, 0x64, 0x6e,
	0x98, 0xb7, 0x28, 0x14, 0x91, 0x63, 0x58, 0x09, 0x85, 0x9a, 0x50, 0x0e, 0x37, 0x70, 0xb7, 0x8b,
	0xbb, 0xf7, 0x84, 0xba, 0x50, 0x06, 0x4b, 0xe1, 0x45, 0x21, 0xf9, 0x10, 0x1a, 0xbd, 0x9e, 0xf2,
	0xd5, 0x59, 0xc2, 0xdc, 0x9b, 0xe8, 0xed, 0x79, 0x34, 0xf0, 0x7d, 0x4f, 0x9d, 0x9c, 0x25, 0xcc,
	0x9b, 0xe9, 0x99, 0x1f, 0xda, 0x3d, 0x1a, 0x18, 0xb1, 0xb8, 0xaf, 0x06, 0xee, 0x3a, 0xe6, 0xc8,
	0x6c, 0xaf, 0xa7, 0x8e, 0x51, 0x40, 0x3e, 0x85, 0x65, 0x4d, 0xa1, 0x34, 0xe5, 0x12, 0x6b, 0x35,
	0x65, 0x98, 0xd3, 0xee, 0x23, 0xbc, 0xfb, 0xd2, 0x48, 0xb7, 0x97, 0xab, 0xc8, 0x4b, 0x70, 0xfb,
	0x54, 0x0d, 0x58, 0x3a, 0xe1, 0x2e, 0xef, 0xe1, 0x5d, 0xae, 0xe1, 0x51, 0x9e, 0x20, 0xe8, 0xc2,
	0x75, 0xae, 0xf4, 0x27, 0xca, 0x75, 0x0c, 0xac, 0xd9, 0x72, 0x52, 0xb7, 0xf1, 0xc0, 0x8e, 0xd1,
	0x94, 0x72, 0xfa, 0x3d, 0x98, 0xcf, 0xa3, 0x8e, 0x5c, 0x7e, 0x07, 0xcf, 0x3b, 0x67, 0x65, 0xcf,
	0x34, 0xa5, 0x6f, 0x80, 0x13, 0x08, 0xa9, 0x7c, 0x26, 0x15, 0x1f, 0x52, 0xc5, 0xfc, 0x58, 0xba,
	0x1f, 0x61, 0x7a, 0x34, 0xb5, 0x7c, 0xdf, 0x8a, 0x9f, 0x49, 0xd2, 0x84, 0x2a, 0x0f, 0xdd, 0x5b,
	0xa8, 0xab, 0x72, 0xe4, 0x49, 0x91, 0xb0, 0x94, 0xc6, 0xa1, 0xcf, 0x43, 0xe9, 0xbe, 0x6f, 0x78,
	0xd0, 0x8a, 0x0e, 0x43, 0x49, 0x1e, 0xc0, 0x6a, 0x20, 0x62, 0x95, 0x8a, 0xc8, 0x4f, 0x52, 0x16,
	0xb2, 0x80, 0x49, 0x29, 0x52, 0x04, 0x7f, 0x80, 0xe0, 0x15, 0xab, 0x7e, 0x31, 0xd2, 0xea, 0x7d,
	0xf7, 0xe1, 0x8a, 0x4e, 0x30, 0x4c, 0xc6, 0x61, 0x92, 0x29, 0x8a, 0x0c, 0xa9, 0xb7, 0xdd, 0xc6,
	0x6d, 0xcb, 0x46, 0xbb, 0x3b, 0x52, 0xea, 0x5d, 0x77, 0xa1, 0x21, 0x07, 0x34, 0xd5, 0x65, 0xe9,
	0x6e, 0x8c, 0x35, 0x97, 0x8e, 0x15, 0x7b, 0x05, 0x40, 0x57, 0x6c, 0x97, 0x06, 0xaf, 0x58, 0x5c,
	0x24, 0xfc, 0x5d, 0x74, 0xcd, 0x82, 0x95, 0xda, 0x8c, 0xff, 0x02, 0x9a, 0x29, 0x4b, 0x22, 0x1e,
	0x50, 0x43, 0x88, 0xd2, 0xfd, 0x14, 0x09, 0xce, 0xb4, 0x22, 0xcf, 0xa8, 0x90, 0x12, 0xbd, 0x85,
	0xb4, 0xb4, 0x92, 0xe4, 0x36, 0x2c, 0xe8, 0x1a, 0x49, 0x59, 0x98, 0x05, 0x4c, 0x97, 0xdc, 0x3d,
	0xed, 0xb7, 0xc7, 0x55, 0xb7, 0xe2, 0xcd, 0xd1, 0x28, 0xf2, 0x50, 0x7e, 0x18, 0x6a, 0xf7, 0x73,
	0xe9, 0x0f, 0x74, 0x04, 0x54, 0x4a, 0x63, 0xd9, 0x63, 0xa9, 0xbb, 0xb5, 0x5e, 0xd9, 0x68, 0x78,
	0x4d, 0x2e, 0x0f, 0x84, 0x54, 0x27, 0x56, 0x4a, 0xae, 0xc1, 0x2c, 0x97, 0xbe, 0x54, 0xb4, 0x1b,
	0x31, 0xf7, 0x21, 0x42, 0x1a, 0x5c, 0x76, 0x70, 0x4d, 0xfe, 0x1b, 0xae, 0xca, 0x80, 0x2a, 0x35,
	0x31, 0xdd, 0x3e, 0x41, 0x6f, 0xbc, 0x6b, 0x0a, 0xcf, 0xa0, 0x2e, 0xe4, 0xdb, 0xaa, 0x9c, 0xac,
	0x20, 0x8f, 0xc0, 0x49, 0x52, 0x16, 0x70, 0xb4, 0x68, 0x7d, 0xf5, 0x19, 0x1a, 0x5c, 0x36, 0xc4,
	0x98, 0x2b, 0x2d, 0x35, 0xb6, 0x92, 0x71, 0x01, 0xd9, 0x81, 0x25, 0x29, 0xb2, 0x34, 0x60, 0x96,
	0x30, 0xfc, 0x84, 0xf2, 0x54, 0xba, 0xf7, 0x4b, 0x8e, 0xec, 0xa0, 0xde, 0xf0, 0x86, 0xb7, 0x28,
	0x4b, 0xab, 0x17, 0x1a, 0x4b, 0x76, 0x35, 0x29, 0x0c, 0x29, 0x8f, 0x7d, 0x16, 0xab, 0xf4, 0xcc,
	0x2f, 0xe2, 0xfc, 0x60, 0x72, 0x9c, 0x97, 0x0c, 0x7a, 0x5f, 0x83, 0x73, 0x21, 0xd9, 0x81, 0xe5,
	0xdc, 0xc8, 0x29, 0x57, 0x23, 0x1b, 0xff, 0x35, 0xd9, 0x06, 0xb1, 0x36, 0x4e, 0xb9, 0x2a, 0x4c,
	0xdc, 0xd1, 0xb5, 0xa2, 0x5b, 0x9a, 0xb6, 0x12, 0xd1, 0x33, 0x91, 0x29, 0xf7, 0x0b, 0x8c, 0x44,
	0xab, 0x90, 0x1f, 0xa3, 0x98, 0x1c, 0xc3, 0x5a, 0x5e, 0x1c, 0xc8, 0x7e, 0xd2, 0x7f, 0xc3, 0xd5,
	0x20, 0xdf, 0xf4, 0x25, 0x5e, 0xfe, 0x02, 0x15, 0xae, 0xda, 0x2d, 0x28, 0x92, 0x3f, 0x72, 0x35,
	0xb0, 0xd6, 0x5e, 0x82, 0xab, 0x52, 0x4e, 0xe3, 0x7e, 0x16, 0xd1, 0xd4, 0x97, 0x22, 0x7a, 0xcd,
	0x7c, 0x91, 0x28, 0x6c, 0xb9, 0x5f, 0x97, 0xc8, 0xe4, 0xa4, 0x00, 0x75, 0x34, 0xe6, 0xb9, 0x81,
	0x78, 0x57, 0xd4, 0x44, 0xb9, 0x8e, 0x6d, 0x30, 0x10, 0x11, 0x93, 0xaf, 0xce, 0x0a, 0x73, 0xdf,
	0x96, 0x62, 0xbb, 0x6b, 0x95, 0xb9, 0x9d, 0x56, 0x30, 0x2e, 0x20, 0xcf, 0x60, 0x65, 0x34, 0x76,
	0xd9, 0x02, 0x40, 0x62, 0xfc, 0x06, 0xad, 0x5c, 0xb5, 0xad, 0xd3, 0x22, 0xbc, 0x11, 0xc0, 0x5b,
	0x4e, 0x26, 0x48, 0xc9, 0x43, 0x58, 0x13, 0xd9, 0x78, 0x12, 0x27, 0x34, 0x55, 0xdc, 0x1c, 0xed,
	0x3b, 0xac, 0x7e, 0x17, 0x11, 0x45, 0x9e, 0xbe, 0x28, 0xf4, 0xe4, 0x21, 0x5c, 0x2b, 0xf7, 0xa7,
	0x01, 0x95, 0xbe, 0xe4, 0x21, 0xf3, 0x59, 0xaf, 0xc7, 0x02, 0xe5, 0xee, 0x60, 0xa4, 0x56, 0x47,
	0x8d, 0xea, 0x80, 0xca, 0x0e, 0x0f, 0xd9, 0x3e, 0xaa, 0xc9, 0x32, 0x4c, 0x85, 0x2c, 0x52, 0xd4,
	0x7d, 0x8c, 0x0c, 0x67, 0x16, 0x6b, 0x2f, 0xa1, 0x75, 0x6e, 0x66, 0xd1, 0x40, 0xa9, 0x68, 0xaa,
	0x70, 0x32, 0xae, 0x79, 0x66, 0xa1, 0xa5, 0x11, 0x1f, 0x72, 0x85, 0x93, 0x71, 0xcd, 0x33, 0x0b,
	0x3d, 0x30, 0xeb, 0x1e, 0x1e, 0x9a, 0xc9, 0xb8, 0xe6, 0xd9, 0xd5, 0x51, 0xbd, 0x01, 0xce, 0xdc,
	0x51, 0xbd, 0x31, 0xef, 0x2c, 0x1c, 0xd5, 0x1b, 0x75, 0x67, 0xea, 0xa8, 0xde, 0x98, 0x72, 0xa6,
	0x8f, 0xea, 0x8d, 0x69, 0x67, 0xe6, 0xa8, 0xde, 0xf8, 0xd8, 0xb9, 0x77, 0x54, 0x6f, 0x7c, 0xee,
	0x3c, 0x38, 0xaa, 0x37, 0x36, 0x9d, 0x2d, 0xaf, 0x59, 0x9a, 0x6e, 0xe9, 0x90, 0x79, 0x37, 0x7a,
	0x99, 0x64, 0xa1, 0xcf, 0x47, 0xf3, 0x95, 0x2c, 0x93, 0xa5, 0xb7, 0x90, 0x27, 0x9f, 0x46, 0x4b,
	0xef, 0xea, 0x24, 0x1e, 0x36, 0x2a, 0x77, 0x02, 0xd5, 0x1a, 0xcd, 0xe2, 0x18, 0xf5, 0x69, 0xfe,
	0xf5, 0xc6, 0xfa, 0xbf, 0x48, 0xe8, 0x4f, 0x19, 0xf3, 0x48, 0x89, 0xe7, 0xba, 0x34, 0x4d, 0x39,
	0x4b, 0xdb, 0x7f, 0xaf, 0xe0, 0x9b, 0xa2, 0xc4, 0xd0, 0x97, 0xbf, 0x29, 0x1e, 0xc2, 0x7c, 0xf9,
	0x1a, 0x6e, 0x15, 0x6b, 0xc3, 0xbd, 0x6c, 0x84, 0xf4, 0xc6, 0xd0, 0xe4, 0x6b, 0x58, 0x48, 0x52,
	0xd1, 0x4f, 0xe9, 0xd0, 0x4e, 0x19, 0x75, 0xcc, 0xbc, 0x2b, 0x96, 0x9b, 0x50, 0x53, 0x1e, 0x36,
	0x92, 0x92, 0xc8, 0x76, 0xb4, 0xa9, 0xa2, 0xa3, 0xad, 0xc2, 0x4c, 0x2a, 0x84, 0xd2, 0x74, 0x3d,
	0x6d, 0xc2, 0xa5, 0x97, 0x87, 0xe1, 0x51, 0xbd, 0x51, 0x73, 0xea, 0xde, 0x2c, 0x2a, 0xf5, 0xa1,
	0xdb, 0x3f, 0x57, 0xc0, 0x39, 0x88, 0x44, 0x27, 0x18, 0xb0, 0x30, 0x8b, 0x8c, 0x71, 0xf2, 0x18,
	0x66, 0x25, 0xfb, 0x29, 0x63, 0x71, 0xc0, 0xa4, 0x5b, 0xc1, 0x6b, 0xbc, 0x9f, 0x5f, 0x63, 0x0c,
	0xb9, 0xd9, 0xc9, 0x61, 0x48, 0x51, 0xde, 0x68, 0xdb, 0xda, 0xb7, 0xb0, 0x54, 0xba, 0x71, 0x8e,
	0x23, 0x1f, 0x42, 0xab, 0x74, 0x6d, 0xec, 0x85, 0x15, 0xac, 0x86, 0x66, 0x49, 0x7c, 0x18, 0xca,
	0xb5, 0x3e, 0x34, 0xc7, 0x8d, 0x13, 0x07, 0x6a, 0xaf, 0xd8, 0x99, 0x4d, 0x56, 0xfd, 0x93, 0x3c,
	0x82, 0xa9, 0xd7, 0x34, 0xca, 0xcc, 0x23, 0x6e, 0x6e, 0xfb, 0xce, 0xe4, 0x33, 0x4e, 0x38, 0x86,
	0x67, 0xf6, 0x7d, 0x55, 0xfd, 0xa2, 0xd2, 0xfe, 0x57, 0x15, 0x5c, 0x0c, 0x4f, 0x92, 0xa9, 0xe7,
	0x99, 0x4a, 0x32, 0xb5, 0x13, 0x71, 0x2a, 0x8d, 0x27, 0x9e, 0xc0, 0x8c, 0x66, 0x6a, 0x5e, 0xf8,
	0xe1, 0xde, 0x28, 0x9c, 0x13, 0xf0, 0x9b, 0xf8, 0x13, 0x8f, 0x6b, 0xdf, 0x75, 0x76, 0xf7, 0xda,
	0xdf, 0x2a, 0xd0, 0x3a, 0xa7, 0xd4, 0x23, 0x90, 0x40, 0x03, 0x26, 0xe2, 0x76, 0xe8, 0x35, 0xee,
	0x70, 0x8c, 0x06, 0xc3, 0x6b, 0x06, 0xdf, 0x49, 0x2f, 0xc3, 0xea, 0xe4, 0x97, 0xe1, 0x76, 0x99,
	0xcd, 0xca, 0xb6, 0x6b, 0x68, 0x7b, 0xa9, 0x50, 0x96, 0xcc, 0x3f, 0x80, 0x3a, 0x3e, 0x23, 0xeb,
	0x38, 0x5d, 0xb6, 0xdf, 0x7e, 0x4d, 0xfd, 0xbc, 0xf4, 0x10, 0xdf, 0xfe, 0x06, 0xea, 0xf8, 0xd8,
	0x5c, 0x82, 0xd6, 0xcb, 0x67, 0x7b, 0xfb, 0xdf, 0x1f, 0x3e, 0xdb, 0xdf, 0xf3, 0x77, 0x8e, 0x0f,
	0x77, 0x3a, 0xce, 0x3b, 0xa4, 0x09, 0xf0, 0xb2, 0xb3, 0xef, 0xd9, 0x75, 0x85, 0x38, 0x30, 0xdf,
	0xf9, 0x9f, 0xce, 0xc9, 0xfe, 0x53, 0x2b, 0xa9, 0xb6, 0xff, 0x5a, 0x85, 0x77, 0xf7, 0xcc, 0x13,
	0xa6, 0xa0, 0xd7, 0xc7, 0x3c, 0xd6, 0x5d, 0xca, 0x38, 0x69, 0xf7, 0x7c, 0x04, 0x4c, 0x94, 0xdf,
	0xb6, 0x67, 0xd3, 0x2e, 0x46, 0xde, 0xff, 0x47, 0x05, 0x66, 0xac, 0x50, 0xbf, 0x0c, 0xf3, 0xe7,
	0x14, 0xfa, 0x41, 0xfb, 0xd2, 0x26, 0x55, 0x2b, 0x2c, 0x59, 0x7d, 0x96, 0x0d, 0xcb, 0x4f, 0x2f,
	0x83, 0x35, 0x6e, 0xac, 0x8e, 0x3d, 0xbd, 0x10, 0x6d, 0x9c, 0xb8, 0x01, 0x4e, 0x31, 0x1b, 0xe4,
	0xa6, 0x0d, 0x5f, 0x36, 0x95, 0x1d, 0x03, 0xac, 0xe5, 0x8f, 0x81, 0x8c, 0x21, 0x8d, 0xe1, 0xba,
	0x89, 0x7d, 0x09, 0x6b, 0xec, 0x6e, 0xc1, 0xf2, 0x18, 0x3a, 0xe4, 0xc6, 0xb6, 0xa9, 0xf8, 0xc5,
	0x12, 0x7e, 0x8f, 0x6b, 0xf3, 0xed, 0x9f, 0x6b, 0xd0, 0x3c, 0x88, 0xc4, 0x53, 0x31, 0x2a, 0xea,
	0x49, 0x94, 0x75, 0x1f, 0xae, 0x98, 0x41, 0xe4, 0x3c, 0x69, 0xda, 0xcf, 0x22, 0xcb, 0xa8, 0x2d,
	0xb1, 0x1f, 0x4e, 0xda, 0x9f, 0xc0, 0xf2, 0xc5, 0x5d, 0x05, 0xd5, 0x90, 0xf3, 0x7b, 0x0e, 0x43,
	0x4d, 0x8d, 0x25, 0xac, 0xc4, 0x3c, 0x2c, 0x51, 0xe3, 0x79, 0x7a, 0xf5, 0xc6, 0xd0, 0x64, 0x0f,
	0x08, 0xce, 0x95, 0xbf, 0x86, 0x1f, 0x1d, 0xbd, 0xe3, 0xc5, 0xdb, 0x38, 0xf2, 0x53, 0x68, 0x48,
	0xcb, 0x13, 0xf6, 0x1b, 0xce, 0xca, 0x44, 0xfe, 0xf0, 0x0a, 0x18, 0xf9, 0x01, 0x08, 0xd7, 0xf5,
	0xe0, 0xdb, 0xb2, 0xa5, 0xba, 0x22, 0xec, 0x47, 0x9d, 0xeb, 0x6f, 0xad, 0x18, 0xcf, 0xe1, 0xe7,
	0xc4, 0xe4, 0xff, 0xe0, 0xea, 0x58, 0x6e, 0x61, 0xb1, 0x76, 0x4d, 0x92, 0xe2, 0x27, 0x9f, 0xb9,
	0xed, 0xf7, 0x7e, 0x31, 0xd5, 0xbd, 0xd5, 0x70, 0xb2, 0xb6, 0xfd, 0xdb, 0x2a, 0x90, 0x63, 0xd1,
	0xe7, 0x01, 0x8d, 0x1e, 0x67, 0xbd, 0x1e, 0x4b, 0x4d, 0x16, 0x18, 0x2f, 0x54, 0x0a, 0x2f, 0x10,
	0xa8, 0xeb, 0x97, 0x97, 0x65, 0x12, 0xfc, 0x4d, 0x1e, 0x01, 0x84, 0xac, 0xc7, 0x63, 0x16, 0xfa,
	0x54, 0xd9, 0x2f, 0x61, 0xe6, 0xf3, 0xcd, 0x45, 0x83, 0x9b, 0xc7, 0xc2, 0x0e, 0x42, 0xb3, 0x76,
	0xcf, 0x0e, 0x8e, 0x10, 0x81, 0x88, 0x44, 0x8a, 0x31, 0xaa, 0x79, 0x66, 0xb1, 0xf6, 0x9b, 0x0a,
	0x34, 0x72, 0xb4, 0x99, 0x40, 0xcf, 0xe5, 0x9c, 0xc9, 0xcc, 0x56, 0x70, 0x2e, 0xdd, 0xee, 0x80,
	0x53, 0x6e, 0x19, 0xa5, 0xf4, 0x2c, 0xb7, 0x12, 0x84, 0xde, 0x84, 0xb9, 0x8b, 0x74, 0x07, 0xb2,
	0x60, 0xb9, 0xf6, 0x1f, 0xeb, 0xb0, 0x62, 0x4e, 0xbf, 0x13, 0x45, 0xf6, 0x2c, 0xc6, 0x31, 0xcb,
	0x30, 0x95, 0xf3, 0x2f, 0x9e, 0x19, 0x17, 0x13, 0xdd, 0x73, 0x1b, 0x5a, 0x5c, 0xfa, 0x6a, 0x90,
	0x32, 0x1a, 0xfa, 0xda, 0x48, 0x84, 0x3e, 0x6a, 0x78, 0x0b, 0x5c, 0x9e, 0xa0, 0x54, 0xdf, 0x32,
	0x22, 0x57, 0xa1, 0xa1, 0x71, 0x59, 0x12, 0x31, 0xfc, 0x38, 0xd7, 0xf0, 0x66, 0xb8, 0x3c, 0xd1,
	0x4b, 0xb2, 0x0b, 0x37, 0xb8, 0xf4, 0x2f, 0x16, 0x51, 0x91, 0x08, 0x98, 0xa7, 0x0d, 0xef, 0x1a,
	0x37, 0xfd, 0xa2, 0x5c, 0x20, 0x39, 0x44, 0x5f, 0x96, 0xeb, 0x61, 0x29, 0x96, 0x8a, 0xc6, 0xca,
	0x9d, 0xc7, 0x1d, 0xc0, 0xe5, 0xae, 0x95, 0x4c, 0xec, 0x18, 0xd3, 0xbf, 0xb2, 0x63, 0xc0, 0xe5,
	0x1d, 0xe3, 0x7d, 0x68, 0x0e, 0xe9, 0x59, 0x97, 0xf9, 0x11, 0xd7, 0x53, 0x7c, 0xa6, 0xb0, 0x8c,
	0x1a, 0xde, 0x3c, 0x4a, 0x8f, 0xf9, 0x6b, 0xf6, 0x3c, 0x2b, 0xe5, 0x42, 0xa3, 0x94, 0x0b, 0xe4,
	0x11, 0x34, 0xa8, 0x94, 0xbc, 0x1f, 0xb3, 0xd0, 0x9d, 0x45, 0x32, 0xb8, 0x85, 0x09, 0x36, 0x31,
	0x36, 0x9b, 0x3b, 0x16, 0xea, 0x15, 0x9b, 0xd6, 0xba, 0xd0, 0xc8, 0xa5, 0x9a, 0xd1, 0x23, 0x93,
	0x98, 0x7e, 0x17, 0xf7, 0xfb, 0x45, 0x8a, 0xb7, 0xa2, 0x72, 0xc6, 0x1e, 0x86, 0xf8, 0xe1, 0xb7,
	0xd7, 0x93, 0x2c, 0x1f, 0x6f, 0xed, 0xaa, 0x08, 0x74, 0x6d, 0x14, 0xe8, 0xf6, 0x1f, 0x6a, 0x40,
	0x0e, 0x18, 0x4d, 0x3a, 0x7c, 0x98, 0x45, 0x54, 0x89, 0xf4, 0x24, 0xa5, 0x01, 0x23, 0x9f, 0xc3,
	0x34, 0x7b, 0xcd, 0x62, 0x95, 0x37, 0x24, 0x5b, 0xf9, 0x17, 0x80, 0x9b, 0xfb, 0x1a, 0xe5, 0x59,
	0x30, 0x79, 0x00, 0xab, 0x6f, 0xf4, 0xab, 0xc3, 0x1f, 0x22, 0x29, 0xfb, 0xd2, 0x80, 0xf5, 0x23,
	0xa3, 0x8a, 0x7e, 0x5b, 0x41, 0xb5, 0xa1, 0xec, 0x4e, 0xa1, 0x5c, 0xfb, 0x5d, 0x15, 0xa6, 0xd0,
	0x52, 0xd1, 0xa2, 0x2b, 0xe5, 0x16, 0x7d, 0xc9, 0x9f, 0x2d, 0xb5, 0x68, 0xfd, 0xe0, 0x1e, 0xf9,
	0xc5, 0x5c, 0xbb, 0xd1, 0xcd, 0x1d, 0x32, 0xa9, 0x10, 0x6b, 0xff, 0x79, 0x21, 0xd6, 0x27, 0x17,
	0xe2, 0xe7, 0xb0, 0xaa, 0xdf, 0xa5, 0xcc, 0x3c, 0x16, 0x03, 0x1a, 0x8b, 0x18, 0xe3, 0x53, 0x30,
	0xf0, 0x32, 0xaa, 0xf5, 0xcb, 0x70, 0x37, 0x57, 0x1e, 0x86, 0xed, 0xbb, 0x76, 0x98, 0x98, 0x85,
	0xa9, 0x9d, 0xe3, 0xe3, 0xe7, 0xbb, 0xce, 0x3b, 0xa4, 0x01, 0xf5, 0xef, 0xbd, 0xfd, 0x7d, 0xa7,
	0xa2, 0x87, 0x89, 0xce, 0xc1, 0x8e, 0xb7, 0xef, 0xff, 0x78, 0x78, 0x72, 0xe0, 0x54, 0xdb, 0x3e,
	0x8e, 0xe6, 0xc6, 0x5f, 0xf8, 0xb1, 0xe2, 0x6d, 0x7d, 0x6e, 0x6e, 0x10, 0x09, 0xeb, 0xf9, 0x7c,
	0x32, 0x5f, 0xca, 0x19, 0xbb, 0xd4, 0x25, 0x3d, 0x18, 0xe4, 0x6b, 0xd9, 0xfe, 0x53, 0xad, 0x20,
	0x0b, 0x4c, 0xb5, 0x21, 0x8b, 0x95, 0xf9, 0x1b, 0xdf, 0x41, 0x6b, 0x3c, 0xe3, 0xf2, 0x5c, 0x58,
	0xbd, 0x84, 0x26, 0xbd, 0xe6, 0x58, 0x22, 0x4a, 0xf2, 0x14, 0x9a, 0x36, 0x26, 0xd8, 0x44, 0x8a,
	0x43, 0xdd, 0x2e, 0x97, 0xc1, 0xf8, 0x5f, 0x2d, 0x8a, 0x83, 0x53, 0xe9, 0x2d, 0x74, 0x47, 0x0b,
	0x26, 0xc9, 0x21, 0x90, 0xc2, 0x5c, 0x5e, 0x3b, 0x79, 0x9b, 0x5d, 0xbb, 0xbc, 0xb2, 0xbc, 0xc5,
	0xee, 0x39, 0xb1, 0x24, 0x3f, 0xc0, 0xca, 0x80, 0xd1, 0x24, 0xcf, 0x4f, 0x91, 0xfa, 0x4a, 0xa7,
	0x95, 0xc4, 0xe1, 0x24, 0xbf, 0xe1, 0xc5, 0xb4, 0xf3, 0x96, 0x06, 0x17, 0x64, 0x72, 0x2d, 0x83,
	0xb9, 0xd2, 0xa9, 0xf5, 0x7c, 0x64, 0x3f, 0xa1, 0x9c, 0x2f, 0xd4, 0xa6, 0x91, 0x17, 0x75, 0xfa,
	0x10, 0x1a, 0xf9, 0x91, 0xec, 0x74, 0xff, 0xcb, 0x1d, 0xa8, 0xd8, 0xd1, 0xfe, 0x7d, 0x05, 0x1a,
	0x07, 0x91, 0x30, 0xc1, 0xda, 0x06, 0x18, 0x05, 0x1f, 0xff, 0xdc, 0x25, 0xb1, 0x9f, 0x2d, 0x62,
	0x4f, 0x9e, 0xc0, 0x62, 0xee, 0xcf, 0x22, 0x08, 0xb6, 0x13, 0xae, 0x5d, 0x1e, 0x21, 0xcf, 0xe9,
	0x9e, 0x13, 0x1f, 0xd5, 0x1b, 0x55, 0xa7, 0xe6, 0xcd, 0xeb, 0x03, 0x88, 0x34, 0x64, 0xa9, 0x6e,
	0xcd, 0x7f, 0xae, 0xc0, 0x9c, 0x9e, 0x32, 0x62, 0x9a, 0xc8, 0x81, 0x50, 0xe4, 0x26, 0xd4, 0x06,
	0x91, 0xb0, 0x27, 0x5b, 0xc8, 0x4f, 0x66, 0x2c, 0x6a, 0x0d, 0xd9, 0x82, 0x59, 0x9a, 0xf6, 0xb3,
	0x21, 0x92, 0x4e, 0xb5, 0xf4, 0xbd, 0x69, 0xec, 0x7f, 0x48, 0x23, 0x0c, 0xb9, 0x03, 0xd3, 0x29,
	0x93, 0x59, 0x94, 0x9f, 0x79, 0x02, 0xda, 0x02, 0xc8, 0x3d, 0x20, 0xec, 0x94, 0x05, 0xe6, 0x9f,
	0x37, 0x49, 0x44, 0x55, 0x4f, 0xa4, 0x43, 0x5b, 0xd6, 0x8b, 0x85, 0xe6, 0x85, 0x55, 0x3c, 0xde,
	0xff, 0xdf, 0xef, 0xfa, 0x5c, 0x0d, 0xb2, 0xee, 0x66, 0x20, 0x86, 0x5b, 0xa5, 0xff, 0xcc, 0x4d,
	0xfe, 0xd9, 0x17, 0x5b, 0x81, 0x48, 0xd9, 0xd8, 0xff, 0xed, 0xfe, 0x59, 0xa9, 0x74, 0xa7, 0xf1,
	0x5f, 0x76, 0x9f, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x36, 0x00, 0x00, 0x0c, 0x1c, 0x00,
	0x00,
}
