// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/compiler/xla/service/hlo_profile_printer_data.proto

package xla

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Describes how to pretty-print a profile counter array gathered for a specific
// HloModule.
type HloProfilePrinterData struct {
	// HloComputationInfos for every HloComputation in the HloModule.
	ComputationInfos []*HloProfilePrinterData_HloComputationInfo `protobuf:"bytes,1,rep,name=computation_infos,json=computationInfos,proto3" json:"computation_infos,omitempty"`
	// The size of the profile counters array we will pretty-print.
	ProfileCountersSize int64 `protobuf:"varint,2,opt,name=profile_counters_size,json=profileCountersSize,proto3" json:"profile_counters_size,omitempty"`
	// Maps extra metric name to the index into the profile counters array.
	ExtraMetrics map[string]int64 `protobuf:"bytes,3,rep,name=extra_metrics,json=extraMetrics,proto3" json:"extra_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Name of the entry computation.
	EntryComputation     string   `protobuf:"bytes,4,opt,name=entry_computation,json=entryComputation,proto3" json:"entry_computation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloProfilePrinterData) Reset()         { *m = HloProfilePrinterData{} }
func (m *HloProfilePrinterData) String() string { return proto.CompactTextString(m) }
func (*HloProfilePrinterData) ProtoMessage()    {}
func (*HloProfilePrinterData) Descriptor() ([]byte, []int) {
	return fileDescriptor_33729c4ea42c74ff, []int{0}
}

func (m *HloProfilePrinterData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloProfilePrinterData.Unmarshal(m, b)
}
func (m *HloProfilePrinterData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloProfilePrinterData.Marshal(b, m, deterministic)
}
func (m *HloProfilePrinterData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloProfilePrinterData.Merge(m, src)
}
func (m *HloProfilePrinterData) XXX_Size() int {
	return xxx_messageInfo_HloProfilePrinterData.Size(m)
}
func (m *HloProfilePrinterData) XXX_DiscardUnknown() {
	xxx_messageInfo_HloProfilePrinterData.DiscardUnknown(m)
}

var xxx_messageInfo_HloProfilePrinterData proto.InternalMessageInfo

func (m *HloProfilePrinterData) GetComputationInfos() []*HloProfilePrinterData_HloComputationInfo {
	if m != nil {
		return m.ComputationInfos
	}
	return nil
}

func (m *HloProfilePrinterData) GetProfileCountersSize() int64 {
	if m != nil {
		return m.ProfileCountersSize
	}
	return 0
}

func (m *HloProfilePrinterData) GetExtraMetrics() map[string]int64 {
	if m != nil {
		return m.ExtraMetrics
	}
	return nil
}

func (m *HloProfilePrinterData) GetEntryComputation() string {
	if m != nil {
		return m.EntryComputation
	}
	return ""
}

// Pretty-printer information about an HloInstruction.
type HloProfilePrinterData_HloInstructionInfo struct {
	LongName  string `protobuf:"bytes,1,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Category  string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	// Metrics computed by HloCostAnalysis.
	FlopCount           float32 `protobuf:"fixed32,4,opt,name=flop_count,json=flopCount,proto3" json:"flop_count,omitempty"`
	TranscendentalCount float32 `protobuf:"fixed32,5,opt,name=transcendental_count,json=transcendentalCount,proto3" json:"transcendental_count,omitempty"`
	BytesAccessed       float32 `protobuf:"fixed32,6,opt,name=bytes_accessed,json=bytesAccessed,proto3" json:"bytes_accessed,omitempty"`
	OptimalSeconds      float32 `protobuf:"fixed32,7,opt,name=optimal_seconds,json=optimalSeconds,proto3" json:"optimal_seconds,omitempty"`
	// The index into the profile counters array for the HloInstruction
	// corresponding to this HloInstructionInfo.
	ProfileIndex         int64    `protobuf:"varint,8,opt,name=profile_index,json=profileIndex,proto3" json:"profile_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HloProfilePrinterData_HloInstructionInfo) Reset() {
	*m = HloProfilePrinterData_HloInstructionInfo{}
}
func (m *HloProfilePrinterData_HloInstructionInfo) String() string { return proto.CompactTextString(m) }
func (*HloProfilePrinterData_HloInstructionInfo) ProtoMessage()    {}
func (*HloProfilePrinterData_HloInstructionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33729c4ea42c74ff, []int{0, 0}
}

func (m *HloProfilePrinterData_HloInstructionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo.Unmarshal(m, b)
}
func (m *HloProfilePrinterData_HloInstructionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo.Marshal(b, m, deterministic)
}
func (m *HloProfilePrinterData_HloInstructionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo.Merge(m, src)
}
func (m *HloProfilePrinterData_HloInstructionInfo) XXX_Size() int {
	return xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo.Size(m)
}
func (m *HloProfilePrinterData_HloInstructionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HloProfilePrinterData_HloInstructionInfo proto.InternalMessageInfo

func (m *HloProfilePrinterData_HloInstructionInfo) GetLongName() string {
	if m != nil {
		return m.LongName
	}
	return ""
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetFlopCount() float32 {
	if m != nil {
		return m.FlopCount
	}
	return 0
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetTranscendentalCount() float32 {
	if m != nil {
		return m.TranscendentalCount
	}
	return 0
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetBytesAccessed() float32 {
	if m != nil {
		return m.BytesAccessed
	}
	return 0
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetOptimalSeconds() float32 {
	if m != nil {
		return m.OptimalSeconds
	}
	return 0
}

func (m *HloProfilePrinterData_HloInstructionInfo) GetProfileIndex() int64 {
	if m != nil {
		return m.ProfileIndex
	}
	return 0
}

// Pretty-printer information about an HloComputation.
type HloProfilePrinterData_HloComputationInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The index into the profile counters array for the HloComputation
	// corresponding to this HloComputationInfo.
	ProfileIndex int64 `protobuf:"varint,2,opt,name=profile_index,json=profileIndex,proto3" json:"profile_index,omitempty"`
	// HloInstructionInfos for every HloInstruction in the HloComputation for
	// corresponding to this HloComputattionInfo.
	InstructionInfos     []*HloProfilePrinterData_HloInstructionInfo `protobuf:"bytes,3,rep,name=instruction_infos,json=instructionInfos,proto3" json:"instruction_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *HloProfilePrinterData_HloComputationInfo) Reset() {
	*m = HloProfilePrinterData_HloComputationInfo{}
}
func (m *HloProfilePrinterData_HloComputationInfo) String() string { return proto.CompactTextString(m) }
func (*HloProfilePrinterData_HloComputationInfo) ProtoMessage()    {}
func (*HloProfilePrinterData_HloComputationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_33729c4ea42c74ff, []int{0, 1}
}

func (m *HloProfilePrinterData_HloComputationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HloProfilePrinterData_HloComputationInfo.Unmarshal(m, b)
}
func (m *HloProfilePrinterData_HloComputationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HloProfilePrinterData_HloComputationInfo.Marshal(b, m, deterministic)
}
func (m *HloProfilePrinterData_HloComputationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HloProfilePrinterData_HloComputationInfo.Merge(m, src)
}
func (m *HloProfilePrinterData_HloComputationInfo) XXX_Size() int {
	return xxx_messageInfo_HloProfilePrinterData_HloComputationInfo.Size(m)
}
func (m *HloProfilePrinterData_HloComputationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HloProfilePrinterData_HloComputationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HloProfilePrinterData_HloComputationInfo proto.InternalMessageInfo

func (m *HloProfilePrinterData_HloComputationInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HloProfilePrinterData_HloComputationInfo) GetProfileIndex() int64 {
	if m != nil {
		return m.ProfileIndex
	}
	return 0
}

func (m *HloProfilePrinterData_HloComputationInfo) GetInstructionInfos() []*HloProfilePrinterData_HloInstructionInfo {
	if m != nil {
		return m.InstructionInfos
	}
	return nil
}

func init() {
	proto.RegisterType((*HloProfilePrinterData)(nil), "xla.HloProfilePrinterData")
	proto.RegisterMapType((map[string]int64)(nil), "xla.HloProfilePrinterData.ExtraMetricsEntry")
	proto.RegisterType((*HloProfilePrinterData_HloInstructionInfo)(nil), "xla.HloProfilePrinterData.HloInstructionInfo")
	proto.RegisterType((*HloProfilePrinterData_HloComputationInfo)(nil), "xla.HloProfilePrinterData.HloComputationInfo")
}

func init() {
	proto.RegisterFile("tensorflow/compiler/xla/service/hlo_profile_printer_data.proto", fileDescriptor_33729c4ea42c74ff)
}

var fileDescriptor_33729c4ea42c74ff = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0x64, 0x1b, 0xad, 0x59, 0x47, 0xeb, 0x6d, 0x52, 0x54, 0x84, 0x54, 0x81, 0x10,
	0x95, 0x80, 0x46, 0x8c, 0x1b, 0xc4, 0x05, 0xff, 0x46, 0xa5, 0xf5, 0x02, 0x34, 0xb2, 0xbb, 0xdd,
	0x44, 0xae, 0x7b, 0xda, 0x5a, 0x38, 0x3e, 0x91, 0xed, 0x8e, 0x76, 0x6f, 0xc4, 0x35, 0x6f, 0xc1,
	0x13, 0x71, 0x89, 0xec, 0xa4, 0x5a, 0xba, 0x4e, 0x88, 0x3b, 0xe7, 0xf7, 0x7d, 0x9f, 0x75, 0x72,
	0xce, 0x31, 0x79, 0x67, 0x41, 0x19, 0xd4, 0x53, 0x89, 0x3f, 0x12, 0x8e, 0x79, 0x21, 0x24, 0xe8,
	0x64, 0x29, 0x59, 0x62, 0x40, 0x5f, 0x09, 0x0e, 0xc9, 0x5c, 0x62, 0x56, 0x68, 0x9c, 0x0a, 0x09,
	0x59, 0xa1, 0x85, 0xb2, 0xa0, 0xb3, 0x09, 0xb3, 0x6c, 0x50, 0x68, 0xb4, 0x48, 0xa3, 0xa5, 0x64,
	0x8f, 0x7f, 0xef, 0x91, 0xe3, 0x33, 0x89, 0xe7, 0xa5, 0xed, 0xbc, 0x74, 0x7d, 0x66, 0x96, 0xd1,
	0x4b, 0xd2, 0x71, 0xb7, 0x2e, 0x2c, 0xb3, 0x02, 0x55, 0x26, 0xd4, 0x14, 0x4d, 0x1c, 0xf4, 0xa2,
	0xfe, 0xfd, 0x93, 0x97, 0x83, 0xa5, 0x64, 0x83, 0x3b, 0x63, 0x8e, 0x9e, 0xde, 0xc4, 0x46, 0x6a,
	0x8a, 0x69, 0x9b, 0x6f, 0x02, 0x43, 0x4f, 0xc8, 0xf1, 0xba, 0x30, 0x8e, 0x0b, 0x97, 0x35, 0x99,
	0x11, 0xd7, 0x10, 0x87, 0xbd, 0xa0, 0x1f, 0xa5, 0x87, 0x95, 0x78, 0x5a, 0x69, 0x17, 0xe2, 0x1a,
	0xe8, 0x37, 0xd2, 0x82, 0xa5, 0xd5, 0x2c, 0xcb, 0xc1, 0x6a, 0xc1, 0x4d, 0x1c, 0xf9, 0x5a, 0x5e,
	0xfc, 0xa3, 0x96, 0xa1, 0xf3, 0x7f, 0x29, 0xed, 0x43, 0x65, 0xf5, 0x2a, 0xdd, 0x87, 0x1a, 0xa2,
	0xcf, 0x49, 0x07, 0x1c, 0xce, 0x6a, 0x05, 0xc6, 0x3b, 0xbd, 0xa0, 0xdf, 0x4c, 0xdb, 0x5e, 0xa8,
	0xfd, 0x49, 0xf7, 0x57, 0x48, 0xe8, 0x99, 0xc4, 0x91, 0x32, 0x56, 0x2f, 0xf8, 0xfa, 0x5f, 0xe8,
	0x43, 0xd2, 0x94, 0xa8, 0x66, 0x99, 0x62, 0x39, 0xc4, 0x81, 0xcf, 0x36, 0x1c, 0xf8, 0xca, 0x72,
	0xa0, 0x8f, 0x08, 0x31, 0x73, 0xd4, 0xb6, 0x54, 0x43, 0xaf, 0x36, 0x3d, 0xf1, 0x72, 0x97, 0x34,
	0x38, 0xb3, 0x30, 0x43, 0xbd, 0x8a, 0xa3, 0x32, 0xba, 0xfe, 0x76, 0xd1, 0xa9, 0xc4, 0xa2, 0xec,
	0x8f, 0x2f, 0x2a, 0x4c, 0x9b, 0x8e, 0xf8, 0xa6, 0xd0, 0x57, 0xe4, 0xc8, 0x6a, 0xa6, 0x0c, 0x07,
	0x35, 0x01, 0x65, 0x99, 0xac, 0x8c, 0xbb, 0xde, 0x78, 0xb8, 0xa9, 0x95, 0x91, 0xa7, 0xe4, 0x60,
	0xbc, 0xb2, 0x60, 0x32, 0xc6, 0x39, 0x18, 0x03, 0x93, 0x78, 0xcf, 0x9b, 0x5b, 0x9e, 0x7e, 0xac,
	0x20, 0x7d, 0x46, 0x1e, 0x60, 0x61, 0x45, 0xce, 0x64, 0x66, 0x80, 0xa3, 0x9a, 0x98, 0xf8, 0x9e,
	0xf7, 0x1d, 0x54, 0xf8, 0xa2, 0xa4, 0xf4, 0x09, 0x69, 0xad, 0x87, 0x28, 0xd4, 0x04, 0x96, 0x71,
	0xc3, 0x0f, 0x6f, 0xbf, 0x82, 0x23, 0xc7, 0xba, 0x3f, 0x03, 0xdf, 0xb5, 0x5b, 0x2b, 0x41, 0x29,
	0xd9, 0xa9, 0x35, 0xcc, 0x9f, 0xb7, 0xef, 0x0b, 0xb7, 0xef, 0x73, 0x5b, 0x29, 0x6e, 0x26, 0x50,
	0x6d, 0x65, 0xf4, 0x3f, 0x5b, 0x79, 0x6b, 0x70, 0x69, 0x5b, 0x6c, 0x02, 0xd3, 0x7d, 0x4f, 0x3a,
	0x5b, 0x1b, 0x43, 0xdb, 0x24, 0xfa, 0x0e, 0xab, 0xaa, 0x50, 0x77, 0xa4, 0x47, 0x64, 0xf7, 0x8a,
	0xc9, 0xc5, 0x7a, 0x59, 0xcb, 0x8f, 0xb7, 0xe1, 0x9b, 0xe0, 0xd3, 0xf0, 0xf2, 0xc3, 0x4c, 0xd8,
	0xf9, 0x62, 0x3c, 0xe0, 0x98, 0x27, 0xb5, 0xe7, 0x79, 0xf7, 0x71, 0x86, 0x09, 0x47, 0x0d, 0x1b,
	0x8f, 0xf7, 0x4f, 0x10, 0x8c, 0xf7, 0xfc, 0xfb, 0x7c, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x41,
	0xac, 0xba, 0x6c, 0xe1, 0x03, 0x00, 0x00,
}
