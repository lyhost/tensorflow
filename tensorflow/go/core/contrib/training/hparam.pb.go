// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/contrib/training/python/training/hparam.proto

package training

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Protocol buffer holding hyper parameters.
// Examples of hyper parameters:
//   learning_rate = 0.1,
//   num_hidden_units = 100,
//   activations = ['relu', 'tanh']
type HParamDef struct {
	Hparam               map[string]*HParamDef_HParamType `protobuf:"bytes,1,rep,name=hparam,proto3" json:"hparam,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *HParamDef) Reset()         { *m = HParamDef{} }
func (m *HParamDef) String() string { return proto.CompactTextString(m) }
func (*HParamDef) ProtoMessage()    {}
func (*HParamDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0}
}

func (m *HParamDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef.Unmarshal(m, b)
}
func (m *HParamDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef.Marshal(b, m, deterministic)
}
func (m *HParamDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef.Merge(m, src)
}
func (m *HParamDef) XXX_Size() int {
	return xxx_messageInfo_HParamDef.Size(m)
}
func (m *HParamDef) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef proto.InternalMessageInfo

func (m *HParamDef) GetHparam() map[string]*HParamDef_HParamType {
	if m != nil {
		return m.Hparam
	}
	return nil
}

type HParamDef_BytesList struct {
	Value                [][]byte `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HParamDef_BytesList) Reset()         { *m = HParamDef_BytesList{} }
func (m *HParamDef_BytesList) String() string { return proto.CompactTextString(m) }
func (*HParamDef_BytesList) ProtoMessage()    {}
func (*HParamDef_BytesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0, 0}
}

func (m *HParamDef_BytesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef_BytesList.Unmarshal(m, b)
}
func (m *HParamDef_BytesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef_BytesList.Marshal(b, m, deterministic)
}
func (m *HParamDef_BytesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef_BytesList.Merge(m, src)
}
func (m *HParamDef_BytesList) XXX_Size() int {
	return xxx_messageInfo_HParamDef_BytesList.Size(m)
}
func (m *HParamDef_BytesList) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef_BytesList.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef_BytesList proto.InternalMessageInfo

func (m *HParamDef_BytesList) GetValue() [][]byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type HParamDef_FloatList struct {
	Value                []float32 `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HParamDef_FloatList) Reset()         { *m = HParamDef_FloatList{} }
func (m *HParamDef_FloatList) String() string { return proto.CompactTextString(m) }
func (*HParamDef_FloatList) ProtoMessage()    {}
func (*HParamDef_FloatList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0, 1}
}

func (m *HParamDef_FloatList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef_FloatList.Unmarshal(m, b)
}
func (m *HParamDef_FloatList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef_FloatList.Marshal(b, m, deterministic)
}
func (m *HParamDef_FloatList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef_FloatList.Merge(m, src)
}
func (m *HParamDef_FloatList) XXX_Size() int {
	return xxx_messageInfo_HParamDef_FloatList.Size(m)
}
func (m *HParamDef_FloatList) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef_FloatList.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef_FloatList proto.InternalMessageInfo

func (m *HParamDef_FloatList) GetValue() []float32 {
	if m != nil {
		return m.Value
	}
	return nil
}

type HParamDef_Int64List struct {
	Value                []int64  `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HParamDef_Int64List) Reset()         { *m = HParamDef_Int64List{} }
func (m *HParamDef_Int64List) String() string { return proto.CompactTextString(m) }
func (*HParamDef_Int64List) ProtoMessage()    {}
func (*HParamDef_Int64List) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0, 2}
}

func (m *HParamDef_Int64List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef_Int64List.Unmarshal(m, b)
}
func (m *HParamDef_Int64List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef_Int64List.Marshal(b, m, deterministic)
}
func (m *HParamDef_Int64List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef_Int64List.Merge(m, src)
}
func (m *HParamDef_Int64List) XXX_Size() int {
	return xxx_messageInfo_HParamDef_Int64List.Size(m)
}
func (m *HParamDef_Int64List) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef_Int64List.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef_Int64List proto.InternalMessageInfo

func (m *HParamDef_Int64List) GetValue() []int64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type HParamDef_BoolList struct {
	Value                []bool   `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HParamDef_BoolList) Reset()         { *m = HParamDef_BoolList{} }
func (m *HParamDef_BoolList) String() string { return proto.CompactTextString(m) }
func (*HParamDef_BoolList) ProtoMessage()    {}
func (*HParamDef_BoolList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0, 3}
}

func (m *HParamDef_BoolList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef_BoolList.Unmarshal(m, b)
}
func (m *HParamDef_BoolList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef_BoolList.Marshal(b, m, deterministic)
}
func (m *HParamDef_BoolList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef_BoolList.Merge(m, src)
}
func (m *HParamDef_BoolList) XXX_Size() int {
	return xxx_messageInfo_HParamDef_BoolList.Size(m)
}
func (m *HParamDef_BoolList) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef_BoolList.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef_BoolList proto.InternalMessageInfo

func (m *HParamDef_BoolList) GetValue() []bool {
	if m != nil {
		return m.Value
	}
	return nil
}

type HParamDef_HParamType struct {
	// Types that are valid to be assigned to Kind:
	//	*HParamDef_HParamType_Int64Value
	//	*HParamDef_HParamType_FloatValue
	//	*HParamDef_HParamType_BytesValue
	//	*HParamDef_HParamType_BoolValue
	//	*HParamDef_HParamType_Int64List
	//	*HParamDef_HParamType_FloatList
	//	*HParamDef_HParamType_BytesList
	//	*HParamDef_HParamType_BoolList
	Kind                 isHParamDef_HParamType_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *HParamDef_HParamType) Reset()         { *m = HParamDef_HParamType{} }
func (m *HParamDef_HParamType) String() string { return proto.CompactTextString(m) }
func (*HParamDef_HParamType) ProtoMessage()    {}
func (*HParamDef_HParamType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3861c8650a3f8c91, []int{0, 4}
}

func (m *HParamDef_HParamType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HParamDef_HParamType.Unmarshal(m, b)
}
func (m *HParamDef_HParamType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HParamDef_HParamType.Marshal(b, m, deterministic)
}
func (m *HParamDef_HParamType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HParamDef_HParamType.Merge(m, src)
}
func (m *HParamDef_HParamType) XXX_Size() int {
	return xxx_messageInfo_HParamDef_HParamType.Size(m)
}
func (m *HParamDef_HParamType) XXX_DiscardUnknown() {
	xxx_messageInfo_HParamDef_HParamType.DiscardUnknown(m)
}

var xxx_messageInfo_HParamDef_HParamType proto.InternalMessageInfo

type isHParamDef_HParamType_Kind interface {
	isHParamDef_HParamType_Kind()
}

type HParamDef_HParamType_Int64Value struct {
	Int64Value int64 `protobuf:"varint,1,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type HParamDef_HParamType_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type HParamDef_HParamType_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,3,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type HParamDef_HParamType_BoolValue struct {
	BoolValue bool `protobuf:"varint,7,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type HParamDef_HParamType_Int64List struct {
	Int64List *HParamDef_Int64List `protobuf:"bytes,4,opt,name=int64_list,json=int64List,proto3,oneof"`
}

type HParamDef_HParamType_FloatList struct {
	FloatList *HParamDef_FloatList `protobuf:"bytes,5,opt,name=float_list,json=floatList,proto3,oneof"`
}

type HParamDef_HParamType_BytesList struct {
	BytesList *HParamDef_BytesList `protobuf:"bytes,6,opt,name=bytes_list,json=bytesList,proto3,oneof"`
}

type HParamDef_HParamType_BoolList struct {
	BoolList *HParamDef_BoolList `protobuf:"bytes,8,opt,name=bool_list,json=boolList,proto3,oneof"`
}

func (*HParamDef_HParamType_Int64Value) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_FloatValue) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_BytesValue) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_BoolValue) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_Int64List) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_FloatList) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_BytesList) isHParamDef_HParamType_Kind() {}

func (*HParamDef_HParamType_BoolList) isHParamDef_HParamType_Kind() {}

func (m *HParamDef_HParamType) GetKind() isHParamDef_HParamType_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *HParamDef_HParamType) GetInt64Value() int64 {
	if x, ok := m.GetKind().(*HParamDef_HParamType_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *HParamDef_HParamType) GetFloatValue() float32 {
	if x, ok := m.GetKind().(*HParamDef_HParamType_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *HParamDef_HParamType) GetBytesValue() []byte {
	if x, ok := m.GetKind().(*HParamDef_HParamType_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *HParamDef_HParamType) GetBoolValue() bool {
	if x, ok := m.GetKind().(*HParamDef_HParamType_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *HParamDef_HParamType) GetInt64List() *HParamDef_Int64List {
	if x, ok := m.GetKind().(*HParamDef_HParamType_Int64List); ok {
		return x.Int64List
	}
	return nil
}

func (m *HParamDef_HParamType) GetFloatList() *HParamDef_FloatList {
	if x, ok := m.GetKind().(*HParamDef_HParamType_FloatList); ok {
		return x.FloatList
	}
	return nil
}

func (m *HParamDef_HParamType) GetBytesList() *HParamDef_BytesList {
	if x, ok := m.GetKind().(*HParamDef_HParamType_BytesList); ok {
		return x.BytesList
	}
	return nil
}

func (m *HParamDef_HParamType) GetBoolList() *HParamDef_BoolList {
	if x, ok := m.GetKind().(*HParamDef_HParamType_BoolList); ok {
		return x.BoolList
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HParamDef_HParamType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HParamDef_HParamType_Int64Value)(nil),
		(*HParamDef_HParamType_FloatValue)(nil),
		(*HParamDef_HParamType_BytesValue)(nil),
		(*HParamDef_HParamType_BoolValue)(nil),
		(*HParamDef_HParamType_Int64List)(nil),
		(*HParamDef_HParamType_FloatList)(nil),
		(*HParamDef_HParamType_BytesList)(nil),
		(*HParamDef_HParamType_BoolList)(nil),
	}
}

func init() {
	proto.RegisterType((*HParamDef)(nil), "tensorflow.HParamDef")
	proto.RegisterMapType((map[string]*HParamDef_HParamType)(nil), "tensorflow.HParamDef.HparamEntry")
	proto.RegisterType((*HParamDef_BytesList)(nil), "tensorflow.HParamDef.BytesList")
	proto.RegisterType((*HParamDef_FloatList)(nil), "tensorflow.HParamDef.FloatList")
	proto.RegisterType((*HParamDef_Int64List)(nil), "tensorflow.HParamDef.Int64List")
	proto.RegisterType((*HParamDef_BoolList)(nil), "tensorflow.HParamDef.BoolList")
	proto.RegisterType((*HParamDef_HParamType)(nil), "tensorflow.HParamDef.HParamType")
}

func init() {
	proto.RegisterFile("tensorflow/contrib/training/python/training/hparam.proto", fileDescriptor_3861c8650a3f8c91)
}

var fileDescriptor_3861c8650a3f8c91 = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0xea, 0x9b, 0x40,
	0x10, 0xc7, 0xb3, 0xfa, 0x8b, 0xd5, 0x31, 0x87, 0x20, 0x3d, 0x84, 0x1c, 0x1a, 0x53, 0x5a, 0xf0,
	0xa4, 0x90, 0x96, 0x90, 0x16, 0x0a, 0x41, 0xd2, 0x62, 0xa0, 0x87, 0x22, 0xa5, 0x87, 0xf6, 0x10,
	0x34, 0xd5, 0x64, 0x89, 0xd9, 0x15, 0xdd, 0xb4, 0xf8, 0x3c, 0x7d, 0xb1, 0x3e, 0x46, 0x8f, 0x65,
	0x77, 0xcd, 0x46, 0xc8, 0x9f, 0xdb, 0x38, 0x7e, 0xf6, 0xbb, 0x33, 0xf3, 0xdd, 0x81, 0x05, 0xcb,
	0x48, 0x4d, 0xab, 0xbc, 0xa0, 0xbf, 0x83, 0x2d, 0x25, 0xac, 0xc2, 0x69, 0xc0, 0xaa, 0x04, 0x13,
	0x4c, 0x76, 0x41, 0xd9, 0xb0, 0x3d, 0x25, 0x97, 0xef, 0x7d, 0x99, 0x54, 0xc9, 0xd1, 0x2f, 0x2b,
	0xca, 0xa8, 0x03, 0x97, 0x93, 0x2f, 0xff, 0xf6, 0xc1, 0x8a, 0xbe, 0xf0, 0x9f, 0xab, 0x2c, 0x77,
	0xde, 0x81, 0x21, 0xc9, 0x11, 0x72, 0x75, 0xcf, 0x9e, 0x4d, 0xfd, 0x0b, 0xea, 0x2b, 0xcc, 0x8f,
	0x04, 0xf3, 0x91, 0xb0, 0xaa, 0x89, 0xdb, 0x03, 0xe3, 0x29, 0x58, 0x61, 0xc3, 0xb2, 0xfa, 0x33,
	0xae, 0x99, 0xf3, 0x1c, 0xfa, 0xbf, 0x92, 0xe2, 0x94, 0x09, 0x99, 0x41, 0x2c, 0x3f, 0xc6, 0xaf,
	0xc1, 0xfa, 0x54, 0xd0, 0x84, 0x09, 0x64, 0xd4, 0x45, 0xb4, 0x50, 0x1b, 0xa2, 0x0e, 0xb6, 0x26,
	0x6c, 0xfe, 0xf6, 0x1a, 0xd3, 0xbb, 0xd8, 0x2b, 0x30, 0x43, 0x4a, 0x8b, 0x6b, 0xca, 0xec, 0x52,
	0x7f, 0x74, 0x00, 0x59, 0xf8, 0xd7, 0xa6, 0xcc, 0x9c, 0x29, 0xd8, 0x98, 0x6b, 0x6f, 0xce, 0x38,
	0xf2, 0xf4, 0xa8, 0x17, 0x83, 0x48, 0x7e, 0xe3, 0x39, 0x8e, 0xe4, 0xbc, 0xca, 0x16, 0xd1, 0x5c,
	0xe4, 0x69, 0x1c, 0x11, 0x49, 0x85, 0xa4, 0xbc, 0xd7, 0x16, 0xd1, 0x5d, 0xe4, 0x0d, 0x38, 0x22,
	0x92, 0x12, 0x99, 0x00, 0xa4, 0x94, 0x16, 0x2d, 0xf1, 0xcc, 0x45, 0x9e, 0x19, 0xf5, 0x62, 0x8b,
	0xe7, 0x24, 0xb0, 0x04, 0x79, 0xe9, 0xa6, 0xc0, 0x35, 0x1b, 0x3d, 0xb9, 0xc8, 0xb3, 0x67, 0x93,
	0xdb, 0xe3, 0x56, 0xd3, 0xe0, 0x0a, 0x58, 0x8d, 0x66, 0x09, 0xb2, 0x26, 0xa9, 0xd0, 0x7f, 0xa4,
	0xa0, 0xc6, 0xce, 0x15, 0x72, 0xe5, 0xc1, 0x12, 0x64, 0xc9, 0x52, 0xc1, 0x78, 0xa4, 0xa0, 0xbc,
	0x15, 0x5d, 0x28, 0xa3, 0x3f, 0x80, 0x68, 0x49, 0x0a, 0x98, 0x42, 0xe0, 0xc5, 0x1d, 0x81, 0xd6,
	0xab, 0xa8, 0x17, 0x9b, 0x69, 0x1b, 0x87, 0x06, 0x3c, 0x1d, 0x30, 0xf9, 0x39, 0xfe, 0x01, 0x76,
	0xe7, 0x4d, 0x39, 0x43, 0xd0, 0x0f, 0x59, 0x23, 0xdc, 0xb1, 0x62, 0x1e, 0x3a, 0xf3, 0xb3, 0xc1,
	0x9a, 0xb8, 0xc3, 0xbd, 0xf3, 0x2e, 0x95, 0xd1, 0xad, 0xfd, 0xef, 0xb5, 0x05, 0x0a, 0xd7, 0xdf,
	0x57, 0x3b, 0xcc, 0xf6, 0xa7, 0xd4, 0xdf, 0xd2, 0x63, 0xd0, 0xd9, 0x9a, 0xdb, 0xe1, 0x8e, 0x06,
	0x5b, 0x5a, 0x65, 0x57, 0x3b, 0xf5, 0x0f, 0xa1, 0xd4, 0x10, 0x0b, 0xf4, 0xe6, 0x7f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x3e, 0x85, 0x2b, 0x49, 0x7c, 0x03, 0x00, 0x00,
}
