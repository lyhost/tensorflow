// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/contrib/session_bundle/manifest.proto

package session_bundle

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Signatures of model export.
type Signatures struct {
	// Default signature of the graph.
	// WARNING(break-tutorial-inline-code): The following code snippet is
	// in-lined in tutorials, please update tutorial documents accordingly
	// whenever code changes.
	DefaultSignature *Signature `protobuf:"bytes,1,opt,name=default_signature,json=defaultSignature,proto3" json:"default_signature,omitempty"`
	// Named signatures of the graph.
	NamedSignatures      map[string]*Signature `protobuf:"bytes,2,rep,name=named_signatures,json=namedSignatures,proto3" json:"named_signatures,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Signatures) Reset()         { *m = Signatures{} }
func (m *Signatures) String() string { return proto.CompactTextString(m) }
func (*Signatures) ProtoMessage()    {}
func (*Signatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{0}
}

func (m *Signatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signatures.Unmarshal(m, b)
}
func (m *Signatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signatures.Marshal(b, m, deterministic)
}
func (m *Signatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signatures.Merge(m, src)
}
func (m *Signatures) XXX_Size() int {
	return xxx_messageInfo_Signatures.Size(m)
}
func (m *Signatures) XXX_DiscardUnknown() {
	xxx_messageInfo_Signatures.DiscardUnknown(m)
}

var xxx_messageInfo_Signatures proto.InternalMessageInfo

func (m *Signatures) GetDefaultSignature() *Signature {
	if m != nil {
		return m.DefaultSignature
	}
	return nil
}

func (m *Signatures) GetNamedSignatures() map[string]*Signature {
	if m != nil {
		return m.NamedSignatures
	}
	return nil
}

// A binding to a tensor including the name and, possibly in the future, type
// or other metadata. For example, this may specify whether a tensor supports
// batch vs single inference.
type TensorBinding struct {
	// The name of the tensor to bind to.
	TensorName           string   `protobuf:"bytes,1,opt,name=tensor_name,json=tensorName,proto3" json:"tensor_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TensorBinding) Reset()         { *m = TensorBinding{} }
func (m *TensorBinding) String() string { return proto.CompactTextString(m) }
func (*TensorBinding) ProtoMessage()    {}
func (*TensorBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{1}
}

func (m *TensorBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TensorBinding.Unmarshal(m, b)
}
func (m *TensorBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TensorBinding.Marshal(b, m, deterministic)
}
func (m *TensorBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TensorBinding.Merge(m, src)
}
func (m *TensorBinding) XXX_Size() int {
	return xxx_messageInfo_TensorBinding.Size(m)
}
func (m *TensorBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_TensorBinding.DiscardUnknown(m)
}

var xxx_messageInfo_TensorBinding proto.InternalMessageInfo

func (m *TensorBinding) GetTensorName() string {
	if m != nil {
		return m.TensorName
	}
	return ""
}

// An asset file or set of sharded files with the same name that will be bound
// to a tensor at init / session_bundle load time.
type AssetFile struct {
	// The tensor to bind the asset filename to.
	TensorBinding *TensorBinding `protobuf:"bytes,1,opt,name=tensor_binding,json=tensorBinding,proto3" json:"tensor_binding,omitempty"`
	// The filename within the assets directory. Note: does not include the base
	// path or asset directory prefix. Base paths can and will change when models
	// are deployed for serving.
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetFile) Reset()         { *m = AssetFile{} }
func (m *AssetFile) String() string { return proto.CompactTextString(m) }
func (*AssetFile) ProtoMessage()    {}
func (*AssetFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{2}
}

func (m *AssetFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetFile.Unmarshal(m, b)
}
func (m *AssetFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetFile.Marshal(b, m, deterministic)
}
func (m *AssetFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetFile.Merge(m, src)
}
func (m *AssetFile) XXX_Size() int {
	return xxx_messageInfo_AssetFile.Size(m)
}
func (m *AssetFile) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetFile.DiscardUnknown(m)
}

var xxx_messageInfo_AssetFile proto.InternalMessageInfo

func (m *AssetFile) GetTensorBinding() *TensorBinding {
	if m != nil {
		return m.TensorBinding
	}
	return nil
}

func (m *AssetFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// A Signature specifies the inputs and outputs of commonly used graphs.
type Signature struct {
	// Types that are valid to be assigned to Type:
	//	*Signature_RegressionSignature
	//	*Signature_ClassificationSignature
	//	*Signature_GenericSignature
	Type                 isSignature_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{3}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

type isSignature_Type interface {
	isSignature_Type()
}

type Signature_RegressionSignature struct {
	RegressionSignature *RegressionSignature `protobuf:"bytes,1,opt,name=regression_signature,json=regressionSignature,proto3,oneof"`
}

type Signature_ClassificationSignature struct {
	ClassificationSignature *ClassificationSignature `protobuf:"bytes,2,opt,name=classification_signature,json=classificationSignature,proto3,oneof"`
}

type Signature_GenericSignature struct {
	GenericSignature *GenericSignature `protobuf:"bytes,3,opt,name=generic_signature,json=genericSignature,proto3,oneof"`
}

func (*Signature_RegressionSignature) isSignature_Type() {}

func (*Signature_ClassificationSignature) isSignature_Type() {}

func (*Signature_GenericSignature) isSignature_Type() {}

func (m *Signature) GetType() isSignature_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Signature) GetRegressionSignature() *RegressionSignature {
	if x, ok := m.GetType().(*Signature_RegressionSignature); ok {
		return x.RegressionSignature
	}
	return nil
}

func (m *Signature) GetClassificationSignature() *ClassificationSignature {
	if x, ok := m.GetType().(*Signature_ClassificationSignature); ok {
		return x.ClassificationSignature
	}
	return nil
}

func (m *Signature) GetGenericSignature() *GenericSignature {
	if x, ok := m.GetType().(*Signature_GenericSignature); ok {
		return x.GenericSignature
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Signature) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Signature_RegressionSignature)(nil),
		(*Signature_ClassificationSignature)(nil),
		(*Signature_GenericSignature)(nil),
	}
}

// RegressionSignature specifies a graph that takes an input and returns an
// output.
type RegressionSignature struct {
	Input                *TensorBinding `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               *TensorBinding `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RegressionSignature) Reset()         { *m = RegressionSignature{} }
func (m *RegressionSignature) String() string { return proto.CompactTextString(m) }
func (*RegressionSignature) ProtoMessage()    {}
func (*RegressionSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{4}
}

func (m *RegressionSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegressionSignature.Unmarshal(m, b)
}
func (m *RegressionSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegressionSignature.Marshal(b, m, deterministic)
}
func (m *RegressionSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegressionSignature.Merge(m, src)
}
func (m *RegressionSignature) XXX_Size() int {
	return xxx_messageInfo_RegressionSignature.Size(m)
}
func (m *RegressionSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_RegressionSignature.DiscardUnknown(m)
}

var xxx_messageInfo_RegressionSignature proto.InternalMessageInfo

func (m *RegressionSignature) GetInput() *TensorBinding {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *RegressionSignature) GetOutput() *TensorBinding {
	if m != nil {
		return m.Output
	}
	return nil
}

// ClassificationSignature specifies a graph that takes an input and returns
// classes and their scores.
// WARNING(break-tutorial-inline-code): The following code snippet is
// in-lined in tutorials, please update tutorial documents accordingly
// whenever code changes.
type ClassificationSignature struct {
	Input                *TensorBinding `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Classes              *TensorBinding `protobuf:"bytes,2,opt,name=classes,proto3" json:"classes,omitempty"`
	Scores               *TensorBinding `protobuf:"bytes,3,opt,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClassificationSignature) Reset()         { *m = ClassificationSignature{} }
func (m *ClassificationSignature) String() string { return proto.CompactTextString(m) }
func (*ClassificationSignature) ProtoMessage()    {}
func (*ClassificationSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{5}
}

func (m *ClassificationSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassificationSignature.Unmarshal(m, b)
}
func (m *ClassificationSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassificationSignature.Marshal(b, m, deterministic)
}
func (m *ClassificationSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassificationSignature.Merge(m, src)
}
func (m *ClassificationSignature) XXX_Size() int {
	return xxx_messageInfo_ClassificationSignature.Size(m)
}
func (m *ClassificationSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassificationSignature.DiscardUnknown(m)
}

var xxx_messageInfo_ClassificationSignature proto.InternalMessageInfo

func (m *ClassificationSignature) GetInput() *TensorBinding {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *ClassificationSignature) GetClasses() *TensorBinding {
	if m != nil {
		return m.Classes
	}
	return nil
}

func (m *ClassificationSignature) GetScores() *TensorBinding {
	if m != nil {
		return m.Scores
	}
	return nil
}

// GenericSignature specifies a map from logical name to Tensor name.
// Typical application of GenericSignature is to use a single GenericSignature
// that includes all of the Tensor nodes and target names that may be useful at
// serving, analysis or debugging time. The recommended name for this signature
// in the ModelManifest is "generic_bindings".
type GenericSignature struct {
	Map                  map[string]*TensorBinding `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GenericSignature) Reset()         { *m = GenericSignature{} }
func (m *GenericSignature) String() string { return proto.CompactTextString(m) }
func (*GenericSignature) ProtoMessage()    {}
func (*GenericSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c52a20d13335e3a, []int{6}
}

func (m *GenericSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericSignature.Unmarshal(m, b)
}
func (m *GenericSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericSignature.Marshal(b, m, deterministic)
}
func (m *GenericSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericSignature.Merge(m, src)
}
func (m *GenericSignature) XXX_Size() int {
	return xxx_messageInfo_GenericSignature.Size(m)
}
func (m *GenericSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericSignature.DiscardUnknown(m)
}

var xxx_messageInfo_GenericSignature proto.InternalMessageInfo

func (m *GenericSignature) GetMap() map[string]*TensorBinding {
	if m != nil {
		return m.Map
	}
	return nil
}

func init() {
	proto.RegisterType((*Signatures)(nil), "tensorflow.serving.Signatures")
	proto.RegisterMapType((map[string]*Signature)(nil), "tensorflow.serving.Signatures.NamedSignaturesEntry")
	proto.RegisterType((*TensorBinding)(nil), "tensorflow.serving.TensorBinding")
	proto.RegisterType((*AssetFile)(nil), "tensorflow.serving.AssetFile")
	proto.RegisterType((*Signature)(nil), "tensorflow.serving.Signature")
	proto.RegisterType((*RegressionSignature)(nil), "tensorflow.serving.RegressionSignature")
	proto.RegisterType((*ClassificationSignature)(nil), "tensorflow.serving.ClassificationSignature")
	proto.RegisterType((*GenericSignature)(nil), "tensorflow.serving.GenericSignature")
	proto.RegisterMapType((map[string]*TensorBinding)(nil), "tensorflow.serving.GenericSignature.MapEntry")
}

func init() {
	proto.RegisterFile("tensorflow/contrib/session_bundle/manifest.proto", fileDescriptor_0c52a20d13335e3a)
}

var fileDescriptor_0c52a20d13335e3a = []byte{
	// 523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0xc7, 0x4d, 0x62, 0xd7, 0xee, 0x59, 0xaa, 0xe9, 0xb4, 0xd0, 0xb0, 0x20, 0xd6, 0x20, 0x58,
	0x10, 0x93, 0xd2, 0xbd, 0xa8, 0x1f, 0x17, 0xe2, 0x8a, 0x5a, 0x8a, 0x7a, 0x91, 0x7a, 0xa3, 0x88,
	0xcb, 0x24, 0x3b, 0x49, 0x07, 0xb3, 0x33, 0x71, 0x66, 0x52, 0xd9, 0x47, 0xf0, 0x19, 0x7c, 0x07,
	0xf1, 0x39, 0x7c, 0x2a, 0xc9, 0xc7, 0x66, 0x37, 0xdb, 0xa9, 0x84, 0xde, 0xcd, 0x9c, 0x9c, 0xdf,
	0xf9, 0x9f, 0x8f, 0x9c, 0x81, 0x43, 0x45, 0x98, 0xe4, 0x22, 0x4e, 0xf9, 0x0f, 0x3f, 0xe2, 0x4c,
	0x09, 0x1a, 0xfa, 0x92, 0x48, 0x49, 0x39, 0x9b, 0x84, 0x39, 0x9b, 0xa6, 0xc4, 0x9f, 0x61, 0x46,
	0x63, 0x22, 0x95, 0x97, 0x09, 0xae, 0x38, 0x42, 0x4b, 0xc2, 0x93, 0x44, 0x5c, 0x50, 0x96, 0xb8,
	0xbf, 0x4c, 0x80, 0x33, 0x9a, 0x30, 0xac, 0x72, 0x41, 0x24, 0x3a, 0x85, 0xed, 0x29, 0x89, 0x71,
	0x9e, 0xaa, 0x89, 0x5c, 0x58, 0x1d, 0x63, 0xdf, 0x38, 0x18, 0x1c, 0xdd, 0xf5, 0x2e, 0xe3, 0x5e,
	0x83, 0x06, 0x76, 0xcd, 0x35, 0x16, 0xf4, 0x15, 0x6c, 0x86, 0x67, 0x64, 0xba, 0x8c, 0x24, 0x1d,
	0x73, 0xdf, 0x3a, 0x18, 0x1c, 0x8d, 0xfe, 0x1b, 0x4a, 0x7a, 0x1f, 0x0a, 0x6c, 0x79, 0x7f, 0xcd,
	0x94, 0x98, 0x07, 0x77, 0x58, 0xdb, 0x3a, 0xc4, 0xb0, 0xab, 0x73, 0x44, 0x36, 0x58, 0xdf, 0xc8,
	0xbc, 0xcc, 0xba, 0x1f, 0x14, 0x47, 0x34, 0x82, 0x8d, 0x0b, 0x9c, 0xe6, 0xc4, 0x31, 0xbb, 0x54,
	0x52, 0xf9, 0x3e, 0x33, 0x9f, 0x18, 0xee, 0x21, 0x6c, 0x7d, 0x2c, 0x5d, 0xc7, 0x94, 0x4d, 0x29,
	0x4b, 0xd0, 0x3d, 0x18, 0x54, 0xec, 0xa4, 0xc8, 0xa6, 0xd6, 0x80, 0xca, 0x54, 0x24, 0xe3, 0x7e,
	0x87, 0xfe, 0x4b, 0x29, 0x89, 0x7a, 0x43, 0x53, 0x82, 0x4e, 0xe0, 0x76, 0xed, 0x1d, 0x56, 0x7c,
	0xdd, 0xca, 0xfb, 0xba, 0x04, 0x5a, 0x42, 0xc1, 0x96, 0x6a, 0xe9, 0x0e, 0x61, 0x33, 0xa6, 0x29,
	0x29, 0x45, 0xcd, 0x52, 0xb4, 0xb9, 0xbb, 0x7f, 0x4c, 0xe8, 0x2f, 0xbb, 0xfe, 0x05, 0x76, 0x05,
	0x49, 0x44, 0xfd, 0x23, 0xac, 0x0f, 0xf1, 0xa1, 0x4e, 0x39, 0x68, 0xfc, 0x9b, 0x30, 0x27, 0x37,
	0x82, 0x1d, 0x71, 0xd9, 0x8c, 0xce, 0xc1, 0x89, 0x52, 0x2c, 0x25, 0x8d, 0x69, 0x84, 0x55, 0x5b,
	0xa1, 0x6a, 0xee, 0x23, 0x9d, 0xc2, 0xab, 0x16, 0xb3, 0xaa, 0xb2, 0x17, 0xe9, 0x3f, 0xa1, 0x33,
	0xd8, 0x4e, 0x08, 0x23, 0x82, 0x46, 0x2b, 0x12, 0x56, 0x29, 0xf1, 0x40, 0x27, 0xf1, 0xb6, 0x72,
	0x5e, 0x8d, 0x6d, 0x27, 0x6b, 0xb6, 0x71, 0x0f, 0x6e, 0xaa, 0x79, 0x46, 0xdc, 0x9f, 0x06, 0xec,
	0x68, 0xaa, 0x46, 0xc7, 0xb0, 0x41, 0x59, 0x96, 0xab, 0xee, 0x73, 0xaa, 0xfc, 0xd1, 0x53, 0xe8,
	0xf1, 0x5c, 0x15, 0xa4, 0xd9, 0x95, 0xac, 0x01, 0xf7, 0xaf, 0x01, 0x7b, 0x57, 0xf4, 0xe7, 0xfa,
	0xf9, 0x3c, 0x87, 0x5b, 0x65, 0x63, 0xcb, 0x95, 0xeb, 0x88, 0x2e, 0x88, 0xa2, 0x18, 0x19, 0xf1,
	0x62, 0x5d, 0xad, 0xce, 0xc5, 0x54, 0x80, 0xfb, 0xdb, 0x00, 0x7b, 0x7d, 0x12, 0xe8, 0x05, 0x58,
	0x33, 0x9c, 0x39, 0x46, 0xb9, 0xfb, 0x8f, 0xbb, 0x0c, 0xcf, 0x7b, 0x8f, 0xb3, 0x6a, 0xeb, 0x0b,
	0x72, 0xf8, 0x09, 0x36, 0x17, 0x06, 0xcd, 0x76, 0x1f, 0xb7, 0xb7, 0xbb, 0x4b, 0x93, 0x9a, 0x0d,
	0x1f, 0xbf, 0xfb, 0x7c, 0x9a, 0x50, 0x75, 0x9e, 0x87, 0x5e, 0xc4, 0x67, 0xfe, 0xca, 0x93, 0xaa,
	0x3f, 0x26, 0xdc, 0x2f, 0x0a, 0xbd, 0xe2, 0xc1, 0x0d, 0x7b, 0xe5, 0x43, 0x3b, 0xfa, 0x17, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0x5e, 0xd9, 0x03, 0x9c, 0x05, 0x00, 0x00,
}
