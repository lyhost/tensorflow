// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/profiler/profiler_analysis.proto

package profiler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewProfileSessionRequest struct {
	Request              *ProfileRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	RepositoryRoot       string          `protobuf:"bytes,2,opt,name=repository_root,json=repositoryRoot,proto3" json:"repository_root,omitempty"`
	Hosts                []string        `protobuf:"bytes,3,rep,name=hosts,proto3" json:"hosts,omitempty"`
	SessionId            string          `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NewProfileSessionRequest) Reset()         { *m = NewProfileSessionRequest{} }
func (m *NewProfileSessionRequest) String() string { return proto.CompactTextString(m) }
func (*NewProfileSessionRequest) ProtoMessage()    {}
func (*NewProfileSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{0}
}

func (m *NewProfileSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewProfileSessionRequest.Unmarshal(m, b)
}
func (m *NewProfileSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewProfileSessionRequest.Marshal(b, m, deterministic)
}
func (m *NewProfileSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewProfileSessionRequest.Merge(m, src)
}
func (m *NewProfileSessionRequest) XXX_Size() int {
	return xxx_messageInfo_NewProfileSessionRequest.Size(m)
}
func (m *NewProfileSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewProfileSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewProfileSessionRequest proto.InternalMessageInfo

func (m *NewProfileSessionRequest) GetRequest() *ProfileRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *NewProfileSessionRequest) GetRepositoryRoot() string {
	if m != nil {
		return m.RepositoryRoot
	}
	return ""
}

func (m *NewProfileSessionRequest) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *NewProfileSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type NewProfileSessionResponse struct {
	// Auxiliary error_message.
	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Whether all hosts had returned a empty trace.
	EmptyTrace           bool     `protobuf:"varint,2,opt,name=empty_trace,json=emptyTrace,proto3" json:"empty_trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewProfileSessionResponse) Reset()         { *m = NewProfileSessionResponse{} }
func (m *NewProfileSessionResponse) String() string { return proto.CompactTextString(m) }
func (*NewProfileSessionResponse) ProtoMessage()    {}
func (*NewProfileSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{1}
}

func (m *NewProfileSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewProfileSessionResponse.Unmarshal(m, b)
}
func (m *NewProfileSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewProfileSessionResponse.Marshal(b, m, deterministic)
}
func (m *NewProfileSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewProfileSessionResponse.Merge(m, src)
}
func (m *NewProfileSessionResponse) XXX_Size() int {
	return xxx_messageInfo_NewProfileSessionResponse.Size(m)
}
func (m *NewProfileSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewProfileSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewProfileSessionResponse proto.InternalMessageInfo

func (m *NewProfileSessionResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *NewProfileSessionResponse) GetEmptyTrace() bool {
	if m != nil {
		return m.EmptyTrace
	}
	return false
}

type EnumProfileSessionsAndToolsRequest struct {
	RepositoryRoot       string   `protobuf:"bytes,1,opt,name=repository_root,json=repositoryRoot,proto3" json:"repository_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnumProfileSessionsAndToolsRequest) Reset()         { *m = EnumProfileSessionsAndToolsRequest{} }
func (m *EnumProfileSessionsAndToolsRequest) String() string { return proto.CompactTextString(m) }
func (*EnumProfileSessionsAndToolsRequest) ProtoMessage()    {}
func (*EnumProfileSessionsAndToolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{2}
}

func (m *EnumProfileSessionsAndToolsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumProfileSessionsAndToolsRequest.Unmarshal(m, b)
}
func (m *EnumProfileSessionsAndToolsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumProfileSessionsAndToolsRequest.Marshal(b, m, deterministic)
}
func (m *EnumProfileSessionsAndToolsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumProfileSessionsAndToolsRequest.Merge(m, src)
}
func (m *EnumProfileSessionsAndToolsRequest) XXX_Size() int {
	return xxx_messageInfo_EnumProfileSessionsAndToolsRequest.Size(m)
}
func (m *EnumProfileSessionsAndToolsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumProfileSessionsAndToolsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnumProfileSessionsAndToolsRequest proto.InternalMessageInfo

func (m *EnumProfileSessionsAndToolsRequest) GetRepositoryRoot() string {
	if m != nil {
		return m.RepositoryRoot
	}
	return ""
}

type ProfileSessionInfo struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Which tool data is available for consumption.
	AvailableTools       []string `protobuf:"bytes,2,rep,name=available_tools,json=availableTools,proto3" json:"available_tools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileSessionInfo) Reset()         { *m = ProfileSessionInfo{} }
func (m *ProfileSessionInfo) String() string { return proto.CompactTextString(m) }
func (*ProfileSessionInfo) ProtoMessage()    {}
func (*ProfileSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{3}
}

func (m *ProfileSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSessionInfo.Unmarshal(m, b)
}
func (m *ProfileSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSessionInfo.Marshal(b, m, deterministic)
}
func (m *ProfileSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSessionInfo.Merge(m, src)
}
func (m *ProfileSessionInfo) XXX_Size() int {
	return xxx_messageInfo_ProfileSessionInfo.Size(m)
}
func (m *ProfileSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSessionInfo proto.InternalMessageInfo

func (m *ProfileSessionInfo) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ProfileSessionInfo) GetAvailableTools() []string {
	if m != nil {
		return m.AvailableTools
	}
	return nil
}

type EnumProfileSessionsAndToolsResponse struct {
	// Auxiliary error_message.
	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// If success, the returned sessions information are stored here.
	Sessions             []*ProfileSessionInfo `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EnumProfileSessionsAndToolsResponse) Reset()         { *m = EnumProfileSessionsAndToolsResponse{} }
func (m *EnumProfileSessionsAndToolsResponse) String() string { return proto.CompactTextString(m) }
func (*EnumProfileSessionsAndToolsResponse) ProtoMessage()    {}
func (*EnumProfileSessionsAndToolsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{4}
}

func (m *EnumProfileSessionsAndToolsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnumProfileSessionsAndToolsResponse.Unmarshal(m, b)
}
func (m *EnumProfileSessionsAndToolsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnumProfileSessionsAndToolsResponse.Marshal(b, m, deterministic)
}
func (m *EnumProfileSessionsAndToolsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnumProfileSessionsAndToolsResponse.Merge(m, src)
}
func (m *EnumProfileSessionsAndToolsResponse) XXX_Size() int {
	return xxx_messageInfo_EnumProfileSessionsAndToolsResponse.Size(m)
}
func (m *EnumProfileSessionsAndToolsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnumProfileSessionsAndToolsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnumProfileSessionsAndToolsResponse proto.InternalMessageInfo

func (m *EnumProfileSessionsAndToolsResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *EnumProfileSessionsAndToolsResponse) GetSessions() []*ProfileSessionInfo {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type ProfileSessionDataRequest struct {
	RepositoryRoot string `protobuf:"bytes,1,opt,name=repository_root,json=repositoryRoot,proto3" json:"repository_root,omitempty"`
	SessionId      string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Which host the data is associated. if empty, data from all hosts are
	// aggregated.
	HostName string `protobuf:"bytes,5,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	// Which tool
	ToolName string `protobuf:"bytes,3,opt,name=tool_name,json=toolName,proto3" json:"tool_name,omitempty"`
	// Tool's specific parameters. e.g. TraceViewer's viewport etc
	Parameters           map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProfileSessionDataRequest) Reset()         { *m = ProfileSessionDataRequest{} }
func (m *ProfileSessionDataRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileSessionDataRequest) ProtoMessage()    {}
func (*ProfileSessionDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{5}
}

func (m *ProfileSessionDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSessionDataRequest.Unmarshal(m, b)
}
func (m *ProfileSessionDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSessionDataRequest.Marshal(b, m, deterministic)
}
func (m *ProfileSessionDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSessionDataRequest.Merge(m, src)
}
func (m *ProfileSessionDataRequest) XXX_Size() int {
	return xxx_messageInfo_ProfileSessionDataRequest.Size(m)
}
func (m *ProfileSessionDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSessionDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSessionDataRequest proto.InternalMessageInfo

func (m *ProfileSessionDataRequest) GetRepositoryRoot() string {
	if m != nil {
		return m.RepositoryRoot
	}
	return ""
}

func (m *ProfileSessionDataRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ProfileSessionDataRequest) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ProfileSessionDataRequest) GetToolName() string {
	if m != nil {
		return m.ToolName
	}
	return ""
}

func (m *ProfileSessionDataRequest) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ProfileSessionDataResponse struct {
	// Auxiliary error_message.
	ErrorMessage string `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Output format. e.g. "json" or "proto" or "blob"
	OutputFormat string `protobuf:"bytes,2,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"`
	// TODO(jiesun): figure out whether to put bytes or oneof tool specific proto.
	Output               []byte   `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileSessionDataResponse) Reset()         { *m = ProfileSessionDataResponse{} }
func (m *ProfileSessionDataResponse) String() string { return proto.CompactTextString(m) }
func (*ProfileSessionDataResponse) ProtoMessage()    {}
func (*ProfileSessionDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0133486ee83beb68, []int{6}
}

func (m *ProfileSessionDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileSessionDataResponse.Unmarshal(m, b)
}
func (m *ProfileSessionDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileSessionDataResponse.Marshal(b, m, deterministic)
}
func (m *ProfileSessionDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileSessionDataResponse.Merge(m, src)
}
func (m *ProfileSessionDataResponse) XXX_Size() int {
	return xxx_messageInfo_ProfileSessionDataResponse.Size(m)
}
func (m *ProfileSessionDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileSessionDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileSessionDataResponse proto.InternalMessageInfo

func (m *ProfileSessionDataResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ProfileSessionDataResponse) GetOutputFormat() string {
	if m != nil {
		return m.OutputFormat
	}
	return ""
}

func (m *ProfileSessionDataResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*NewProfileSessionRequest)(nil), "tensorflow.NewProfileSessionRequest")
	proto.RegisterType((*NewProfileSessionResponse)(nil), "tensorflow.NewProfileSessionResponse")
	proto.RegisterType((*EnumProfileSessionsAndToolsRequest)(nil), "tensorflow.EnumProfileSessionsAndToolsRequest")
	proto.RegisterType((*ProfileSessionInfo)(nil), "tensorflow.ProfileSessionInfo")
	proto.RegisterType((*EnumProfileSessionsAndToolsResponse)(nil), "tensorflow.EnumProfileSessionsAndToolsResponse")
	proto.RegisterType((*ProfileSessionDataRequest)(nil), "tensorflow.ProfileSessionDataRequest")
	proto.RegisterMapType((map[string]string)(nil), "tensorflow.ProfileSessionDataRequest.ParametersEntry")
	proto.RegisterType((*ProfileSessionDataResponse)(nil), "tensorflow.ProfileSessionDataResponse")
}

func init() {
	proto.RegisterFile("tensorflow/core/profiler/profiler_analysis.proto", fileDescriptor_0133486ee83beb68)
}

var fileDescriptor_0133486ee83beb68 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x26, 0xe9, 0x36, 0xd6, 0xb7, 0x6e, 0x43, 0x16, 0x42, 0x59, 0x10, 0x30, 0x65, 0x0c, 0x76,
	0x4a, 0x51, 0x01, 0x09, 0x4d, 0xe2, 0x50, 0x60, 0xa0, 0x1d, 0x56, 0x4d, 0x61, 0x5c, 0x00, 0x29,
	0x72, 0xdb, 0xd7, 0x2e, 0x22, 0x89, 0x33, 0xdb, 0x69, 0xd5, 0x0b, 0x47, 0x7e, 0x0e, 0x17, 0xfe,
	0x04, 0x3f, 0x0b, 0xd9, 0x4e, 0xdb, 0xb4, 0x6a, 0xe9, 0x7a, 0xb3, 0xbf, 0xf7, 0x9e, 0xdf, 0xf7,
	0x7d, 0xb6, 0x1f, 0xbc, 0x90, 0x98, 0x0a, 0xc6, 0x7b, 0x31, 0x1b, 0xd6, 0x3b, 0x8c, 0x63, 0x3d,
	0xe3, 0xac, 0x17, 0xc5, 0xc8, 0x27, 0x8b, 0x90, 0xa6, 0x34, 0x1e, 0x89, 0x48, 0xf8, 0x19, 0x67,
	0x92, 0x11, 0x98, 0x56, 0xb8, 0xf5, 0xd5, 0xd5, 0x02, 0xf9, 0x20, 0xea, 0xa0, 0x29, 0xf6, 0x7e,
	0x5b, 0xe0, 0xb4, 0x70, 0x78, 0x69, 0xa2, 0x9f, 0x51, 0x88, 0x88, 0xa5, 0x01, 0xde, 0xe4, 0x28,
	0x24, 0x79, 0x05, 0x77, 0xb9, 0x59, 0x3a, 0xd6, 0xa1, 0x75, 0xb2, 0xd3, 0x70, 0xfd, 0xe9, 0xf9,
	0x7e, 0x51, 0x53, 0x24, 0x07, 0xe3, 0x54, 0xf2, 0x1c, 0xf6, 0x39, 0x66, 0x4c, 0x44, 0x92, 0xf1,
	0x51, 0xc8, 0x19, 0x93, 0x8e, 0x7d, 0x68, 0x9d, 0x54, 0x83, 0xbd, 0x29, 0x1c, 0x30, 0x26, 0xc9,
	0x7d, 0xd8, 0xbc, 0x66, 0x42, 0x0a, 0xa7, 0x72, 0x58, 0x39, 0xa9, 0x06, 0x66, 0x43, 0x1e, 0x01,
	0x08, 0x43, 0x23, 0x8c, 0xba, 0xce, 0x86, 0xae, 0xac, 0x16, 0xc8, 0x79, 0xd7, 0xa3, 0x70, 0xb0,
	0x80, 0xaf, 0xc8, 0x58, 0x2a, 0x90, 0x1c, 0xc1, 0x2e, 0x72, 0xce, 0x78, 0x98, 0xa0, 0x10, 0xb4,
	0x8f, 0x9a, 0x76, 0x35, 0xa8, 0x69, 0xf0, 0xc2, 0x60, 0xe4, 0x09, 0xec, 0x60, 0x92, 0xc9, 0x51,
	0x28, 0x39, 0xed, 0xa0, 0xe6, 0xb6, 0x1d, 0x80, 0x86, 0xae, 0x14, 0xe2, 0x5d, 0x80, 0x77, 0x96,
	0xe6, 0xc9, 0x6c, 0x0f, 0xd1, 0x4c, 0xbb, 0x57, 0x8c, 0xc5, 0x22, 0x58, 0x2e, 0xd3, 0x5a, 0x24,
	0xd3, 0xfb, 0x0e, 0x64, 0xf6, 0xa8, 0xf3, 0xb4, 0xc7, 0xe6, 0x64, 0x5a, 0x73, 0x32, 0xd5, 0xe9,
	0x74, 0x40, 0xa3, 0x98, 0xb6, 0x63, 0x0c, 0xa5, 0xea, 0xeb, 0xd8, 0xda, 0xa5, 0xbd, 0x09, 0xac,
	0xd9, 0x78, 0xbf, 0x2c, 0x38, 0xfa, 0x2f, 0xdb, 0x75, 0xac, 0x39, 0x85, 0xed, 0x82, 0x82, 0x69,
	0xb7, 0xd3, 0x78, 0xbc, 0xe0, 0xc6, 0x4b, 0x32, 0x82, 0x49, 0xbe, 0xf7, 0xc7, 0x86, 0x83, 0xd9,
	0x84, 0x0f, 0x54, 0xd2, 0x75, 0xdd, 0x9a, 0xf3, 0xc5, 0x9e, 0xf7, 0xe5, 0x21, 0x54, 0xd5, 0x33,
	0x09, 0x53, 0x9a, 0xa0, 0xb3, 0xa9, 0xa3, 0xdb, 0x0a, 0x68, 0xd1, 0x04, 0x55, 0x50, 0x59, 0x65,
	0x82, 0x15, 0x13, 0x54, 0x80, 0x0e, 0x7e, 0x01, 0xc8, 0x28, 0xa7, 0x09, 0x4a, 0xe4, 0xc2, 0xd9,
	0xd0, 0xea, 0x5e, 0x2f, 0x57, 0x57, 0x22, 0xef, 0x5f, 0x4e, 0xea, 0xce, 0x52, 0xc9, 0x47, 0x41,
	0xe9, 0x20, 0xf7, 0x2d, 0xec, 0xcf, 0x85, 0xc9, 0x3d, 0xa8, 0xfc, 0xc0, 0x51, 0xa1, 0x4f, 0x2d,
	0xd5, 0x4b, 0x1f, 0xd0, 0x38, 0xc7, 0x42, 0x8f, 0xd9, 0x9c, 0xda, 0x6f, 0x2c, 0xef, 0x27, 0xb8,
	0x8b, 0xfa, 0xae, 0x73, 0x69, 0x47, 0xb0, 0xcb, 0x72, 0x99, 0xe5, 0x32, 0xec, 0x31, 0x9e, 0xd0,
	0xf1, 0x6f, 0xab, 0x19, 0xf0, 0xa3, 0xc6, 0xc8, 0x03, 0xd8, 0x32, 0x7b, 0xed, 0x4b, 0x2d, 0x28,
	0x76, 0x8d, 0xbf, 0x36, 0xec, 0x17, 0x04, 0x9a, 0xc5, 0x58, 0x21, 0xdf, 0x00, 0x5a, 0x38, 0x2c,
	0xf8, 0x90, 0xa7, 0x65, 0x8f, 0x96, 0x8d, 0x0a, 0xf7, 0x78, 0x45, 0x96, 0x11, 0xe4, 0xdd, 0x21,
	0x37, 0x50, 0x53, 0xcf, 0x75, 0xfc, 0x4e, 0x89, 0x5f, 0x2e, 0x5c, 0xfd, 0xed, 0xdc, 0xfa, 0xad,
	0xf3, 0x27, 0x2d, 0x11, 0xc8, 0x27, 0x94, 0x45, 0x82, 0x0a, 0x2a, 0x8f, 0xc9, 0xf1, 0xad, 0xee,
	0xde, 0x7d, 0xb6, 0x2a, 0x6d, 0xdc, 0xe6, 0xdd, 0xfb, 0xaf, 0xcd, 0x7e, 0x24, 0xaf, 0xf3, 0xb6,
	0xdf, 0x61, 0x49, 0x79, 0x10, 0x2f, 0x5e, 0xf6, 0x99, 0x99, 0xd0, 0x33, 0x63, 0xba, 0xbd, 0xa5,
	0xc7, 0xf2, 0xcb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0x87, 0x94, 0x22, 0x07, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProfileAnalysisClient is the client API for ProfileAnalysis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfileAnalysisClient interface {
	// Starts a profiling session, blocks until it completes.
	// TPUProfileAnalysis service delegate this to TPUProfiler service.
	// Populate the profiled data in repository, then return status to caller.
	NewSession(ctx context.Context, in *NewProfileSessionRequest, opts ...grpc.CallOption) (*NewProfileSessionResponse, error)
	// Enumerate existing sessions and return available profile tools.
	EnumSessions(ctx context.Context, in *EnumProfileSessionsAndToolsRequest, opts ...grpc.CallOption) (*EnumProfileSessionsAndToolsResponse, error)
	// Retrieve specific tool's data for specific session.
	GetSessionToolData(ctx context.Context, in *ProfileSessionDataRequest, opts ...grpc.CallOption) (*ProfileSessionDataResponse, error)
}

type profileAnalysisClient struct {
	cc *grpc.ClientConn
}

func NewProfileAnalysisClient(cc *grpc.ClientConn) ProfileAnalysisClient {
	return &profileAnalysisClient{cc}
}

func (c *profileAnalysisClient) NewSession(ctx context.Context, in *NewProfileSessionRequest, opts ...grpc.CallOption) (*NewProfileSessionResponse, error) {
	out := new(NewProfileSessionResponse)
	err := c.cc.Invoke(ctx, "/tensorflow.ProfileAnalysis/NewSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileAnalysisClient) EnumSessions(ctx context.Context, in *EnumProfileSessionsAndToolsRequest, opts ...grpc.CallOption) (*EnumProfileSessionsAndToolsResponse, error) {
	out := new(EnumProfileSessionsAndToolsResponse)
	err := c.cc.Invoke(ctx, "/tensorflow.ProfileAnalysis/EnumSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileAnalysisClient) GetSessionToolData(ctx context.Context, in *ProfileSessionDataRequest, opts ...grpc.CallOption) (*ProfileSessionDataResponse, error) {
	out := new(ProfileSessionDataResponse)
	err := c.cc.Invoke(ctx, "/tensorflow.ProfileAnalysis/GetSessionToolData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfileAnalysisServer is the server API for ProfileAnalysis service.
type ProfileAnalysisServer interface {
	// Starts a profiling session, blocks until it completes.
	// TPUProfileAnalysis service delegate this to TPUProfiler service.
	// Populate the profiled data in repository, then return status to caller.
	NewSession(context.Context, *NewProfileSessionRequest) (*NewProfileSessionResponse, error)
	// Enumerate existing sessions and return available profile tools.
	EnumSessions(context.Context, *EnumProfileSessionsAndToolsRequest) (*EnumProfileSessionsAndToolsResponse, error)
	// Retrieve specific tool's data for specific session.
	GetSessionToolData(context.Context, *ProfileSessionDataRequest) (*ProfileSessionDataResponse, error)
}

// UnimplementedProfileAnalysisServer can be embedded to have forward compatible implementations.
type UnimplementedProfileAnalysisServer struct {
}

func (*UnimplementedProfileAnalysisServer) NewSession(ctx context.Context, req *NewProfileSessionRequest) (*NewProfileSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewSession not implemented")
}
func (*UnimplementedProfileAnalysisServer) EnumSessions(ctx context.Context, req *EnumProfileSessionsAndToolsRequest) (*EnumProfileSessionsAndToolsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnumSessions not implemented")
}
func (*UnimplementedProfileAnalysisServer) GetSessionToolData(ctx context.Context, req *ProfileSessionDataRequest) (*ProfileSessionDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessionToolData not implemented")
}

func RegisterProfileAnalysisServer(s *grpc.Server, srv ProfileAnalysisServer) {
	s.RegisterService(&_ProfileAnalysis_serviceDesc, srv)
}

func _ProfileAnalysis_NewSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewProfileSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileAnalysisServer).NewSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tensorflow.ProfileAnalysis/NewSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileAnalysisServer).NewSession(ctx, req.(*NewProfileSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileAnalysis_EnumSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnumProfileSessionsAndToolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileAnalysisServer).EnumSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tensorflow.ProfileAnalysis/EnumSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileAnalysisServer).EnumSessions(ctx, req.(*EnumProfileSessionsAndToolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfileAnalysis_GetSessionToolData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfileSessionDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileAnalysisServer).GetSessionToolData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tensorflow.ProfileAnalysis/GetSessionToolData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileAnalysisServer).GetSessionToolData(ctx, req.(*ProfileSessionDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProfileAnalysis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tensorflow.ProfileAnalysis",
	HandlerType: (*ProfileAnalysisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewSession",
			Handler:    _ProfileAnalysis_NewSession_Handler,
		},
		{
			MethodName: "EnumSessions",
			Handler:    _ProfileAnalysis_EnumSessions_Handler,
		},
		{
			MethodName: "GetSessionToolData",
			Handler:    _ProfileAnalysis_GetSessionToolData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tensorflow/core/profiler/profiler_analysis.proto",
}
